{"html" : "<table class=\"jb_params\" id=\"jb_params\">\n\n    <tr class=\"header\">\n\n        <td class=\"blank\"></td>\n    <td class=\"blank\"></td>\n\n          <th>Postcode</th>      <th>Location</th>      <th>Last Updated</th>      <th>Education</th>      <th>Industry</th>      <th>Job Type</th>      <th>Other</th>\n  </tr>\n\n    <tr class=\"header\">\n\n        <td class=\"blank\"></td>\n\n        <th><input style=\"border: none\" type=\"checkbox\" name=\"master_jb_select\" id=\"master_jb_select\" onclick=\"jb_params.master_toggle(event)\" ></th>\n\n          <td><input type=\"text\" value=\"\" name=\"jb_postcode_postcode\" id=\"jb_postcode_postcode\" size=\"10\" onchange=\"jb_params.onchange('jb_postcode', 'jb_postcode_postcode')\">  \n              <div class=\"spacer\"></div>    \n        \n      <select name=\"jb_postcode_radius\" id=\"jb_postcode_radius\" onchange=\"jb_params.onchange('jb_postcode', 'jb_postcode_radius')\">  <option value=\"1\" >1 mile</option>  <option value=\"2\" >2 miles</option>  <option value=\"5\" >5 miles</option>  <option value=\"10\" selected>10 miles</option>  <option value=\"25\" >25 miles</option>  <option value=\"50\" >50 miles</option>  <option value=\"100\" >100 miles</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <input type=\"hidden\" name=\"jb_postcode_units\" id=\"jb_postcode_units\" value=\"m\">  \n              <div class=\"spacer\"></div>    \n        \n      <select name=\"jb_postcode_country\" id=\"jb_postcode_country\" onchange=\"jb_params.onchange('jb_postcode', 'jb_postcode_country')\">  <option value=\"US\" selected>United States</option>  <option value=\"AU\" >Australia</option>  <option value=\"AT\" >Austria</option>  <option value=\"BE\" >Belgium</option>  <option value=\"CA\" >Canada</option>  <option value=\"CZ\" >Czech Republic</option>  <option value=\"DK\" >Denmark</option>  <option value=\"FI\" >Finland</option>  <option value=\"FR\" >France</option>  <option value=\"DE\" >Germany</option>  <option value=\"IN\" >India</option>  <option value=\"IT\" >Italy</option>  <option value=\"JP\" >Japan</option>  <option value=\"LU\" >Luxembourg</option>  <option value=\"MX\" >Mexico</option>  <option value=\"NL\" >Netherlands</option>  <option value=\"NO\" >Norway</option>  <option value=\"PL\" >Poland</option>  <option value=\"PT\" >Portugal</option>  <option value=\"RU\" >Russia</option>  <option value=\"ZA\" >South Africa</option>  <option value=\"ES\" >Spain</option>  <option value=\"SE\" >Sweden</option>  <option value=\"CH\" >Switzerland</option>  <option value=\"UK\" >United Kingdom</option>  <option value=\"VE\" >Venezuela</option></select></td>      <td><select name=\"jb_location_country\" id=\"jb_location_country\" onchange=\"jb_params.onchange('jb_location', 'jb_location_country')\">  <option value=\"US\" selected>United States</option>  <option value=\"AA\" >All countries</option>  <option value=\"AL\" >Albania</option>  <option value=\"AD\" >Andorra</option>  <option value=\"AQ\" >Antarctica</option>  <option value=\"AR\" >Argentina</option>  <option value=\"AM\" >Armenia</option>  <option value=\"AU\" >Australia</option>  <option value=\"AT\" >Austria</option>  <option value=\"AZ\" >Azerbaijan</option>  <option value=\"BS\" >Bahamas</option>  <option value=\"BH\" >Bahrain</option>  <option value=\"BD\" >Bangladesh</option>  <option value=\"BB\" >Barbados</option>  <option value=\"BY\" >Belarus</option>  <option value=\"BE\" >Belgium</option>  <option value=\"BM\" >Bermuda</option>  <option value=\"BO\" >Bolivia</option>  <option value=\"BA\" >Bosnia</option>  <option value=\"BR\" >Brazil</option>  <option value=\"BG\" >Bulgaria</option>  <option value=\"CA\" >Canada</option>  <option value=\"CB\" >Caribbean Nations</option>  <option value=\"KY\" >Cayman Islands</option>  <option value=\"CL\" >Chile</option>  <option value=\"CN\" >China</option>  <option value=\"CO\" >Colombia</option>  <option value=\"CR\" >Costa Rica</option>  <option value=\"HR\" >Croatia</option>  <option value=\"CU\" >Cuba</option>  <option value=\"CY\" >Cyprus</option>  <option value=\"CZ\" >Czech Republic</option>  <option value=\"DK\" >Denmark</option>  <option value=\"EC\" >Ecuador</option>  <option value=\"EG\" >Egypt</option>  <option value=\"SV\" >El Salvador</option>  <option value=\"EE\" >Estonia</option>  <option value=\"FO\" >Faroe Islands</option>  <option value=\"FJ\" >Fiji</option>  <option value=\"FI\" >Finland</option>  <option value=\"FR\" >France</option>  <option value=\"GE\" >Georgia</option>  <option value=\"DE\" >Germany</option>  <option value=\"GH\" >Ghana</option>  <option value=\"GI\" >Gibraltar</option>  <option value=\"GR\" >Greece</option>  <option value=\"GL\" >Greenland</option>  <option value=\"GT\" >Guatemala</option>  <option value=\"HN\" >Honduras</option>  <option value=\"HK\" >Hong Kong</option>  <option value=\"HU\" >Hungary</option>  <option value=\"IS\" >Iceland</option>  <option value=\"IN\" >India</option>  <option value=\"ID\" >Indonesia</option>  <option value=\"IR\" >Iran</option>  <option value=\"IQ\" >Iraq</option>  <option value=\"IE\" >Ireland</option>  <option value=\"IL\" >Israel</option>  <option value=\"IT\" >Italy</option>  <option value=\"JM\" >Jamaica</option>  <option value=\"JP\" >Japan</option>  <option value=\"JO\" >Jordan</option>  <option value=\"KZ\" >Kazakhstan</option>  <option value=\"KE\" >Kenya</option>  <option value=\"KI\" >Kiribati</option>  <option value=\"KR\" >South Korea</option>  <option value=\"KP\" >North Korea</option>  <option value=\"KW\" >Kuwait</option>  <option value=\"KG\" >Kyrgyzstan</option>  <option value=\"LV\" >Latvia</option>  <option value=\"LB\" >Lebanon</option>  <option value=\"LY\" >Libya</option>  <option value=\"LI\" >Liechtenstein</option>  <option value=\"LT\" >Lithuania</option>  <option value=\"LU\" >Luxembourg</option>  <option value=\"MK\" >Macedonia</option>  <option value=\"MG\" >Madagascar</option>  <option value=\"MY\" >Malaysia</option>  <option value=\"MV\" >Maldives</option>  <option value=\"MT\" >Malta</option>  <option value=\"MU\" >Mauritius</option>  <option value=\"MX\" >Mexico</option>  <option value=\"MD\" >Moldova</option>  <option value=\"MC\" >Monaco</option>  <option value=\"MN\" >Mongolia</option>  <option value=\"MS\" >Montserrat</option>  <option value=\"MA\" >Morocco</option>  <option value=\"MM\" >Myanmar</option>  <option value=\"NP\" >Nepal</option>  <option value=\"NL\" >Netherlands</option>  <option value=\"NZ\" >New Zealand</option>  <option value=\"NI\" >Nicaragua</option>  <option value=\"NG\" >Nigeria</option>  <option value=\"NO\" >Norway</option>  <option value=\"PK\" >Pakistan</option>  <option value=\"PA\" >Panama</option>  <option value=\"PG\" >Papua New Guinea</option>  <option value=\"PY\" >Paraguay</option>  <option value=\"PE\" >Peru</option>  <option value=\"PH\" >Philippines</option>  <option value=\"PL\" >Poland</option>  <option value=\"PT\" >Portugal</option>  <option value=\"PR\" >Puerto Rico</option>  <option value=\"QA\" >Qatar</option>  <option value=\"RO\" >Romania</option>  <option value=\"RU\" >Russia</option>  <option value=\"WS\" >Samoa</option>  <option value=\"SM\" >San Marino</option>  <option value=\"SA\" >Saudi Arabia</option>  <option value=\"RS\" >Serbia</option>  <option value=\"SC\" >Seychelles</option>  <option value=\"SG\" >Singapore</option>  <option value=\"SK\" >Slovakia</option>  <option value=\"SI\" >Slovenia</option>  <option value=\"ZA\" >South Africa</option>  <option value=\"ES\" >Spain</option>  <option value=\"LK\" >Sri Lanka</option>  <option value=\"OM\" >Oman</option>  <option value=\"SE\" >Sweden</option>  <option value=\"CH\" >Switzerland</option>  <option value=\"SY\" >Syria</option>  <option value=\"TJ\" >Tadjikistan</option>  <option value=\"TW\" >Taiwan</option>  <option value=\"TH\" >Thailand</option>  <option value=\"TT\" >Trinidad and Tobago</option>  <option value=\"TN\" >Tunisia</option>  <option value=\"TR\" >Turkey</option>  <option value=\"TM\" >Turkmenistan</option>  <option value=\"UA\" >Ukraine</option>  <option value=\"AE\" >United Arab Emirates</option>  <option value=\"UK\" >United Kingdom</option>  <option value=\"UY\" >Uruguay</option>  <option value=\"UZ\" >Uzbekistan</option>  <option value=\"VA\" >Vatican City</option>  <option value=\"VE\" >Venezuela</option>  <option value=\"VN\" >Viet Nam</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <select name=\"jb_location_region\" id=\"jb_location_region\" onchange=\"jb_params.onchange('jb_location', 'jb_location_region')\">  <option value=\"US\" selected>All states</option>  <option value=\"AL\" >Alabama</option>  <option value=\"AK\" >Alaska</option>  <option value=\"AZ\" >Arizona</option>  <option value=\"AR\" >Arkansas</option>  <option value=\"CA\" >California</option>  <option value=\"CO\" >Colorado</option>  <option value=\"CT\" >Connecticut</option>  <option value=\"DE\" >Delaware</option>  <option value=\"DC\" >Dist of Columbia</option>  <option value=\"FL\" >Florida</option>  <option value=\"GA\" >Georgia</option>  <option value=\"HI\" >Hawaii</option>  <option value=\"ID\" >Idaho</option>  <option value=\"IL\" >Illinois</option>  <option value=\"IN\" >Indiana</option>  <option value=\"IA\" >Iowa</option>  <option value=\"KS\" >Kansas</option>  <option value=\"KY\" >Kentucky</option>  <option value=\"LA\" >Louisiana</option>  <option value=\"ME\" >Maine</option>  <option value=\"MD\" >Maryland</option>  <option value=\"MA\" >Massachusetts</option>  <option value=\"MI\" >Michigan</option>  <option value=\"MN\" >Minnesota</option>  <option value=\"MS\" >Mississippi</option>  <option value=\"MO\" >Missouri</option>  <option value=\"MT\" >Montana</option>  <option value=\"NE\" >Nebraska</option>  <option value=\"NV\" >Nevada</option>  <option value=\"NH\" >New Hampshire</option>  <option value=\"NJ\" >New Jersey</option>  <option value=\"NM\" >New Mexico</option>  <option value=\"NY\" >New York</option>  <option value=\"NC\" >North Carolina</option>  <option value=\"ND\" >North Dakota</option>  <option value=\"OH\" >Ohio</option>  <option value=\"OK\" >Oklahoma</option>  <option value=\"OR\" >Oregon</option>  <option value=\"PA\" >Pennsylvania</option>  <option value=\"PR\" >Puerto Rico</option>  <option value=\"RI\" >Rhode Island</option>  <option value=\"SC\" >South Carolina</option>  <option value=\"SD\" >South Dakota</option>  <option value=\"TN\" >Tennessee</option>  <option value=\"TX\" >Texas</option>  <option value=\"UT\" >Utah</option>  <option value=\"VT\" >Vermont</option>  <option value=\"VA\" >Virginia</option>  <option value=\"WA\" >Washington</option>  <option value=\"WV\" >West Virginia</option>  <option value=\"WI\" >Wisconsin</option>  <option value=\"WY\" >Wyoming</option></select></td>      <td><select name=\"jb_recency\" id=\"jb_recency\" onchange=\"jb_params.onchange('jb_recency', 'jb_recency')\">  <option value=\"1\" >1 day</option>  <option value=\"2\" >2 days</option>  <option value=\"3\" >3 days</option>  <option value=\"7\" >1 week</option>  <option value=\"14\" >2 weeks</option>  <option value=\"31\" >1 month</option>  <option value=\"90\" >3 months</option>  <option value=\"180\" >6 months</option>  <option value=\"365\" >1 year</option>  <option value=\"0\" selected>All CVs</option></select></td>      <td><select name=\"jb_education\" id=\"jb_education\" onchange=\"jb_params.onchange('jb_education', 'jb_education')\">  <option value=\"XX\" selected>Any</option>  <option value=\"HS\" >High School</option>  <option value=\"BD\" >Bachelor</option>  <option value=\"MD\" >Masters</option>  <option value=\"PD\" >Doctorate</option></select></td>      <td><select name=\"jb_industry\" id=\"jb_industry\" size=\"4\" multiple onchange=\"jb_params.onchange('jb_industry', 'jb_industry')\">  <option value=\"all\" selected>All</option>  <option value=\"accounting\" >Accounting</option>  <option value=\"automotive\" >Automotive</option>  <option value=\"aviation\" >Aviation</option>  <option value=\"banking\" >Banking/Finance</option>  <option value=\"construction\" >Construction</option>  <option value=\"consultancy\" >Consultancy</option>  <option value=\"customer_service\" >Customer Service</option>  <option value=\"defence\" >Defence</option>  <option value=\"distribution\" >Distribution</option>  <option value=\"education\" >Education</option>  <option value=\"electronics\" >Electronics</option>  <option value=\"engineering\" >Engineering</option>  <option value=\"graduate\" >Graduate</option>  <option value=\"health\" >Health</option>  <option value=\"hospitality_catering\" >Hospitality/Catering</option>  <option value=\"hr\" >HR</option>  <option value=\"it\" >IT</option>  <option value=\"insurance\" >Insurance</option>  <option value=\"legal\" >Legal</option>  <option value=\"transport\" >Transport</option>  <option value=\"manufacturing\" >Manufacturing</option>  <option value=\"marketing\" >Marketing</option>  <option value=\"media\" >Media</option>  <option value=\"public_sector\" >Public Sector</option>  <option value=\"recruitment\" >Recruitment</option>  <option value=\"retail\" >Retail</option>  <option value=\"sales\" >Sales</option>  <option value=\"scientific\" >Scientific</option>  <option value=\"telecomms\" >Telecomms</option>  <option value=\"training\" >Training</option>  <option value=\"travel\" >Travel</option></select></td>      <td><select name=\"jb_job_type\" id=\"jb_job_type\" size=\"4\" multiple onchange=\"jb_params.onchange('jb_job_type', 'jb_job_type')\">  <option value=\"perm\" >Permanent</option>  <option value=\"cont\" >Contract</option>  <option value=\"full\" >Full Time</option>  <option value=\"part\" >Part Time</option></select></td>      <td><label>Max results</label>    <div class=\"smallSpacer\"></div>\n\n\n<select name=\"jb_other_max_results\" id=\"jb_other_max_results\" onchange=\"jb_params.onchange('jb_other', 'jb_other_max_results')\">  <option value=\"25\" >25</option>  <option value=\"50\" selected>50</option>  <option value=\"100\" >100</option>  <option value=\"200\" >200</option></select></td>\n  </tr>\n\n    \n    \n    \n      \n        <tr id=\"efc_row\" class=\"unselected\">\n  \n                  <th align=\"left\" class=\"header\" id=\"name_efc_select\">EFinancial</th>\n  \n            <th class=\"header\"><input style=\"border: none\" type=\"checkbox\" class=\"sourcesSearchInput\" name=\"SRCH_EFC\" id=\"efc_select\" onclick=\"jb_params.toggle('efc', event)\" ></th>\n  \n      <td></td>  \n  \n  \n  \n    \n          <td>\n\n      \n      <label>Location</label>    <div class=\"smallSpacer\"></div>\n\n<input type=\"text\" value=\"United States (6252001)\" name=\"jb_efc_location_location\" id=\"jb_efc_location_location\" size=\"60\" maxlength=\"100\">\n\n<div id=\"jb_efc_location_location_completions\" class=\"autocomplete\"></div>\n<script type=\"text/javascript\">var jb_efc_location_location_completer_options = { parameters: \"ui_name=jb_efc_location_location\" };\n\nif (jb_params.ajax_params.size() > 0 && jb_params.ajax_params.toQueryString) {jb_efc_location_location_completer_options.parameters = jb_efc_location_location_completer_options.parameters ? jb_efc_location_location_completer_options.parameters + '&' : '';jb_efc_location_location_completer_options.parameters+= jb_params.ajax_params.toQueryString();\n}\n\nnew Ajax.Autocompleter('jb_efc_location_location', 'jb_efc_location_location_completions', jb_params.ajax_auto_completer, jb_efc_location_location_completer_options);</script>  \n              <div class=\"spacer\"></div>    \n        \n      <label>Radius search (cities only)</label>    <div class=\"smallSpacer\"></div>\n\n\n<select name=\"jb_efc_location_radius\" id=\"jb_efc_location_radius\" >  <option value=\"8\" >8</option>  <option value=\"15\" selected>15</option>  <option value=\"30\" >30</option>  <option value=\"60\" >60</option>  <option value=\"120\" >120</option></select>\n      </td>  \n  \n  \n  \n    \n          <td>\n\n      \n      <select name=\"jb_efc_recency\" id=\"jb_efc_recency\" >  <option value=\"ONE_DAY\" >1 day</option>  <option value=\"TWO_DAYS\" >2 days</option>  <option value=\"THREE_DAYS\" >3 days</option>  <option value=\"ONE_WEEK\" >1 week</option>  <option value=\"TWO_WEEKS\" >2 weeks</option>  <option value=\"ONE_MONTH\" >1 month</option>  <option value=\"THREE_MONTHS\" >3 months</option>  <option value=\"SIX_MONTHS\" >6 months</option>  <option value=\"ONE_YEAR\" >1 year</option>  <option value=\"OTHER\" selected>> 1 year</option></select>\n      </td>  \n  \n  \n  \n    \n          <td>\n\n      \n      <select name=\"jb_efc_education\" id=\"jb_efc_education\" size=\"4\" multiple>  <option value=\"EDUCATION_LEVEL_1\" >Not specified</option>  <option value=\"EDUCATION_LEVEL_2\" >High School</option>  <option value=\"EDUCATION_LEVEL_3\" >Certificate/Diploma</option>  <option value=\"EDUCATION_LEVEL_4\" >Associate Degree</option>  <option value=\"EDUCATION_LEVEL_5\" >3 or 4 yr. Undergraduate degree</option>  <option value=\"EDUCATION_LEVEL_6\" >Postgraduate Degree</option>  <option value=\"EDUCATION_LEVEL_7\" >Postgraduate Degree - MBA</option>  <option value=\"EDUCATION_LEVEL_8\" >Postgraduate Degree - Masters</option>  <option value=\"EDUCATION_LEVEL_9\" >Postgraduate Degree - JD</option>  <option value=\"EDUCATION_LEVEL_10\" >Postgraduate Degree - PhD/Doctorate</option>  <option value=\"EDUCATION_LEVEL_11\" >Other Degree</option></select>\n      </td>  \n  \n  \n  \n    \n          <td>\n\n      \n      <select name=\"jb_efc_industry\" id=\"jb_efc_industry\" size=\"4\" multiple>  <option value=\"ACCOUNTING_FINANCE\" >Accounting &amp; Finance</option>  <option value=\"ASSET_MANAGEMENT\" >Asset Management</option>  <option value=\"CAPITAL_MARKETS\" >Capital Markets</option>  <option value=\"COMMODITIES\" >Commodities</option>  <option value=\"COMPLIANCE_LEGAL\" >Compliance/Legal</option>  <option value=\"CONSULTANCY\" >Consultancy</option>  <option value=\"CORPORATE_BANKING\" >Corporate Banking</option>  <option value=\"CREDIT\" >Credit</option>  <option value=\"DEBT_FIXED_INCOME\" >Debt/Fixed Income</option>  <option value=\"DERIVATIVES\" >Derivatives</option>  <option value=\"EQUITIES\" >Equities</option>  <option value=\"FX_MONEY_MARKETS\" >FX &amp; Money Markets</option>  <option value=\"GLOBAL_CUSTODY\" >Global Custody</option>  <option value=\"GRADUATES_INTERNSHIPS\" >Graduates &amp; Internships</option>  <option value=\"HEDGE_FUNDS\" >Hedge Funds</option>  <option value=\"HR_RECRUITMENT\" >HR &amp; Recruitment</option>  <option value=\"INDUSTRY_COMMERCE\" >Industry &amp; Commerce</option>  <option value=\"INFORMATION_SERVICES\" >Information Services</option>  <option value=\"INFORMATION_TECHNOLOGY\" >Information Technology</option>  <option value=\"INSURANCE\" >Insurance</option>  <option value=\"INVESTMENT_BANKING_M_A\" >Investment Banking/M&amp;A</option>  <option value=\"INVESTMENT_CONSULTING\" >Investment Consulting</option>  <option value=\"INVESTOR_RELATIONS_PR\" >Investor Relations &amp; PR</option>  <option value=\"ISLAMIC_FINANCE\" >Islamic Finance</option>  <option value=\"OPERATIONS\" >Operations</option>  <option value=\"PRIVATE_BANKING_WEALTH_MANAGEMENT\" >Banking &amp; Wealth Management</option>  <option value=\"PRIVATE_EQUITY_VENTURE_CAPITAL\" >Equity &amp; Venture Capital</option>  <option value=\"PUBLIC_SECTOR\" >Public Sector</option>  <option value=\"QUANTITATIVE_ANALYTICS\" >Quantitative Analytics</option>  <option value=\"REAL_ESTATE\" >Real Estate</option>  <option value=\"RESEARCH\" >Research</option>  <option value=\"RETAIL_BANKING\" >Retail Banking</option>  <option value=\"RISK_MANAGEMENT\" >Risk Management</option>  <option value=\"SALES_MARKETING\" >Sales &amp; Marketing</option>  <option value=\"TRADING\" >Trading</option></select>\n      </td>  \n  \n  \n  \n    \n          <td>\n\n      \n      <label>Position type</label>    <div class=\"smallSpacer\"></div>\n\n\n<select name=\"jb_efc_job_type_position\" id=\"jb_efc_job_type_position\" size=\"3\" multiple>  <option value=\"0\" selected>Any</option>  <option value=\"PERMANENT\" >Permanent</option>  <option value=\"CONTRACT\" >Contract</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <label>Employment type</label>    <div class=\"smallSpacer\"></div>\n\n\n<select name=\"jb_efc_job_type_empltype\" id=\"jb_efc_job_type_empltype\" size=\"3\" multiple>  <option value=\"0\" selected>Any</option>  <option value=\"FULL_TIME\" >Full time</option>  <option value=\"PART_TIME\" >Part time</option></select>\n      </td>  \n  \n  \n  \n    \n          <td>\n\n      \n      <label>Max results</label>    <div class=\"smallSpacer\"></div>\n\n\n<select name=\"jb_efc_other_max_results\" id=\"jb_efc_other_max_results\" >  <option value=\"100\" selected>100</option>  <option value=\"200\" >200</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <label>Work experience</label>    <div class=\"smallSpacer\"></div>\n\n\n<select name=\"jb_efc_other_workexp\" id=\"jb_efc_other_workexp\" size=\"4\" multiple>  <option value=\"NO_EXPERIENCE\" >No exp.</option>  <option value=\"ONE_THREE_YEARS_EXPERIENCE\" >1-3 yrs</option>  <option value=\"THREE_FIVE_YEARS_EXPERIENCE\" >3-5 yrs</option>  <option value=\"FIVE_SEVEN_YEARS_EXPERIENCE\" >5-7 yrs</option>  <option value=\"SEVEN_TEN_YEARS_EXPERIENCE\" >7-10 yrs</option>  <option value=\"TEN_FIFTEEN_YEARS_EXPERIENCE\" >10-15 yrs</option>  <option value=\"MORE_THAN_FIFTEEN_YEARS_EXPERIENCE\" >15+ yrs</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <label>Language 1</label>    <div class=\"smallSpacer\"></div>\n\n\n<select name=\"jb_efc_other_language1\" id=\"jb_efc_other_language1\" size=\"4\">  <option value=\"\" selected>All languages</option>  <option value=\"EN\" >English</option>  <option value=\"FR\" >French</option>  <option value=\"AF\" >Afrikaans</option>  <option value=\"SQ\" >Albanian</option>  <option value=\"AR\" >Arabic</option>  <option value=\"HY\" >Armenian</option>  <option value=\"AK\" >Bantu</option>  <option value=\"EU\" >Basque</option>  <option value=\"BN\" >Bengali</option>  <option value=\"HA\" >Berber</option>  <option value=\"BG\" >Bulgarian</option>  <option value=\"CA\" >Catalan</option>  <option value=\"ZH_CMN\" >Chinese - Mandarin</option>  <option value=\"ZH_YUE\" >Chinese - Cantonese</option>  <option value=\"HR\" >Croatian</option>  <option value=\"CS\" >Czech</option>  <option value=\"DA\" >Danish</option>  <option value=\"NL\" >Dutch</option>  <option value=\"ET\" >Estonian</option>  <option value=\"FA_PES\" >Farsi</option>  <option value=\"TL\" >Filipino</option>  <option value=\"FI\" >Finnish</option>  <option value=\"GL\" >Galician</option>  <option value=\"DE\" >German</option>  <option value=\"EL\" >Greek</option>  <option value=\"GU\" >Gujurati</option>  <option value=\"HE\" >Hebrew</option>  <option value=\"HI\" >Hindi</option>  <option value=\"HU\" >Hungarian</option>  <option value=\"IS\" >Icelandic</option>  <option value=\"ID\" >Indonesian</option>  <option value=\"IT\" >Italian</option>  <option value=\"JA\" >Japanese</option>  <option value=\"KO\" >Korean</option>  <option value=\"KU\" >Kurdish</option>  <option value=\"LV\" >Latvian</option>  <option value=\"LT\" >Lithuanian</option>  <option value=\"MS\" >Malay</option>  <option value=\"NB\" >Norwegian</option>  <option value=\"FA_PRP\" >Persian</option>  <option value=\"PL\" >Polish</option>  <option value=\"PT\" >Portuguese</option>  <option value=\"RO\" >Romanian</option>  <option value=\"RU\" >Russian</option>  <option value=\"SR\" >Serbian</option>  <option value=\"SI\" >Sinhala</option>  <option value=\"SK\" >Slovak</option>  <option value=\"SL\" >Slovenian</option>  <option value=\"ES\" >Spanish</option>  <option value=\"SW\" >Swahili</option>  <option value=\"SV\" >Swedish</option>  <option value=\"TA\" >Tamil</option>  <option value=\"TH\" >Thai</option>  <option value=\"TR\" >Turkish</option>  <option value=\"UK\" >Ukrainian</option>  <option value=\"UR\" >Urdu</option>  <option value=\"UZ\" >Uzbek</option>  <option value=\"VI\" >Vietnamese</option>  <option value=\"CY\" >Welsh</option>  <option value=\"US\" >US English</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <label>Language 1 proficiency</label>    <div class=\"smallSpacer\"></div>\n\n\n<select name=\"jb_efc_other_langprof1\" id=\"jb_efc_other_langprof1\" size=\"4\">  <option value=\"\" selected>All fluencies</option>  <option value=\"FIRST_LANGUAGE\" >First Language</option>  <option value=\"FLUENT\" >Fluent</option>  <option value=\"COMPETENT\" >Competent</option>  <option value=\"BASIC\" >Basic</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <label>Language 2</label>    <div class=\"smallSpacer\"></div>\n\n\n<select name=\"jb_efc_other_language2\" id=\"jb_efc_other_language2\" size=\"4\">  <option value=\"\" selected>All languages</option>  <option value=\"EN\" >English</option>  <option value=\"FR\" >French</option>  <option value=\"AF\" >Afrikaans</option>  <option value=\"SQ\" >Albanian</option>  <option value=\"AR\" >Arabic</option>  <option value=\"HY\" >Armenian</option>  <option value=\"AK\" >Bantu</option>  <option value=\"EU\" >Basque</option>  <option value=\"BN\" >Bengali</option>  <option value=\"HA\" >Berber</option>  <option value=\"BG\" >Bulgarian</option>  <option value=\"CA\" >Catalan</option>  <option value=\"ZH_CMN\" >Chinese - Mandarin</option>  <option value=\"ZH_YUE\" >Chinese - Cantonese</option>  <option value=\"HR\" >Croatian</option>  <option value=\"CS\" >Czech</option>  <option value=\"DA\" >Danish</option>  <option value=\"NL\" >Dutch</option>  <option value=\"ET\" >Estonian</option>  <option value=\"FA_PES\" >Farsi</option>  <option value=\"TL\" >Filipino</option>  <option value=\"FI\" >Finnish</option>  <option value=\"GL\" >Galician</option>  <option value=\"DE\" >German</option>  <option value=\"EL\" >Greek</option>  <option value=\"GU\" >Gujurati</option>  <option value=\"HE\" >Hebrew</option>  <option value=\"HI\" >Hindi</option>  <option value=\"HU\" >Hungarian</option>  <option value=\"IS\" >Icelandic</option>  <option value=\"ID\" >Indonesian</option>  <option value=\"IT\" >Italian</option>  <option value=\"JA\" >Japanese</option>  <option value=\"KO\" >Korean</option>  <option value=\"KU\" >Kurdish</option>  <option value=\"LV\" >Latvian</option>  <option value=\"LT\" >Lithuanian</option>  <option value=\"MS\" >Malay</option>  <option value=\"NB\" >Norwegian</option>  <option value=\"FA_PRP\" >Persian</option>  <option value=\"PL\" >Polish</option>  <option value=\"PT\" >Portuguese</option>  <option value=\"RO\" >Romanian</option>  <option value=\"RU\" >Russian</option>  <option value=\"SR\" >Serbian</option>  <option value=\"SI\" >Sinhala</option>  <option value=\"SK\" >Slovak</option>  <option value=\"SL\" >Slovenian</option>  <option value=\"ES\" >Spanish</option>  <option value=\"SW\" >Swahili</option>  <option value=\"SV\" >Swedish</option>  <option value=\"TA\" >Tamil</option>  <option value=\"TH\" >Thai</option>  <option value=\"TR\" >Turkish</option>  <option value=\"UK\" >Ukrainian</option>  <option value=\"UR\" >Urdu</option>  <option value=\"UZ\" >Uzbek</option>  <option value=\"VI\" >Vietnamese</option>  <option value=\"CY\" >Welsh</option>  <option value=\"US\" >US English</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <label>Language 2 proficiency</label>    <div class=\"smallSpacer\"></div>\n\n\n<select name=\"jb_efc_other_langprof2\" id=\"jb_efc_other_langprof2\" size=\"4\">  <option value=\"\" selected>All fluencies</option>  <option value=\"FIRST_LANGUAGE\" >First Language</option>  <option value=\"FLUENT\" >Fluent</option>  <option value=\"COMPETENT\" >Competent</option>  <option value=\"BASIC\" >Basic</option></select>\n      </td>  \n    </tr>\n  \n    \n    \n      \n        <tr id=\"lib_row\" class=\"unselected\">\n  \n                  <th align=\"left\" class=\"header\" id=\"name_lib_select\">LinkedIn Basic</th>\n  \n            <th class=\"header\"><input style=\"border: none\" type=\"checkbox\" class=\"sourcesSearchInput\" name=\"SRCH_LIB\" id=\"lib_select\" onclick=\"jb_params.toggle('lib', event)\" ></th>\n  \n      <td>\n\n      \n      <input type=\"text\" value=\"\" name=\"jb_lib_postcode_postalCode\" id=\"jb_lib_postcode_postalCode\" size=\"10\" >  \n              <div class=\"spacer\"></div>    \n        \n      <select name=\"jb_lib_postcode_distance\" id=\"jb_lib_postcode_distance\" >  <option value=\"10\" selected>10 mi (15km)</option>  <option value=\"25\" >25 mi (40 km)</option>  <option value=\"35\" >35 mi (55 km)</option>  <option value=\"50\" >50 mi (80 km)</option>  <option value=\"75\" >75 mi (120 km)</option>  <option value=\"100\" >100 mi (160 km</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <select name=\"jb_lib_postcode_countryCode\" id=\"jb_lib_postcode_countryCode\" >  <option value=\"aa\" >Anywhere</option>  <option value=\"gb\" >United Kingdom</option>  <option value=\"us\" selected>United States</option>  <option value=\"af\" >Afghanistan</option>  <option value=\"ax\" >Aland Islands</option>  <option value=\"al\" >Albania</option>  <option value=\"dz\" >Algeria</option>  <option value=\"as\" >American Samoa</option>  <option value=\"ad\" >Andorra</option>  <option value=\"ao\" >Angola</option>  <option value=\"ai\" >Anguilla</option>  <option value=\"aq\" >Antarctica</option>  <option value=\"ag\" >Antigua/Barbuda</option>  <option value=\"ar\" >Argentina</option>  <option value=\"am\" >Armenia</option>  <option value=\"aw\" >Aruba</option>  <option value=\"au\" >Australia</option>  <option value=\"at\" >Austria</option>  <option value=\"az\" >Azerbaijan</option>  <option value=\"bs\" >Bahamas</option>  <option value=\"bh\" >Bahrain</option>  <option value=\"bd\" >Bangladesh</option>  <option value=\"bb\" >Barbados</option>  <option value=\"by\" >Belarus</option>  <option value=\"be\" >Belgium</option>  <option value=\"bz\" >Belize</option>  <option value=\"bj\" >Benin</option>  <option value=\"bm\" >Bermuda</option>  <option value=\"bt\" >Bhutan</option>  <option value=\"bo\" >Bolivia</option>  <option value=\"ba\" >Bosnia/Herzegovina</option>  <option value=\"bw\" >Botswana</option>  <option value=\"br\" >Brazil</option>  <option value=\"io\" >Brit. Indian Ocean Terr.</option>  <option value=\"bn\" >Brunei Darussalam</option>  <option value=\"bg\" >Bulgaria</option>  <option value=\"bf\" >Burkina Faso</option>  <option value=\"bi\" >Burundi</option>  <option value=\"kh\" >Cambodia</option>  <option value=\"cm\" >Cameroon</option>  <option value=\"ca\" >Canada</option>  <option value=\"cv\" >Cape Verde</option>  <option value=\"cb\" >Caribbean Nations</option>  <option value=\"ky\" >Cayman Islands</option>  <option value=\"cf\" >Central African Rep.</option>  <option value=\"td\" >Chad</option>  <option value=\"cl\" >Chile</option>  <option value=\"cn\" >China</option>  <option value=\"cx\" >Christmas Island</option>  <option value=\"cc\" >Cocos Islands</option>  <option value=\"co\" >Colombia</option>  <option value=\"km\" >Comoros</option>  <option value=\"cg\" >Congo</option>  <option value=\"ck\" >Cook Islands</option>  <option value=\"cr\" >Costa Rica</option>  <option value=\"ci\" >Ivory Coast</option>  <option value=\"hr\" >Croatia</option>  <option value=\"cu\" >Cuba</option>  <option value=\"cy\" >Cyprus</option>  <option value=\"cz\" >Czech Republic</option>  <option value=\"cd\" >Dem. Rep. of Congo</option>  <option value=\"dk\" >Denmark</option>  <option value=\"dj\" >Djibouti</option>  <option value=\"dm\" >Dominica</option>  <option value=\"do\" >Dominican Republic</option>  <option value=\"tp\" >East Timor</option>  <option value=\"ec\" >Ecuador</option>  <option value=\"eg\" >Egypt</option>  <option value=\"sv\" >El Salvador</option>  <option value=\"gq\" >Equatorial Guinea</option>  <option value=\"er\" >Eritrea</option>  <option value=\"ee\" >Estonia</option>  <option value=\"et\" >Ethiopia</option>  <option value=\"fk\" >Falkland Islands</option>  <option value=\"fo\" >Faroe Islands</option>  <option value=\"fm\" >Fed. States of Micronesia</option>  <option value=\"fj\" >Fiji</option>  <option value=\"fi\" >Finland</option>  <option value=\"fr\" >France</option>  <option value=\"gf\" >French Guiana</option>  <option value=\"pf\" >French Polynesia</option>  <option value=\"tf\" >French Southern Terr.</option>  <option value=\"ga\" >Gabon</option>  <option value=\"gm\" >Gambia</option>  <option value=\"ge\" >Georgia</option>  <option value=\"de\" >Germany</option>  <option value=\"gh\" >Ghana</option>  <option value=\"gi\" >Gibraltar</option>  <option value=\"gr\" >Greece</option>  <option value=\"gl\" >Greenland</option>  <option value=\"gd\" >Grenada</option>  <option value=\"gp\" >Guadeloupe</option>  <option value=\"gu\" >Guam</option>  <option value=\"gt\" >Guatemala</option>  <option value=\"gg\" >Guernsey</option>  <option value=\"gn\" >Guinea</option>  <option value=\"gw\" >Guinea-Bissau</option>  <option value=\"gy\" >Guyana</option>  <option value=\"ht\" >Haiti</option>  <option value=\"hn\" >Honduras</option>  <option value=\"hk\" >Hong Kong</option>  <option value=\"hu\" >Hungary</option>  <option value=\"is\" >Iceland</option>  <option value=\"in\" >India</option>  <option value=\"id\" >Indonesia</option>  <option value=\"ir\" >Iran</option>  <option value=\"iq\" >Iraq</option>  <option value=\"ie\" >Ireland</option>  <option value=\"im\" >Isle of Man</option>  <option value=\"il\" >Israel</option>  <option value=\"it\" >Italy</option>  <option value=\"jm\" >Jamaica</option>  <option value=\"jp\" >Japan</option>  <option value=\"je\" >Jersey</option>  <option value=\"jo\" >Jordan</option>  <option value=\"kz\" >Kazakhstan</option>  <option value=\"ke\" >Kenya</option>  <option value=\"ki\" >Kiribati</option>  <option value=\"kr\" >Korea</option>  <option value=\"kp\" >Korea (North)</option>  <option value=\"kw\" >Kuwait</option>  <option value=\"kg\" >Kyrgyzstan</option>  <option value=\"la\" >Laos</option>  <option value=\"lv\" >Latvia</option>  <option value=\"lb\" >Lebanon</option>  <option value=\"ls\" >Lesotho</option>  <option value=\"lr\" >Liberia</option>  <option value=\"ly\" >Libya</option>  <option value=\"li\" >Liechtenstein</option>  <option value=\"lt\" >Lithuania</option>  <option value=\"lu\" >Luxembourg</option>  <option value=\"mo\" >Macao</option>  <option value=\"mk\" >Macedonia</option>  <option value=\"mg\" >Madagascar</option>  <option value=\"mw\" >Malawi</option>  <option value=\"my\" >Malaysia</option>  <option value=\"mv\" >Maldives</option>  <option value=\"ml\" >Mali</option>  <option value=\"mt\" >Malta</option>  <option value=\"mh\" >Marshall Islands</option>  <option value=\"mq\" >Martinique</option>  <option value=\"mr\" >Mauritania</option>  <option value=\"mu\" >Mauritius</option>  <option value=\"yt\" >Mayotte</option>  <option value=\"mx\" >Mexico</option>  <option value=\"md\" >Moldova</option>  <option value=\"mc\" >Monaco</option>  <option value=\"mn\" >Mongolia</option>  <option value=\"me\" >Montenegro</option>  <option value=\"ms\" >Montserrat</option>  <option value=\"ma\" >Morocco</option>  <option value=\"mz\" >Mozambique</option>  <option value=\"mm\" >Myanmar</option>  <option value=\"na\" >Namibia</option>  <option value=\"nr\" >Nauru</option>  <option value=\"np\" >Nepal</option>  <option value=\"nl\" >Netherlands</option>  <option value=\"an\" >Netherlands Antilles</option>  <option value=\"nc\" >New Caledonia</option>  <option value=\"nz\" >New Zealand</option>  <option value=\"ni\" >Nicaragua</option>  <option value=\"ne\" >Niger</option>  <option value=\"ng\" >Nigeria</option>  <option value=\"nu\" >Niue</option>  <option value=\"nf\" >Norfolk Island</option>  <option value=\"mp\" >Northern Mariana Islands</option>  <option value=\"no\" >Norway</option>  <option value=\"om\" >Oman</option>  <option value=\"pk\" >Pakistan</option>  <option value=\"pw\" >Palau</option>  <option value=\"ps\" >Palestinian Territory</option>  <option value=\"pa\" >Panama</option>  <option value=\"pg\" >Papua New Guinea</option>  <option value=\"py\" >Paraguay</option>  <option value=\"pe\" >Peru</option>  <option value=\"ph\" >Philippines</option>  <option value=\"pn\" >Pitcairn</option>  <option value=\"pl\" >Poland</option>  <option value=\"pt\" >Portugal</option>  <option value=\"pr\" >Puerto Rico</option>  <option value=\"qa\" >Qatar</option>  <option value=\"re\" >Reunion</option>  <option value=\"ro\" >Romania</option>  <option value=\"ru\" >Russian Federation</option>  <option value=\"rw\" >Rwanda</option>  <option value=\"sh\" >Saint Helena</option>  <option value=\"kn\" >Saint Kitts and Nevis</option>  <option value=\"lc\" >Saint Lucia</option>  <option value=\"pm\" >Saint Pierre/Miquelon</option>  <option value=\"vc\" >Saint Vincent/Grenadines</option>  <option value=\"ws\" >Samoa</option>  <option value=\"sm\" >San Marino</option>  <option value=\"st\" >Sao Tome and Principe</option>  <option value=\"sa\" >Saudi Arabia</option>  <option value=\"sn\" >Senegal</option>  <option value=\"rs\" >Serbia</option>  <option value=\"sc\" >Seychelles</option>  <option value=\"sl\" >Sierra Leone</option>  <option value=\"sg\" >Singapore</option>  <option value=\"sk\" >Slovak Republic</option>  <option value=\"si\" >Slovenia</option>  <option value=\"sb\" >Solomon Islands</option>  <option value=\"so\" >Somalia</option>  <option value=\"za\" >South Africa</option>  <option value=\"es\" >Spain</option>  <option value=\"lk\" >Sri Lanka</option>  <option value=\"sd\" >Sudan</option>  <option value=\"sr\" >Suriname</option>  <option value=\"sj\" >Svalbard/Jan Mayen</option>  <option value=\"sz\" >Swaziland</option>  <option value=\"se\" >Sweden</option>  <option value=\"ch\" >Switzerland</option>  <option value=\"sy\" >Syria</option>  <option value=\"tw\" >Taiwan</option>  <option value=\"tj\" >Tajikistan</option>  <option value=\"tz\" >Tanzania</option>  <option value=\"th\" >Thailand</option>  <option value=\"tl\" >Timor-Leste</option>  <option value=\"tg\" >Togo</option>  <option value=\"tk\" >Tokelau</option>  <option value=\"to\" >Tonga</option>  <option value=\"tt\" >Trinidad and Tobago</option>  <option value=\"tn\" >Tunisia</option>  <option value=\"tr\" >Turkey</option>  <option value=\"tm\" >Turkmenistan</option>  <option value=\"tc\" >Turks and Caicos Islands</option>  <option value=\"tv\" >Tuvalu</option>  <option value=\"ug\" >Uganda</option>  <option value=\"ua\" >Ukraine</option>  <option value=\"ae\" >United Arab Emirates</option>  <option value=\"uy\" >Uruguay</option>  <option value=\"uz\" >Uzbekistan</option>  <option value=\"vu\" >Vanuatu</option>  <option value=\"va\" >Vatican City</option>  <option value=\"ve\" >Venezuela</option>  <option value=\"vn\" >Vietnam</option>  <option value=\"vg\" >Virgin Islands (Brit.)</option>  <option value=\"vi\" >Virgin Islands (U.S.)</option>  <option value=\"wf\" >Wallis and Futuna</option>  <option value=\"eh\" >Western Sahara</option>  <option value=\"ye\" >Yemen</option>  <option value=\"zm\" >Zambia</option>  <option value=\"zw\" >Zimbabwe</option>  <option value=\"oo\" >Other</option></select>\n      </td>  \n  \n  \n  \n    \n          <td>\n\n      \n      <label>Location #1</label>    <div class=\"smallSpacer\"></div>\n\n<input type=\"text\" value=\"United States (us, 0)\" name=\"jb_lib_location_first\" id=\"jb_lib_location_first\" size=\"50\" >\n\n<div id=\"jb_lib_location_first_completions\" class=\"autocomplete\"></div>\n<script type=\"text/javascript\">var jb_lib_location_first_completer_options = { parameters: \"ui_name=jb_lib_location_first\" };\n\nif (jb_params.ajax_params.size() > 0 && jb_params.ajax_params.toQueryString) {jb_lib_location_first_completer_options.parameters = jb_lib_location_first_completer_options.parameters ? jb_lib_location_first_completer_options.parameters + '&' : '';jb_lib_location_first_completer_options.parameters+= jb_params.ajax_params.toQueryString();\n}\n\nnew Ajax.Autocompleter('jb_lib_location_first', 'jb_lib_location_first_completions', jb_params.ajax_auto_completer, jb_lib_location_first_completer_options);</script>  \n              <div class=\"spacer\"></div>    \n        \n      <label>Location #2</label>    <div class=\"smallSpacer\"></div>\n\n<input type=\"text\" value=\"\" name=\"jb_lib_location_second\" id=\"jb_lib_location_second\" size=\"50\" >\n\n<div id=\"jb_lib_location_second_completions\" class=\"autocomplete\"></div>\n<script type=\"text/javascript\">var jb_lib_location_second_completer_options = { parameters: \"ui_name=jb_lib_location_second\" };\n\nif (jb_params.ajax_params.size() > 0 && jb_params.ajax_params.toQueryString) {jb_lib_location_second_completer_options.parameters = jb_lib_location_second_completer_options.parameters ? jb_lib_location_second_completer_options.parameters + '&' : '';jb_lib_location_second_completer_options.parameters+= jb_params.ajax_params.toQueryString();\n}\n\nnew Ajax.Autocompleter('jb_lib_location_second', 'jb_lib_location_second_completions', jb_params.ajax_auto_completer, jb_lib_location_second_completer_options);</script>  \n              <div class=\"spacer\"></div>    \n        \n      <label>Location #3</label>    <div class=\"smallSpacer\"></div>\n\n<input type=\"text\" value=\"\" name=\"jb_lib_location_third\" id=\"jb_lib_location_third\" size=\"50\" >\n\n<div id=\"jb_lib_location_third_completions\" class=\"autocomplete\"></div>\n<script type=\"text/javascript\">var jb_lib_location_third_completer_options = { parameters: \"ui_name=jb_lib_location_third\" };\n\nif (jb_params.ajax_params.size() > 0 && jb_params.ajax_params.toQueryString) {jb_lib_location_third_completer_options.parameters = jb_lib_location_third_completer_options.parameters ? jb_lib_location_third_completer_options.parameters + '&' : '';jb_lib_location_third_completer_options.parameters+= jb_params.ajax_params.toQueryString();\n}\n\nnew Ajax.Autocompleter('jb_lib_location_third', 'jb_lib_location_third_completions', jb_params.ajax_auto_completer, jb_lib_location_third_completer_options);</script>\n      </td>  \n  \n  \n  \n          <td></td>  \n  \n  \n  \n    \n          <td>\n\n      \n      <label>School</label>    <div class=\"smallSpacer\"></div>\n\n<input type=\"text\" value=\"\" name=\"jb_lib_education_f_ED\" id=\"jb_lib_education_f_ED\" size=\"50\" >\n\n<div id=\"jb_lib_education_f_ED_completions\" class=\"autocomplete\"></div>\n<script type=\"text/javascript\">var jb_lib_education_f_ED_completer_options = { parameters: \"ui_name=jb_lib_education_f_ED\" };\n\nif (jb_params.ajax_params.size() > 0 && jb_params.ajax_params.toQueryString) {jb_lib_education_f_ED_completer_options.parameters = jb_lib_education_f_ED_completer_options.parameters ? jb_lib_education_f_ED_completer_options.parameters + '&' : '';jb_lib_education_f_ED_completer_options.parameters+= jb_params.ajax_params.toQueryString();\n}\n\nnew Ajax.Autocompleter('jb_lib_education_f_ED', 'jb_lib_education_f_ED_completions', jb_params.ajax_auto_completer, jb_lib_education_f_ED_completer_options);</script>\n      </td>  \n  \n  \n  \n    \n          <td>\n\n      \n      <select name=\"jb_lib_industry\" id=\"jb_lib_industry\" size=\"4\" multiple>  <option value=\"select-all\" selected>All industries</option>  <option value=\"47\" >Accounting</option>  <option value=\"94\" >Airlines/Aviation</option>  <option value=\"120\" >Alt Dispute Resolution</option>  <option value=\"125\" >Alternative Medicine</option>  <option value=\"127\" >Animation</option>  <option value=\"19\" >Apparel &amp; Fashion</option>  <option value=\"50\" >Architecture</option>  <option value=\"111\" >Arts and Crafts</option>  <option value=\"53\" >Automotive</option>  <option value=\"52\" >Aviation &amp; Aerospace</option>  <option value=\"41\" >Banking</option>  <option value=\"12\" >Biotechnology</option>  <option value=\"36\" >Broadcast Media</option>  <option value=\"49\" >Building Materials</option>  <option value=\"138\" >Business Supplies</option>  <option value=\"129\" >Capital Markets</option>  <option value=\"54\" >Chemicals</option>  <option value=\"90\" >Civic Organization</option>  <option value=\"51\" >Civil Engineering</option>  <option value=\"128\" >Commercial Real Estate</option>  <option value=\"118\" >Computer Security</option>  <option value=\"109\" >Computer Games</option>  <option value=\"3\" >Computer Hardware</option>  <option value=\"5\" >Computer Networking</option>  <option value=\"4\" >Computer Software</option>  <option value=\"48\" >Construction</option>  <option value=\"24\" >Consumer Electronics</option>  <option value=\"25\" >Consumer Goods</option>  <option value=\"91\" >Consumer Services</option>  <option value=\"18\" >Cosmetics</option>  <option value=\"65\" >Dairy</option>  <option value=\"1\" >Defense &amp; Space</option>  <option value=\"99\" >Design</option>  <option value=\"69\" >Education Management</option>  <option value=\"132\" >E-Learning</option>  <option value=\"112\" >Electrical Manufacturing</option>  <option value=\"28\" >Entertainment</option>  <option value=\"144\" >Environment</option>  <option value=\"86\" >Environmental Services</option>  <option value=\"110\" >Events Services</option>  <option value=\"76\" >Executive Office</option>  <option value=\"122\" >Facilities Services</option>  <option value=\"88\" >Family Services</option>  <option value=\"63\" >Farming</option>  <option value=\"43\" >Financial Services</option>  <option value=\"38\" >Fine Art</option>  <option value=\"66\" >Fishery</option>  <option value=\"34\" >Food &amp; Beverages</option>  <option value=\"23\" >Food Production</option>  <option value=\"87\" >Freight Delivery</option>  <option value=\"101\" >Fund-Raising</option>  <option value=\"26\" >Furniture</option>  <option value=\"29\" >Gambling &amp; Casinos</option>  <option value=\"145\" >Glass &amp; Concrete</option>  <option value=\"75\" >Government Admin</option>  <option value=\"148\" >Government Relations</option>  <option value=\"140\" >Graphic Design</option>  <option value=\"124\" >Health and Fitness</option>  <option value=\"14\" >Health Care</option>  <option value=\"68\" >Higher Education</option>  <option value=\"31\" >Hospitality</option>  <option value=\"137\" >Human Resources</option>  <option value=\"134\" >Import and Export</option>  <option value=\"147\" >Industrial Automation</option>  <option value=\"84\" >Information Services</option>  <option value=\"96\" >Information Technology</option>  <option value=\"42\" >Insurance</option>  <option value=\"74\" >International Affairs</option>  <option value=\"141\" >International Trade</option>  <option value=\"6\" >Internet</option>  <option value=\"45\" >Investment Banking</option>  <option value=\"46\" >Investment Management</option>  <option value=\"73\" >Judiciary</option>  <option value=\"77\" >Law Enforcement</option>  <option value=\"9\" >Law Practice</option>  <option value=\"10\" >Legal Services</option>  <option value=\"72\" >Legislative Office</option>  <option value=\"85\" >Libraries</option>  <option value=\"116\" >Logistics</option>  <option value=\"143\" >Luxury Goods</option>  <option value=\"55\" >Machinery</option>  <option value=\"11\" >Management Consulting</option>  <option value=\"95\" >Maritime</option>  <option value=\"80\" >Marketing</option>  <option value=\"97\" >Market Research</option>  <option value=\"135\" >Mechanical Engineering</option>  <option value=\"126\" >Media Production</option>  <option value=\"17\" >Medical Devices</option>  <option value=\"13\" >Medical Practice</option>  <option value=\"139\" >Mental Health Care</option>  <option value=\"71\" >Military</option>  <option value=\"56\" >Mining &amp; Metals</option>  <option value=\"35\" >Motion Pictures</option>  <option value=\"37\" >Museums</option>  <option value=\"115\" >Music</option>  <option value=\"114\" >Nanotechnology</option>  <option value=\"81\" >Newspapers</option>  <option value=\"100\" >Non-Profit Management</option>  <option value=\"57\" >Oil &amp; Energy</option>  <option value=\"113\" >Online Media</option>  <option value=\"123\" >Outsourcing/Offshoring</option>  <option value=\"146\" >Packaging and Containers</option>  <option value=\"61\" >Paper Products</option>  <option value=\"39\" >Performing Arts</option>  <option value=\"15\" >Pharmaceuticals</option>  <option value=\"131\" >Philanthropy</option>  <option value=\"136\" >Photography</option>  <option value=\"117\" >Plastics</option>  <option value=\"107\" >Political Organization</option>  <option value=\"83\" >Printing</option>  <option value=\"105\" >Professional Training</option>  <option value=\"102\" >Program Development</option>  <option value=\"79\" >Public Policy</option>  <option value=\"98\" >Public Relations</option>  <option value=\"78\" >Public Safety</option>  <option value=\"82\" >Publishing</option>  <option value=\"62\" >Railroad Manufacture</option>  <option value=\"64\" >Ranching</option>  <option value=\"44\" >Real Estate</option>  <option value=\"40\" >Recreational Services</option>  <option value=\"104\" >Recruitment</option>  <option value=\"89\" >Religious Institutions</option>  <option value=\"70\" >Research</option>  <option value=\"32\" >Restaurants</option>  <option value=\"27\" >Retail</option>  <option value=\"67\" >School Education</option>  <option value=\"121\" >Security</option>  <option value=\"7\" >Semiconductors</option>  <option value=\"58\" >Shipbuilding</option>  <option value=\"20\" >Sporting Goods</option>  <option value=\"33\" >Sports</option>  <option value=\"22\" >Supermarkets</option>  <option value=\"8\" >Telecommunications</option>  <option value=\"60\" >Textiles</option>  <option value=\"130\" >Think Tanks</option>  <option value=\"21\" >Tobacco</option>  <option value=\"30\" >Tourism</option>  <option value=\"108\" >Translation</option>  <option value=\"92\" >Transportation</option>  <option value=\"59\" >Utilities</option>  <option value=\"106\" >Venture Capital</option>  <option value=\"16\" >Veterinary</option>  <option value=\"93\" >Warehousing</option>  <option value=\"133\" >Wholesale</option>  <option value=\"142\" >Wine and Spirits</option>  <option value=\"119\" >Wireless</option>  <option value=\"103\" >Writing and Editing</option></select>\n      </td>  \n  \n  \n  \n          <td></td>  \n  \n  \n  \n    \n          <td>\n\n      \n      <label>Max results</label>    <div class=\"smallSpacer\"></div>\n\n\n<select name=\"jb_lib_other_max_results\" id=\"jb_lib_other_max_results\" >  <option value=\"10\" >10</option>  <option value=\"20\" >20</option>  <option value=\"30\" >30</option>  <option value=\"40\" >40</option>  <option value=\"50\" selected>50</option>  <option value=\"60\" >60</option>  <option value=\"70\" >70</option>  <option value=\"80\" >80</option>  <option value=\"90\" >90</option>  <option value=\"100\" >100</option>  <option value=\"110\" >110</option>  <option value=\"120\" >120</option>  <option value=\"130\" >130</option>  <option value=\"140\" >140</option>  <option value=\"150\" >150</option>  <option value=\"160\" >160</option>  <option value=\"170\" >170</option>  <option value=\"180\" >180</option>  <option value=\"190\" >190</option>  <option value=\"200\" >200</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <select name=\"jb_lib_other_f_N\" id=\"jb_lib_other_f_N\" size=\"3\" multiple>  <option value=\"select-all\" >All LinkedIn Members</option>  <option value=\"F\" selected>1st Connections</option>  <option value=\"S\" selected>2nd Connections</option>  <option value=\"A\" selected>Group Members</option>  <option value=\"O\" >3rd + Everyone Else</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <label>Title</label>\n\n<input type=\"text\" value=\"\" name=\"jb_lib_other_title\" id=\"jb_lib_other_title\" size=\"10\" >  \n              <div class=\"spacer\"></div>    \n        \n      <select name=\"jb_lib_other_titleScope\" id=\"jb_lib_other_titleScope\" >  <option value=\"CP\" selected>Current or past</option>  <option value=\"C\" >Current</option>  <option value=\"P\" >Past</option>  <option value=\"PNC\" >Past not current</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <label>Company</label>\n\n<input type=\"text\" value=\"\" name=\"jb_lib_other_company\" id=\"jb_lib_other_company\" size=\"10\" >  \n              <div class=\"spacer\"></div>    \n        \n      <select name=\"jb_lib_other_companyScope\" id=\"jb_lib_other_companyScope\" >  <option value=\"CP\" selected>Current or past</option>  <option value=\"C\" >Current</option>  <option value=\"P\" >Past</option>  <option value=\"PNC\" >Past not current</option></select>\n      </td>  \n    </tr>\n  \n    \n    \n      \n        <tr id=\"lnk_row\" class=\"unselected\">\n  \n                  <th align=\"left\" class=\"header\" id=\"name_lnk_select\">LinkedIn</th>\n  \n            <th class=\"header\"><input style=\"border: none\" type=\"checkbox\" class=\"sourcesSearchInput\" name=\"SRCH_LNK\" id=\"lnk_select\" onclick=\"jb_params.toggle('lnk', event)\" ></th>\n  \n      <td>\n\n      \n      <input type=\"text\" value=\"\" name=\"jb_lnk_postcode_postalCode\" id=\"jb_lnk_postcode_postalCode\" size=\"10\" >  \n              <div class=\"spacer\"></div>    \n        \n      <select name=\"jb_lnk_postcode_distance\" id=\"jb_lnk_postcode_distance\" >  <option value=\"10\" selected>10 mi (15km)</option>  <option value=\"25\" >25 mi (40 km)</option>  <option value=\"35\" >35 mi (55 km)</option>  <option value=\"50\" >50 mi (80 km)</option>  <option value=\"75\" >75 mi (120 km)</option>  <option value=\"100\" >100 mi (160 km</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <select name=\"jb_lnk_postcode_countryCode\" id=\"jb_lnk_postcode_countryCode\" >  <option value=\"gb\" >United Kingdom</option>  <option value=\"us\" selected>United States</option>  <option value=\"au\" >Australia</option>  <option value=\"be\" >Belgium</option>  <option value=\"ca\" >Canada</option>  <option value=\"dk\" >Denmark</option>  <option value=\"fr\" >France</option>  <option value=\"de\" >Germany</option>  <option value=\"in\" >India</option>  <option value=\"it\" >Italy</option>  <option value=\"jp\" >Japan</option>  <option value=\"mx\" >Mexico</option>  <option value=\"nl\" >Netherlands</option>  <option value=\"no\" >Norway</option>  <option value=\"pl\" >Poland</option>  <option value=\"za\" >South Africa</option>  <option value=\"es\" >Spain</option>  <option value=\"se\" >Sweden</option>  <option value=\"ch\" >Switzerland</option>  <option value=\"ve\" >Venezuela</option></select>\n      </td>  \n  \n  \n  \n    \n          <td>\n\n      \n      <select name=\"jb_lnk_location\" id=\"jb_lnk_location\" >  <option value=\"aa\" >Anywhere</option>  <option value=\"us\" selected>United States</option>  <option value=\"af\" >Afghanistan</option>  <option value=\"ax\" >Aland Islands</option>  <option value=\"al\" >Albania</option>  <option value=\"dz\" >Algeria</option>  <option value=\"as\" >American Samoa</option>  <option value=\"ad\" >Andorra</option>  <option value=\"ao\" >Angola</option>  <option value=\"ai\" >Anguilla</option>  <option value=\"aq\" >Antarctica</option>  <option value=\"ag\" >Antigua and Barbuda</option>  <option value=\"ar\" >Argentina</option>  <option value=\"am\" >Armenia</option>  <option value=\"aw\" >Aruba</option>  <option value=\"au\" >Australia</option>  <option value=\"at\" >Austria</option>  <option value=\"az\" >Azerbaijan</option>  <option value=\"bs\" >Bahamas</option>  <option value=\"bh\" >Bahrain</option>  <option value=\"bd\" >Bangladesh</option>  <option value=\"bb\" >Barbados</option>  <option value=\"by\" >Belarus</option>  <option value=\"be\" >Belgium</option>  <option value=\"bz\" >Belize</option>  <option value=\"bj\" >Benin</option>  <option value=\"bm\" >Bermuda</option>  <option value=\"bt\" >Bhutan</option>  <option value=\"bo\" >Bolivia</option>  <option value=\"ba\" >Bosnia and Herzegovina</option>  <option value=\"bw\" >Botswana</option>  <option value=\"bv\" >Bouvet Island</option>  <option value=\"br\" >Brazil</option>  <option value=\"bn\" >Brunei Darussalam</option>  <option value=\"bg\" >Bulgaria</option>  <option value=\"bf\" >Burkina Faso</option>  <option value=\"bi\" >Burundi</option>  <option value=\"kh\" >Cambodia</option>  <option value=\"cm\" >Cameroon</option>  <option value=\"ca\" >Canada</option>  <option value=\"cv\" >Cape Verde</option>  <option value=\"cb\" >Caribbean Nations</option>  <option value=\"ky\" >Cayman Islands</option>  <option value=\"cf\" >Central African Republic</option>  <option value=\"td\" >Chad</option>  <option value=\"cl\" >Chile</option>  <option value=\"cn\" >China</option>  <option value=\"cx\" >Christmas Island</option>  <option value=\"cc\" >Cocos (Keeling) Islands</option>  <option value=\"co\" >Colombia</option>  <option value=\"km\" >Comoros</option>  <option value=\"cg\" >Congo</option>  <option value=\"ck\" >Cook Islands</option>  <option value=\"cr\" >Costa Rica</option>  <option value=\"ci\" >Ivory Coast</option>  <option value=\"hr\" >Croatia</option>  <option value=\"cu\" >Cuba</option>  <option value=\"cy\" >Cyprus</option>  <option value=\"cz\" >Czech Republic</option>  <option value=\"cd\" >DR Congo</option>  <option value=\"dk\" >Denmark</option>  <option value=\"dj\" >Djibouti</option>  <option value=\"dm\" >Dominica</option>  <option value=\"do\" >Dominican Republic</option>  <option value=\"tp\" >East Timor</option>  <option value=\"ec\" >Ecuador</option>  <option value=\"eg\" >Egypt</option>  <option value=\"sv\" >El Salvador</option>  <option value=\"gq\" >Equatorial Guinea</option>  <option value=\"er\" >Eritrea</option>  <option value=\"ee\" >Estonia</option>  <option value=\"et\" >Ethiopia</option>  <option value=\"fk\" >Falkland Islands</option>  <option value=\"fo\" >Faroe Islands</option>  <option value=\"fm\" >Micronesia</option>  <option value=\"fj\" >Fiji</option>  <option value=\"fi\" >Finland</option>  <option value=\"fr\" >France</option>  <option value=\"fx\" >France, Metropolitan</option>  <option value=\"gf\" >French Guiana</option>  <option value=\"pf\" >French Polynesia</option>  <option value=\"tf\" >French Southern Territories</option>  <option value=\"ga\" >Gabon</option>  <option value=\"gm\" >Gambia</option>  <option value=\"ge\" >Georgia</option>  <option value=\"de\" >Germany</option>  <option value=\"gh\" >Ghana</option>  <option value=\"gi\" >Gibraltar</option>  <option value=\"gr\" >Greece</option>  <option value=\"gl\" >Greenland</option>  <option value=\"gd\" >Grenada</option>  <option value=\"gp\" >Guadeloupe</option>  <option value=\"gu\" >Guam</option>  <option value=\"gt\" >Guatemala</option>  <option value=\"gn\" >Guinea</option>  <option value=\"gw\" >Guinea-Bissau</option>  <option value=\"gy\" >Guyana</option>  <option value=\"ht\" >Haiti</option>  <option value=\"hn\" >Honduras</option>  <option value=\"hk\" >Hong Kong</option>  <option value=\"hu\" >Hungary</option>  <option value=\"is\" >Iceland</option>  <option value=\"in\" >India</option>  <option value=\"id\" >Indonesia</option>  <option value=\"ir\" >Iran</option>  <option value=\"iq\" >Iraq</option>  <option value=\"ie\" >Ireland</option>  <option value=\"il\" >Israel</option>  <option value=\"it\" >Italy</option>  <option value=\"jm\" >Jamaica</option>  <option value=\"jp\" >Japan</option>  <option value=\"jo\" >Jordan</option>  <option value=\"kz\" >Kazakhstan</option>  <option value=\"ke\" >Kenya</option>  <option value=\"ki\" >Kiribati</option>  <option value=\"kr\" >Korea</option>  <option value=\"kp\" >Korea (North)</option>  <option value=\"kw\" >Kuwait</option>  <option value=\"kg\" >Kyrgyzstan</option>  <option value=\"la\" >Laos</option>  <option value=\"lv\" >Latvia</option>  <option value=\"lb\" >Lebanon</option>  <option value=\"ls\" >Lesotho</option>  <option value=\"lr\" >Liberia</option>  <option value=\"ly\" >Libya</option>  <option value=\"li\" >Liechtenstein</option>  <option value=\"lt\" >Lithuania</option>  <option value=\"lu\" >Luxembourg</option>  <option value=\"mo\" >Macao</option>  <option value=\"mk\" >Macedonia</option>  <option value=\"mg\" >Madagascar</option>  <option value=\"mw\" >Malawi</option>  <option value=\"my\" >Malaysia</option>  <option value=\"mv\" >Maldives</option>  <option value=\"ml\" >Mali</option>  <option value=\"mt\" >Malta</option>  <option value=\"mh\" >Marshall Islands</option>  <option value=\"mq\" >Martinique</option>  <option value=\"mr\" >Mauritania</option>  <option value=\"mu\" >Mauritius</option>  <option value=\"yt\" >Mayotte</option>  <option value=\"mx\" >Mexico</option>  <option value=\"md\" >Moldova</option>  <option value=\"mc\" >Monaco</option>  <option value=\"mn\" >Mongolia</option>  <option value=\"ms\" >Montserrat</option>  <option value=\"ma\" >Morocco</option>  <option value=\"mz\" >Mozambique</option>  <option value=\"mm\" >Myanmar</option>  <option value=\"na\" >Namibia</option>  <option value=\"nr\" >Nauru</option>  <option value=\"np\" >Nepal</option>  <option value=\"nl\" >Netherlands</option>  <option value=\"an\" >Netherlands Antilles</option>  <option value=\"nc\" >New Caledonia</option>  <option value=\"nz\" >New Zealand</option>  <option value=\"ni\" >Nicaragua</option>  <option value=\"ne\" >Niger</option>  <option value=\"ng\" >Nigeria</option>  <option value=\"nu\" >Niue</option>  <option value=\"nf\" >Norfolk Island</option>  <option value=\"mp\" >Northern Mariana Islands</option>  <option value=\"no\" >Norway</option>  <option value=\"pk\" >Pakistan</option>  <option value=\"pw\" >Palau</option>  <option value=\"ps\" >Palestinian Territory</option>  <option value=\"pa\" >Panama</option>  <option value=\"pg\" >Papua New Guinea</option>  <option value=\"py\" >Paraguay</option>  <option value=\"pe\" >Peru</option>  <option value=\"ph\" >Philippines</option>  <option value=\"pn\" >Pitcairn</option>  <option value=\"pl\" >Poland</option>  <option value=\"pt\" >Portugal</option>  <option value=\"pr\" >Puerto Rico</option>  <option value=\"qa\" >Qatar</option>  <option value=\"re\" >Reunion</option>  <option value=\"ro\" >Romania</option>  <option value=\"ru\" >Russian Federation</option>  <option value=\"rw\" >Rwanda</option>  <option value=\"sh\" >Saint Helena</option>  <option value=\"kn\" >Saint Kitts and Nevis</option>  <option value=\"lc\" >Saint Lucia</option>  <option value=\"pm\" >Saint Pierre and Miquelon</option>  <option value=\"vc\" >Saint Vincent &amp; Grenadines</option>  <option value=\"ws\" >Samoa</option>  <option value=\"sm\" >San Marino</option>  <option value=\"st\" >Sao Tome and Principe</option>  <option value=\"sa\" >Saudi Arabia</option>  <option value=\"sn\" >Senegal</option>  <option value=\"cs\" >Serbia and Montenegro</option>  <option value=\"sc\" >Seychelles</option>  <option value=\"sl\" >Sierra Leone</option>  <option value=\"sg\" >Singapore</option>  <option value=\"sk\" >Slovak Republic</option>  <option value=\"si\" >Slovenia</option>  <option value=\"sb\" >Solomon Islands</option>  <option value=\"so\" >Somalia</option>  <option value=\"za\" >South Africa</option>  <option value=\"es\" >Spain</option>  <option value=\"lk\" >Sri Lanka</option>  <option value=\"sd\" >Sudan</option>  <option value=\"om\" >Sultanate of Oman</option>  <option value=\"sr\" >Suriname</option>  <option value=\"sj\" >Svalbard and Jan Mayen</option>  <option value=\"sz\" >Swaziland</option>  <option value=\"se\" >Sweden</option>  <option value=\"ch\" >Switzerland</option>  <option value=\"sy\" >Syria</option>  <option value=\"tw\" >Taiwan</option>  <option value=\"tj\" >Tajikistan</option>  <option value=\"tz\" >Tanzania</option>  <option value=\"th\" >Thailand</option>  <option value=\"tl\" >Timor-Leste</option>  <option value=\"tg\" >Togo</option>  <option value=\"tk\" >Tokelau</option>  <option value=\"to\" >Tonga</option>  <option value=\"tt\" >Trinidad and Tobago</option>  <option value=\"tn\" >Tunisia</option>  <option value=\"tr\" >Turkey</option>  <option value=\"tm\" >Turkmenistan</option>  <option value=\"tc\" >Turks and Caicos Islands</option>  <option value=\"tv\" >Tuvalu</option>  <option value=\"ug\" >Uganda</option>  <option value=\"ua\" >Ukraine</option>  <option value=\"ae\" >United Arab Emirates</option>  <option value=\"gb\" >United Kingdom</option>  <option value=\"uy\" >Uruguay</option>  <option value=\"uz\" >Uzbekistan</option>  <option value=\"vu\" >Vanuatu</option>  <option value=\"va\" >Vatican City</option>  <option value=\"ve\" >Venezuela</option>  <option value=\"vn\" >Viet Nam</option>  <option value=\"vg\" >Virgin Islands (British)</option>  <option value=\"vi\" >Virgin Islands (U.S.)</option>  <option value=\"wf\" >Wallis and Futuna</option>  <option value=\"eh\" >Western Sahara</option>  <option value=\"ye\" >Yemen</option>  <option value=\"yu\" >Yugoslavia</option>  <option value=\"zm\" >Zambia</option>  <option value=\"zw\" >Zimbabwe</option>  <option value=\"oo\" >Other</option></select>\n      </td>  \n  \n  \n  \n          <td></td>  \n  \n  \n  \n          <td></td>  \n  \n  \n  \n    \n          <td>\n\n      \n      <select name=\"jb_lnk_industry\" id=\"jb_lnk_industry\" size=\"4\" multiple>  <option value=\"select-all\" selected>All industries</option>  <option value=\"47\" >Accounting</option>  <option value=\"94\" >Airlines/Aviation</option>  <option value=\"120\" >Alt Dispute Resolution</option>  <option value=\"125\" >Alternative Medicine</option>  <option value=\"127\" >Animation</option>  <option value=\"19\" >Apparel &amp; Fashion</option>  <option value=\"50\" >Architecture</option>  <option value=\"111\" >Arts and Crafts</option>  <option value=\"53\" >Automotive</option>  <option value=\"52\" >Aviation &amp; Aerospace</option>  <option value=\"41\" >Banking</option>  <option value=\"12\" >Biotechnology</option>  <option value=\"36\" >Broadcast Media</option>  <option value=\"49\" >Building Materials</option>  <option value=\"138\" >Business Supplies</option>  <option value=\"129\" >Capital Markets</option>  <option value=\"54\" >Chemicals</option>  <option value=\"90\" >Civic Organization</option>  <option value=\"51\" >Civil Engineering</option>  <option value=\"128\" >Commercial Real Estate</option>  <option value=\"118\" >Computer Security</option>  <option value=\"109\" >Computer Games</option>  <option value=\"3\" >Computer Hardware</option>  <option value=\"5\" >Computer Networking</option>  <option value=\"4\" >Computer Software</option>  <option value=\"48\" >Construction</option>  <option value=\"24\" >Consumer Electronics</option>  <option value=\"25\" >Consumer Goods</option>  <option value=\"91\" >Consumer Services</option>  <option value=\"18\" >Cosmetics</option>  <option value=\"65\" >Dairy</option>  <option value=\"1\" >Defense &amp; Space</option>  <option value=\"99\" >Design</option>  <option value=\"69\" >Education Management</option>  <option value=\"132\" >E-Learning</option>  <option value=\"112\" >Electrical Manufacturing</option>  <option value=\"28\" >Entertainment</option>  <option value=\"144\" >Environment</option>  <option value=\"86\" >Environmental Services</option>  <option value=\"110\" >Events Services</option>  <option value=\"76\" >Executive Office</option>  <option value=\"122\" >Facilities Services</option>  <option value=\"88\" >Family Services</option>  <option value=\"63\" >Farming</option>  <option value=\"43\" >Financial Services</option>  <option value=\"38\" >Fine Art</option>  <option value=\"66\" >Fishery</option>  <option value=\"34\" >Food &amp; Beverages</option>  <option value=\"23\" >Food Production</option>  <option value=\"87\" >Freight Delivery</option>  <option value=\"101\" >Fund-Raising</option>  <option value=\"26\" >Furniture</option>  <option value=\"29\" >Gambling &amp; Casinos</option>  <option value=\"145\" >Glass &amp; Concrete</option>  <option value=\"75\" >Government Admin</option>  <option value=\"148\" >Government Relations</option>  <option value=\"140\" >Graphic Design</option>  <option value=\"124\" >Health and Fitness</option>  <option value=\"14\" >Health Care</option>  <option value=\"68\" >Higher Education</option>  <option value=\"31\" >Hospitality</option>  <option value=\"137\" >Human Resources</option>  <option value=\"134\" >Import and Export</option>  <option value=\"147\" >Industrial Automation</option>  <option value=\"84\" >Information Services</option>  <option value=\"96\" >Information Technology</option>  <option value=\"42\" >Insurance</option>  <option value=\"74\" >International Affairs</option>  <option value=\"141\" >International Trade</option>  <option value=\"6\" >Internet</option>  <option value=\"45\" >Investment Banking</option>  <option value=\"46\" >Investment Management</option>  <option value=\"73\" >Judiciary</option>  <option value=\"77\" >Law Enforcement</option>  <option value=\"9\" >Law Practice</option>  <option value=\"10\" >Legal Services</option>  <option value=\"72\" >Legislative Office</option>  <option value=\"85\" >Libraries</option>  <option value=\"116\" >Logistics</option>  <option value=\"143\" >Luxury Goods</option>  <option value=\"55\" >Machinery</option>  <option value=\"11\" >Management Consulting</option>  <option value=\"95\" >Maritime</option>  <option value=\"80\" >Marketing</option>  <option value=\"97\" >Market Research</option>  <option value=\"135\" >Mechanical Engineering</option>  <option value=\"126\" >Media Production</option>  <option value=\"17\" >Medical Devices</option>  <option value=\"13\" >Medical Practice</option>  <option value=\"139\" >Mental Health Care</option>  <option value=\"71\" >Military</option>  <option value=\"56\" >Mining &amp; Metals</option>  <option value=\"35\" >Motion Pictures</option>  <option value=\"37\" >Museums</option>  <option value=\"115\" >Music</option>  <option value=\"114\" >Nanotechnology</option>  <option value=\"81\" >Newspapers</option>  <option value=\"100\" >Non-Profit Management</option>  <option value=\"57\" >Oil &amp; Energy</option>  <option value=\"113\" >Online Media</option>  <option value=\"123\" >Outsourcing/Offshoring</option>  <option value=\"146\" >Packaging and Containers</option>  <option value=\"61\" >Paper Products</option>  <option value=\"39\" >Performing Arts</option>  <option value=\"15\" >Pharmaceuticals</option>  <option value=\"131\" >Philanthropy</option>  <option value=\"136\" >Photography</option>  <option value=\"117\" >Plastics</option>  <option value=\"107\" >Political Organization</option>  <option value=\"83\" >Printing</option>  <option value=\"105\" >Professional Training</option>  <option value=\"102\" >Program Development</option>  <option value=\"79\" >Public Policy</option>  <option value=\"98\" >Public Relations</option>  <option value=\"78\" >Public Safety</option>  <option value=\"82\" >Publishing</option>  <option value=\"62\" >Railroad Manufacture</option>  <option value=\"64\" >Ranching</option>  <option value=\"44\" >Real Estate</option>  <option value=\"40\" >Recreational Services</option>  <option value=\"104\" >Recruitment</option>  <option value=\"89\" >Religious Institutions</option>  <option value=\"70\" >Research</option>  <option value=\"32\" >Restaurants</option>  <option value=\"27\" >Retail</option>  <option value=\"67\" >School Education</option>  <option value=\"121\" >Security</option>  <option value=\"7\" >Semiconductors</option>  <option value=\"58\" >Shipbuilding</option>  <option value=\"20\" >Sporting Goods</option>  <option value=\"33\" >Sports</option>  <option value=\"22\" >Supermarkets</option>  <option value=\"8\" >Telecommunications</option>  <option value=\"60\" >Textiles</option>  <option value=\"130\" >Think Tanks</option>  <option value=\"21\" >Tobacco</option>  <option value=\"30\" >Tourism</option>  <option value=\"108\" >Translation</option>  <option value=\"92\" >Transportation</option>  <option value=\"59\" >Utilities</option>  <option value=\"106\" >Venture Capital</option>  <option value=\"16\" >Veterinary</option>  <option value=\"93\" >Warehousing</option>  <option value=\"133\" >Wholesale</option>  <option value=\"142\" >Wine and Spirits</option>  <option value=\"119\" >Wireless</option>  <option value=\"103\" >Writing and Editing</option></select>\n      </td>  \n  \n  \n  \n          <td></td>  \n  \n  \n  \n    \n          <td>\n\n      \n      <label>Max results</label>\n\n\n<select name=\"jb_lnk_other_max_results\" id=\"jb_lnk_other_max_results\" >  <option value=\"40\" selected>40</option>  <option value=\"80\" >80</option>  <option value=\"120\" >120</option>  <option value=\"160\" >160</option>  <option value=\"200\" >200</option>  <option value=\"240\" >240</option>  <option value=\"280\" >280</option>  <option value=\"320\" >320</option>  <option value=\"360\" >360</option>  <option value=\"400\" >400</option>  <option value=\"440\" >440</option>  <option value=\"480\" >480</option>  <option value=\"520\" >520</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <select name=\"jb_lnk_other_facet_N\" id=\"jb_lnk_other_facet_N\" size=\"3\" multiple>  <option value=\"select-all\" >All LinkedIn Members</option>  <option value=\"F\" selected>1st Connections</option>  <option value=\"S\" selected>2nd Connections</option>  <option value=\"A\" >Group Members</option>  <option value=\"O\" selected>3rd + Everyone Else</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <label>Sort Order</label>    <div class=\"smallSpacer\"></div>\n\n\n<select name=\"jb_lnk_other_sortCriteria\" id=\"jb_lnk_other_sortCriteria\" >  <option value=\"R\" selected>Relevance</option>  <option value=\"DR\" >Relationship</option>  <option value=\"DE\" >Rel+Recommendations</option>  <option value=\"C\" >Connections</option>  <option value=\"K\" >Keywords</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <label>Title</label>\n\n<input type=\"text\" value=\"\" name=\"jb_lnk_other_title\" id=\"jb_lnk_other_title\" size=\"10\" >  \n              <div class=\"spacer\"></div>    \n        \n      <select name=\"jb_lnk_other_currentTitle\" id=\"jb_lnk_other_currentTitle\" >  <option value=\"CP\" selected>Current or past</option>  <option value=\"C\" >Current</option>  <option value=\"P\" >Past</option>  <option value=\"PNC\" >Past not current</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <label>Company</label>\n\n<input type=\"text\" value=\"\" name=\"jb_lnk_other_company\" id=\"jb_lnk_other_company\" size=\"10\" >  \n              <div class=\"spacer\"></div>    \n        \n      <select name=\"jb_lnk_other_currentCompany\" id=\"jb_lnk_other_currentCompany\" >  <option value=\"CP\" selected>Current or past</option>  <option value=\"C\" >Current</option>  <option value=\"P\" >Past</option>  <option value=\"PNC\" >Past not current</option></select>  \n              <div class=\"spacer\"></div>    \n        \n      <label>OpenLink (premium only)</label>\n\n<input type=\"checkbox\" name=\"jb_lnk_other_openlinkFilter\" id=\"jb_lnk_other_openlinkFilter\" value=\"true\" style=\"border: none\">\n      </td>  \n    </tr>\n\n</table>",
   "js" : "// Initialise the data structures inside the jb_params object.\njb_params.jb_codes       = [ 'EFC', 'LIB', 'LNK' ];\njb_params.generic_names  = [ 'jb_location', 'jb_education', 'jb_other', 'jb_job_type', 'jb_postcode', 'jb_industry', 'jb_recency' ];\njb_params.control_types  = $H( { jb_efc_other_max_results: 'menu', jb_efc_other_workexp: 'menu', jb_lib_postcode_countryCode: 'menu', jb_efc_recency: 'menu', jb_lib_postcode_postalCode: 'text', jb_lib_other_company: 'text', jb_lib_location_first: 'text', jb_efc_other_language1: 'menu', jb_lnk_other_title: 'text', jb_lnk_other_currentTitle: 'menu', jb_lnk_industry: 'menu', jb_lib_other_f_N: 'menu', jb_efc_industry: 'menu', jb_efc_location_location: 'text', jb_lib_other_title: 'text', jb_lnk_other_facet_N: 'menu', jb_lnk_postcode_postalCode: 'text', jb_lib_location_third: 'text', jb_lnk_other_openlinkFilter: 'check_box', jb_efc_job_type_empltype: 'menu', jb_lnk_postcode_countryCode: 'menu', jb_lib_other_titleScope: 'menu', jb_lib_other_companyScope: 'menu', jb_lnk_location: 'menu', jb_lib_postcode_distance: 'menu', jb_lib_location_second: 'text', jb_efc_education: 'menu', jb_efc_location_radius: 'menu', jb_efc_job_type_position: 'menu', jb_lnk_other_company: 'text', jb_efc_other_langprof2: 'menu', jb_efc_other_language2: 'menu', jb_lnk_other_max_results: 'menu', jb_lnk_other_sortCriteria: 'menu', jb_efc_other_langprof1: 'menu', jb_lib_industry: 'menu', jb_lnk_postcode_distance: 'menu', jb_lnk_other_currentCompany: 'menu', jb_lib_other_max_results: 'menu', jb_lib_education_f_ED: 'text' } );\njb_params.generic_types  = $H( { jb_location_region: 'menu', jb_location_country: 'menu', jb_postcode_postcode: 'text', jb_other_max_results: 'menu', jb_postcode_country: 'menu', jb_education: 'menu', jb_job_type: 'menu', jb_postcode_radius: 'menu', jb_industry: 'menu', jb_postcode_units: 'hidden', jb_recency: 'menu' } );\njb_params.separators     = $H( { jb_efc_industry: '|', jb_efc_other_workexp: '|', jb_lnk_other_facet_N: '|', jb_efc_job_type_position: '|', jb_efc_education: '|', jb_efc_job_type_empltype: '|', jb_industry: '|', jb_job_type: '|', jb_lib_industry: '|', jb_lnk_industry: '|', jb_lib_other_f_N: '|' } );\njb_params.generic_combos = $H( { jb_location_region: 'jb_location', jb_location_country: 'jb_location', jb_postcode_radius: 'jb_postcode', jb_postcode_postcode: 'jb_postcode', jb_other_max_results: 'jb_other', jb_postcode_units: 'jb_postcode', jb_postcode_country: 'jb_postcode' } );\njb_params.style          = 'grid';\njb_params.locale         = 'en';\n\n\n\njb_params.ajax_updater = 'https://ws-avk-ric-101.daxtra.com/rtb/spider_params_ajax.pl';\njb_params.jsonp = true;",
   "libs" : {
      "controls" : "// script.aculo.us controls.js v1.8.3, Thu Oct 08 11:23:33 +0200 2009\n\n// Copyright (c) 2005-2009 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)\n//           (c) 2005-2009 Ivan Krstic (http://blogs.law.harvard.edu/ivan)\n//           (c) 2005-2009 Jon Tirsen (http://www.tirsen.com)\n// Contributors:\n//  Richard Livsey\n//  Rahul Bhargava\n//  Rob Wills\n//\n// script.aculo.us is freely distributable under the terms of an MIT-style license.\n// For details, see the script.aculo.us web site: http://script.aculo.us/\n\n// Autocompleter.Base handles all the autocompletion functionality\n// that's independent of the data source for autocompletion. This\n// includes drawing the autocompletion menu, observing keyboard\n// and mouse events, and similar.\n//\n// Specific autocompleters need to provide, at the very least,\n// a getUpdatedChoices function that will be invoked every time\n// the text inside the monitored textbox changes. This method\n// should get the text for which to provide autocompletion by\n// invoking this.getToken(), NOT by directly accessing\n// this.element.value. This is to allow incremental tokenized\n// autocompletion. Specific auto-completion logic (AJAX, etc)\n// belongs in getUpdatedChoices.\n//\n// Tokenized incremental autocompletion is enabled automatically\n// when an autocompleter is instantiated with the 'tokens' option\n// in the options parameter, e.g.:\n// new Ajax.Autocompleter('id','upd', '/url/', { tokens: ',' });\n// will incrementally autocomplete with a comma as the token.\n// Additionally, ',' in the above example can be replaced with\n// a token array, e.g. { tokens: [',', '\\n'] } which\n// enables autocompletion on multiple tokens. This is most\n// useful when one of the tokens is \\n (a newline), as it\n// allows smart autocompletion after linebreaks.\n\nif(typeof Effect == 'undefined')\n  throw(\"controls.js requires including script.aculo.us' effects.js library\");\n\nvar Autocompleter = { };\nAutocompleter.Base = Class.create({\n  baseInitialize: function(element, update, options) {\n    element          = $(element);\n    this.element     = element;\n    this.update      = $(update);\n    this.hasFocus    = false;\n    this.changed     = false;\n    this.active      = false;\n    this.index       = 0;\n    this.entryCount  = 0;\n    this.oldElementValue = this.element.value;\n\n    if(this.setOptions)\n      this.setOptions(options);\n    else\n      this.options = options || { };\n\n    this.options.paramName    = this.options.paramName || this.element.name;\n    this.options.tokens       = this.options.tokens || [];\n    this.options.frequency    = this.options.frequency || 0.4;\n    this.options.minChars     = this.options.minChars || 1;\n    this.options.onShow       = this.options.onShow ||\n      function(element, update){\n        if(!update.style.position || update.style.position=='absolute') {\n          update.style.position = 'absolute';\n          Position.clone(element, update, {\n            setHeight: false,\n            offsetTop: element.offsetHeight\n          });\n        }\n        Effect.Appear(update,{duration:0.15});\n      };\n    this.options.onHide = this.options.onHide ||\n      function(element, update){ new Effect.Fade(update,{duration:0.15}) };\n\n    if(typeof(this.options.tokens) == 'string')\n      this.options.tokens = new Array(this.options.tokens);\n    // Force carriage returns as token delimiters anyway\n    if (!this.options.tokens.include('\\n'))\n      this.options.tokens.push('\\n');\n\n    this.observer = null;\n\n    this.element.setAttribute('autocomplete','off');\n\n    Element.hide(this.update);\n\n    Event.observe(this.element, 'blur', this.onBlur.bindAsEventListener(this));\n    Event.observe(this.element, 'keydown', this.onKeyPress.bindAsEventListener(this));\n  },\n\n  show: function() {\n    if(Element.getStyle(this.update, 'display')=='none') this.options.onShow(this.element, this.update);\n    if(!this.iefix &&\n      (Prototype.Browser.IE) &&\n      (Element.getStyle(this.update, 'position')=='absolute')) {\n      new Insertion.After(this.update,\n       '<iframe id=\"' + this.update.id + '_iefix\" '+\n       'style=\"display:none;position:absolute;filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0);\" ' +\n       'src=\"javascript:false;\" frameborder=\"0\" scrolling=\"no\"></iframe>');\n      this.iefix = $(this.update.id+'_iefix');\n    }\n    if(this.iefix) setTimeout(this.fixIEOverlapping.bind(this), 50);\n  },\n\n  fixIEOverlapping: function() {\n    Position.clone(this.update, this.iefix, {setTop:(!this.update.style.height)});\n    this.iefix.style.zIndex = 1;\n    this.update.style.zIndex = 2;\n    Element.show(this.iefix);\n  },\n\n  hide: function() {\n    this.stopIndicator();\n    if(Element.getStyle(this.update, 'display')!='none') this.options.onHide(this.element, this.update);\n    if(this.iefix) Element.hide(this.iefix);\n  },\n\n  startIndicator: function() {\n    if(this.options.indicator) Element.show(this.options.indicator);\n  },\n\n  stopIndicator: function() {\n    if(this.options.indicator) Element.hide(this.options.indicator);\n  },\n\n  onKeyPress: function(event) {\n    if(this.active)\n      switch(event.keyCode) {\n       case Event.KEY_TAB:\n       case Event.KEY_RETURN:\n         this.selectEntry();\n         Event.stop(event);\n       case Event.KEY_ESC:\n         this.hide();\n         this.active = false;\n         Event.stop(event);\n         return;\n       case Event.KEY_LEFT:\n       case Event.KEY_RIGHT:\n         return;\n       case Event.KEY_UP:\n         this.markPrevious();\n         this.render();\n         Event.stop(event);\n         return;\n       case Event.KEY_DOWN:\n         this.markNext();\n         this.render();\n         Event.stop(event);\n         return;\n      }\n     else\n       if(event.keyCode==Event.KEY_TAB || event.keyCode==Event.KEY_RETURN ||\n         (Prototype.Browser.WebKit > 0 && event.keyCode == 0)) return;\n\n    this.changed = true;\n    this.hasFocus = true;\n\n    if(this.observer) clearTimeout(this.observer);\n      this.observer =\n        setTimeout(this.onObserverEvent.bind(this), this.options.frequency*1000);\n  },\n\n  activate: function() {\n    this.changed = false;\n    this.hasFocus = true;\n    this.getUpdatedChoices();\n  },\n\n  onHover: function(event) {\n    var element = Event.findElement(event, 'LI');\n    if(this.index != element.autocompleteIndex)\n    {\n        this.index = element.autocompleteIndex;\n        this.render();\n    }\n    Event.stop(event);\n  },\n\n  onClick: function(event) {\n    var element = Event.findElement(event, 'LI');\n    this.index = element.autocompleteIndex;\n    this.selectEntry();\n    this.hide();\n  },\n\n  onBlur: function(event) {\n    // needed to make click events working\n    setTimeout(this.hide.bind(this), 250);\n    this.hasFocus = false;\n    this.active = false;\n  },\n\n  render: function() {\n    if(this.entryCount > 0) {\n      for (var i = 0; i < this.entryCount; i++)\n        this.index==i ?\n          Element.addClassName(this.getEntry(i),\"selected\") :\n          Element.removeClassName(this.getEntry(i),\"selected\");\n      if(this.hasFocus) {\n        this.show();\n        this.active = true;\n      }\n    } else {\n      this.active = false;\n      this.hide();\n    }\n  },\n\n  markPrevious: function() {\n    if(this.index > 0) this.index--;\n      else this.index = this.entryCount-1;\n    this.getEntry(this.index).scrollIntoView(true);\n  },\n\n  markNext: function() {\n    if(this.index < this.entryCount-1) this.index++;\n      else this.index = 0;\n    this.getEntry(this.index).scrollIntoView(false);\n  },\n\n  getEntry: function(index) {\n    return this.update.firstChild.childNodes[index];\n  },\n\n  getCurrentEntry: function() {\n    return this.getEntry(this.index);\n  },\n\n  selectEntry: function() {\n    this.active = false;\n    this.updateElement(this.getCurrentEntry());\n  },\n\n  updateElement: function(selectedElement) {\n    if (this.options.updateElement) {\n      this.options.updateElement(selectedElement);\n      return;\n    }\n    var value = '';\n    if (this.options.select) {\n      var nodes = $(selectedElement).select('.' + this.options.select) || [];\n      if(nodes.length>0) value = Element.collectTextNodes(nodes[0], this.options.select);\n    } else\n      value = Element.collectTextNodesIgnoreClass(selectedElement, 'informal');\n\n    var bounds = this.getTokenBounds();\n    if (bounds[0] != -1) {\n      var newValue = this.element.value.substr(0, bounds[0]);\n      var whitespace = this.element.value.substr(bounds[0]).match(/^\\s+/);\n      if (whitespace)\n        newValue += whitespace[0];\n      this.element.value = newValue + value + this.element.value.substr(bounds[1]);\n    } else {\n      this.element.value = value;\n    }\n    this.oldElementValue = this.element.value;\n    this.element.focus();\n\n    if (this.options.afterUpdateElement)\n      this.options.afterUpdateElement(this.element, selectedElement);\n  },\n\n  updateChoices: function(choices) {\n    if(!this.changed && this.hasFocus) {\n      this.update.innerHTML = choices;\n      Element.cleanWhitespace(this.update);\n      Element.cleanWhitespace(this.update.down());\n\n      if(this.update.firstChild && this.update.down().childNodes) {\n        this.entryCount =\n          this.update.down().childNodes.length;\n        for (var i = 0; i < this.entryCount; i++) {\n          var entry = this.getEntry(i);\n          entry.autocompleteIndex = i;\n          this.addObservers(entry);\n        }\n      } else {\n        this.entryCount = 0;\n      }\n\n      this.stopIndicator();\n      this.index = 0;\n\n      if(this.entryCount==1 && this.options.autoSelect) {\n        this.selectEntry();\n        this.hide();\n      } else {\n        this.render();\n      }\n    }\n  },\n\n  addObservers: function(element) {\n    Event.observe(element, \"mouseover\", this.onHover.bindAsEventListener(this));\n    Event.observe(element, \"click\", this.onClick.bindAsEventListener(this));\n  },\n\n  onObserverEvent: function() {\n    this.changed = false;\n    this.tokenBounds = null;\n    if(this.getToken().length>=this.options.minChars) {\n      this.getUpdatedChoices();\n    } else {\n      this.active = false;\n      this.hide();\n    }\n    this.oldElementValue = this.element.value;\n  },\n\n  getToken: function() {\n    var bounds = this.getTokenBounds();\n    return this.element.value.substring(bounds[0], bounds[1]).strip();\n  },\n\n  getTokenBounds: function() {\n    if (null != this.tokenBounds) return this.tokenBounds;\n    var value = this.element.value;\n    if (value.strip().empty()) return [-1, 0];\n    var diff = arguments.callee.getFirstDifferencePos(value, this.oldElementValue);\n    var offset = (diff == this.oldElementValue.length ? 1 : 0);\n    var prevTokenPos = -1, nextTokenPos = value.length;\n    var tp;\n    for (var index = 0, l = this.options.tokens.length; index < l; ++index) {\n      tp = value.lastIndexOf(this.options.tokens[index], diff + offset - 1);\n      if (tp > prevTokenPos) prevTokenPos = tp;\n      tp = value.indexOf(this.options.tokens[index], diff + offset);\n      if (-1 != tp && tp < nextTokenPos) nextTokenPos = tp;\n    }\n    return (this.tokenBounds = [prevTokenPos + 1, nextTokenPos]);\n  }\n});\n\nAutocompleter.Base.prototype.getTokenBounds.getFirstDifferencePos = function(newS, oldS) {\n  var boundary = Math.min(newS.length, oldS.length);\n  for (var index = 0; index < boundary; ++index)\n    if (newS[index] != oldS[index])\n      return index;\n  return boundary;\n};\n\nAjax.Autocompleter = Class.create(Autocompleter.Base, {\n  initialize: function(element, update, url, options) {\n    this.baseInitialize(element, update, options);\n    this.options.asynchronous  = true;\n    this.options.onComplete    = this.onComplete.bind(this);\n    this.options.defaultParams = this.options.parameters || null;\n    this.url                   = url;\n  },\n\n  getUpdatedChoices: function() {\n    this.startIndicator();\n\n    var entry = encodeURIComponent(this.options.paramName) + '=' +\n      encodeURIComponent(this.getToken());\n\n    this.options.parameters = this.options.callback ?\n      this.options.callback(this.element, entry) : entry;\n\n    if(this.options.defaultParams)\n      this.options.parameters += '&' + this.options.defaultParams;\n\n    new Ajax.Request(this.url, this.options);\n  },\n\n  onComplete: function(request) {\n    this.updateChoices(request.responseText);\n  }\n});\n\n// The local array autocompleter. Used when you'd prefer to\n// inject an array of autocompletion options into the page, rather\n// than sending out Ajax queries, which can be quite slow sometimes.\n//\n// The constructor takes four parameters. The first two are, as usual,\n// the id of the monitored textbox, and id of the autocompletion menu.\n// The third is the array you want to autocomplete from, and the fourth\n// is the options block.\n//\n// Extra local autocompletion options:\n// - choices - How many autocompletion choices to offer\n//\n// - partialSearch - If false, the autocompleter will match entered\n//                    text only at the beginning of strings in the\n//                    autocomplete array. Defaults to true, which will\n//                    match text at the beginning of any *word* in the\n//                    strings in the autocomplete array. If you want to\n//                    search anywhere in the string, additionally set\n//                    the option fullSearch to true (default: off).\n//\n// - fullSsearch - Search anywhere in autocomplete array strings.\n//\n// - partialChars - How many characters to enter before triggering\n//                   a partial match (unlike minChars, which defines\n//                   how many characters are required to do any match\n//                   at all). Defaults to 2.\n//\n// - ignoreCase - Whether to ignore case when autocompleting.\n//                 Defaults to true.\n//\n// It's possible to pass in a custom function as the 'selector'\n// option, if you prefer to write your own autocompletion logic.\n// In that case, the other options above will not apply unless\n// you support them.\n\nAutocompleter.Local = Class.create(Autocompleter.Base, {\n  initialize: function(element, update, array, options) {\n    this.baseInitialize(element, update, options);\n    this.options.array = array;\n  },\n\n  getUpdatedChoices: function() {\n    this.updateChoices(this.options.selector(this));\n  },\n\n  setOptions: function(options) {\n    this.options = Object.extend({\n      choices: 10,\n      partialSearch: true,\n      partialChars: 2,\n      ignoreCase: true,\n      fullSearch: false,\n      selector: function(instance) {\n        var ret       = []; // Beginning matches\n        var partial   = []; // Inside matches\n        var entry     = instance.getToken();\n        var count     = 0;\n\n        for (var i = 0; i < instance.options.array.length &&\n          ret.length < instance.options.choices ; i++) {\n\n          var elem = instance.options.array[i];\n          var foundPos = instance.options.ignoreCase ?\n            elem.toLowerCase().indexOf(entry.toLowerCase()) :\n            elem.indexOf(entry);\n\n          while (foundPos != -1) {\n            if (foundPos == 0 && elem.length != entry.length) {\n              ret.push(\"<li><strong>\" + elem.substr(0, entry.length) + \"</strong>\" +\n                elem.substr(entry.length) + \"</li>\");\n              break;\n            } else if (entry.length >= instance.options.partialChars &&\n              instance.options.partialSearch && foundPos != -1) {\n              if (instance.options.fullSearch || /\\s/.test(elem.substr(foundPos-1,1))) {\n                partial.push(\"<li>\" + elem.substr(0, foundPos) + \"<strong>\" +\n                  elem.substr(foundPos, entry.length) + \"</strong>\" + elem.substr(\n                  foundPos + entry.length) + \"</li>\");\n                break;\n              }\n            }\n\n            foundPos = instance.options.ignoreCase ?\n              elem.toLowerCase().indexOf(entry.toLowerCase(), foundPos + 1) :\n              elem.indexOf(entry, foundPos + 1);\n\n          }\n        }\n        if (partial.length)\n          ret = ret.concat(partial.slice(0, instance.options.choices - ret.length));\n        return \"<ul>\" + ret.join('') + \"</ul>\";\n      }\n    }, options || { });\n  }\n});\n\n// AJAX in-place editor and collection editor\n// Full rewrite by Christophe Porteneuve <tdd@tddsworld.com> (April 2007).\n\n// Use this if you notice weird scrolling problems on some browsers,\n// the DOM might be a bit confused when this gets called so do this\n// waits 1 ms (with setTimeout) until it does the activation\nField.scrollFreeActivate = function(field) {\n  setTimeout(function() {\n    Field.activate(field);\n  }, 1);\n};\n\nAjax.InPlaceEditor = Class.create({\n  initialize: function(element, url, options) {\n    this.url = url;\n    this.element = element = $(element);\n    this.prepareOptions();\n    this._controls = { };\n    arguments.callee.dealWithDeprecatedOptions(options); // DEPRECATION LAYER!!!\n    Object.extend(this.options, options || { });\n    if (!this.options.formId && this.element.id) {\n      this.options.formId = this.element.id + '-inplaceeditor';\n      if ($(this.options.formId))\n        this.options.formId = '';\n    }\n    if (this.options.externalControl)\n      this.options.externalControl = $(this.options.externalControl);\n    if (!this.options.externalControl)\n      this.options.externalControlOnly = false;\n    this._originalBackground = this.element.getStyle('background-color') || 'transparent';\n    this.element.title = this.options.clickToEditText;\n    this._boundCancelHandler = this.handleFormCancellation.bind(this);\n    this._boundComplete = (this.options.onComplete || Prototype.emptyFunction).bind(this);\n    this._boundFailureHandler = this.handleAJAXFailure.bind(this);\n    this._boundSubmitHandler = this.handleFormSubmission.bind(this);\n    this._boundWrapperHandler = this.wrapUp.bind(this);\n    this.registerListeners();\n  },\n  checkForEscapeOrReturn: function(e) {\n    if (!this._editing || e.ctrlKey || e.altKey || e.shiftKey) return;\n    if (Event.KEY_ESC == e.keyCode)\n      this.handleFormCancellation(e);\n    else if (Event.KEY_RETURN == e.keyCode)\n      this.handleFormSubmission(e);\n  },\n  createControl: function(mode, handler, extraClasses) {\n    var control = this.options[mode + 'Control'];\n    var text = this.options[mode + 'Text'];\n    if ('button' == control) {\n      var btn = document.createElement('input');\n      btn.type = 'submit';\n      btn.value = text;\n      btn.className = 'editor_' + mode + '_button';\n      if ('cancel' == mode)\n        btn.onclick = this._boundCancelHandler;\n      this._form.appendChild(btn);\n      this._controls[mode] = btn;\n    } else if ('link' == control) {\n      var link = document.createElement('a');\n      link.href = '#';\n      link.appendChild(document.createTextNode(text));\n      link.onclick = 'cancel' == mode ? this._boundCancelHandler : this._boundSubmitHandler;\n      link.className = 'editor_' + mode + '_link';\n      if (extraClasses)\n        link.className += ' ' + extraClasses;\n      this._form.appendChild(link);\n      this._controls[mode] = link;\n    }\n  },\n  createEditField: function() {\n    var text = (this.options.loadTextURL ? this.options.loadingText : this.getText());\n    var fld;\n    if (1 >= this.options.rows && !/\\r|\\n/.test(this.getText())) {\n      fld = document.createElement('input');\n      fld.type = 'text';\n      var size = this.options.size || this.options.cols || 0;\n      if (0 < size) fld.size = size;\n    } else {\n      fld = document.createElement('textarea');\n      fld.rows = (1 >= this.options.rows ? this.options.autoRows : this.options.rows);\n      fld.cols = this.options.cols || 40;\n    }\n    fld.name = this.options.paramName;\n    fld.value = text; // No HTML breaks conversion anymore\n    fld.className = 'editor_field';\n    if (this.options.submitOnBlur)\n      fld.onblur = this._boundSubmitHandler;\n    this._controls.editor = fld;\n    if (this.options.loadTextURL)\n      this.loadExternalText();\n    this._form.appendChild(this._controls.editor);\n  },\n  createForm: function() {\n    var ipe = this;\n    function addText(mode, condition) {\n      var text = ipe.options['text' + mode + 'Controls'];\n      if (!text || condition === false) return;\n      ipe._form.appendChild(document.createTextNode(text));\n    };\n    this._form = $(document.createElement('form'));\n    this._form.id = this.options.formId;\n    this._form.addClassName(this.options.formClassName);\n    this._form.onsubmit = this._boundSubmitHandler;\n    this.createEditField();\n    if ('textarea' == this._controls.editor.tagName.toLowerCase())\n      this._form.appendChild(document.createElement('br'));\n    if (this.options.onFormCustomization)\n      this.options.onFormCustomization(this, this._form);\n    addText('Before', this.options.okControl || this.options.cancelControl);\n    this.createControl('ok', this._boundSubmitHandler);\n    addText('Between', this.options.okControl && this.options.cancelControl);\n    this.createControl('cancel', this._boundCancelHandler, 'editor_cancel');\n    addText('After', this.options.okControl || this.options.cancelControl);\n  },\n  destroy: function() {\n    if (this._oldInnerHTML)\n      this.element.innerHTML = this._oldInnerHTML;\n    this.leaveEditMode();\n    this.unregisterListeners();\n  },\n  enterEditMode: function(e) {\n    if (this._saving || this._editing) return;\n    this._editing = true;\n    this.triggerCallback('onEnterEditMode');\n    if (this.options.externalControl)\n      this.options.externalControl.hide();\n    this.element.hide();\n    this.createForm();\n    this.element.parentNode.insertBefore(this._form, this.element);\n    if (!this.options.loadTextURL)\n      this.postProcessEditField();\n    if (e) Event.stop(e);\n  },\n  enterHover: function(e) {\n    if (this.options.hoverClassName)\n      this.element.addClassName(this.options.hoverClassName);\n    if (this._saving) return;\n    this.triggerCallback('onEnterHover');\n  },\n  getText: function() {\n    return this.element.innerHTML.unescapeHTML();\n  },\n  handleAJAXFailure: function(transport) {\n    this.triggerCallback('onFailure', transport);\n    if (this._oldInnerHTML) {\n      this.element.innerHTML = this._oldInnerHTML;\n      this._oldInnerHTML = null;\n    }\n  },\n  handleFormCancellation: function(e) {\n    this.wrapUp();\n    if (e) Event.stop(e);\n  },\n  handleFormSubmission: function(e) {\n    var form = this._form;\n    var value = $F(this._controls.editor);\n    this.prepareSubmission();\n    var params = this.options.callback(form, value) || '';\n    if (Object.isString(params))\n      params = params.toQueryParams();\n    params.editorId = this.element.id;\n    if (this.options.htmlResponse) {\n      var options = Object.extend({ evalScripts: true }, this.options.ajaxOptions);\n      Object.extend(options, {\n        parameters: params,\n        onComplete: this._boundWrapperHandler,\n        onFailure: this._boundFailureHandler\n      });\n      new Ajax.Updater({ success: this.element }, this.url, options);\n    } else {\n      var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);\n      Object.extend(options, {\n        parameters: params,\n        onComplete: this._boundWrapperHandler,\n        onFailure: this._boundFailureHandler\n      });\n      new Ajax.Request(this.url, options);\n    }\n    if (e) Event.stop(e);\n  },\n  leaveEditMode: function() {\n    this.element.removeClassName(this.options.savingClassName);\n    this.removeForm();\n    this.leaveHover();\n    this.element.style.backgroundColor = this._originalBackground;\n    this.element.show();\n    if (this.options.externalControl)\n      this.options.externalControl.show();\n    this._saving = false;\n    this._editing = false;\n    this._oldInnerHTML = null;\n    this.triggerCallback('onLeaveEditMode');\n  },\n  leaveHover: function(e) {\n    if (this.options.hoverClassName)\n      this.element.removeClassName(this.options.hoverClassName);\n    if (this._saving) return;\n    this.triggerCallback('onLeaveHover');\n  },\n  loadExternalText: function() {\n    this._form.addClassName(this.options.loadingClassName);\n    this._controls.editor.disabled = true;\n    var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);\n    Object.extend(options, {\n      parameters: 'editorId=' + encodeURIComponent(this.element.id),\n      onComplete: Prototype.emptyFunction,\n      onSuccess: function(transport) {\n        this._form.removeClassName(this.options.loadingClassName);\n        var text = transport.responseText;\n        if (this.options.stripLoadedTextTags)\n          text = text.stripTags();\n        this._controls.editor.value = text;\n        this._controls.editor.disabled = false;\n        this.postProcessEditField();\n      }.bind(this),\n      onFailure: this._boundFailureHandler\n    });\n    new Ajax.Request(this.options.loadTextURL, options);\n  },\n  postProcessEditField: function() {\n    var fpc = this.options.fieldPostCreation;\n    if (fpc)\n      $(this._controls.editor)['focus' == fpc ? 'focus' : 'activate']();\n  },\n  prepareOptions: function() {\n    this.options = Object.clone(Ajax.InPlaceEditor.DefaultOptions);\n    Object.extend(this.options, Ajax.InPlaceEditor.DefaultCallbacks);\n    [this._extraDefaultOptions].flatten().compact().each(function(defs) {\n      Object.extend(this.options, defs);\n    }.bind(this));\n  },\n  prepareSubmission: function() {\n    this._saving = true;\n    this.removeForm();\n    this.leaveHover();\n    this.showSaving();\n  },\n  registerListeners: function() {\n    this._listeners = { };\n    var listener;\n    $H(Ajax.InPlaceEditor.Listeners).each(function(pair) {\n      listener = this[pair.value].bind(this);\n      this._listeners[pair.key] = listener;\n      if (!this.options.externalControlOnly)\n        this.element.observe(pair.key, listener);\n      if (this.options.externalControl)\n        this.options.externalControl.observe(pair.key, listener);\n    }.bind(this));\n  },\n  removeForm: function() {\n    if (!this._form) return;\n    this._form.remove();\n    this._form = null;\n    this._controls = { };\n  },\n  showSaving: function() {\n    this._oldInnerHTML = this.element.innerHTML;\n    this.element.innerHTML = this.options.savingText;\n    this.element.addClassName(this.options.savingClassName);\n    this.element.style.backgroundColor = this._originalBackground;\n    this.element.show();\n  },\n  triggerCallback: function(cbName, arg) {\n    if ('function' == typeof this.options[cbName]) {\n      this.options[cbName](this, arg);\n    }\n  },\n  unregisterListeners: function() {\n    $H(this._listeners).each(function(pair) {\n      if (!this.options.externalControlOnly)\n        this.element.stopObserving(pair.key, pair.value);\n      if (this.options.externalControl)\n        this.options.externalControl.stopObserving(pair.key, pair.value);\n    }.bind(this));\n  },\n  wrapUp: function(transport) {\n    this.leaveEditMode();\n    // Can't use triggerCallback due to backward compatibility: requires\n    // binding + direct element\n    this._boundComplete(transport, this.element);\n  }\n});\n\nObject.extend(Ajax.InPlaceEditor.prototype, {\n  dispose: Ajax.InPlaceEditor.prototype.destroy\n});\n\nAjax.InPlaceCollectionEditor = Class.create(Ajax.InPlaceEditor, {\n  initialize: function($super, element, url, options) {\n    this._extraDefaultOptions = Ajax.InPlaceCollectionEditor.DefaultOptions;\n    $super(element, url, options);\n  },\n\n  createEditField: function() {\n    var list = document.createElement('select');\n    list.name = this.options.paramName;\n    list.size = 1;\n    this._controls.editor = list;\n    this._collection = this.options.collection || [];\n    if (this.options.loadCollectionURL)\n      this.loadCollection();\n    else\n      this.checkForExternalText();\n    this._form.appendChild(this._controls.editor);\n  },\n\n  loadCollection: function() {\n    this._form.addClassName(this.options.loadingClassName);\n    this.showLoadingText(this.options.loadingCollectionText);\n    var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);\n    Object.extend(options, {\n      parameters: 'editorId=' + encodeURIComponent(this.element.id),\n      onComplete: Prototype.emptyFunction,\n      onSuccess: function(transport) {\n        var js = transport.responseText.strip();\n        if (!/^\\[.*\\]$/.test(js)) // TODO: improve sanity check\n          throw('Server returned an invalid collection representation.');\n        this._collection = eval(js);\n        this.checkForExternalText();\n      }.bind(this),\n      onFailure: this.onFailure\n    });\n    new Ajax.Request(this.options.loadCollectionURL, options);\n  },\n\n  showLoadingText: function(text) {\n    this._controls.editor.disabled = true;\n    var tempOption = this._controls.editor.firstChild;\n    if (!tempOption) {\n      tempOption = document.createElement('option');\n      tempOption.value = '';\n      this._controls.editor.appendChild(tempOption);\n      tempOption.selected = true;\n    }\n    tempOption.update((text || '').stripScripts().stripTags());\n  },\n\n  checkForExternalText: function() {\n    this._text = this.getText();\n    if (this.options.loadTextURL)\n      this.loadExternalText();\n    else\n      this.buildOptionList();\n  },\n\n  loadExternalText: function() {\n    this.showLoadingText(this.options.loadingText);\n    var options = Object.extend({ method: 'get' }, this.options.ajaxOptions);\n    Object.extend(options, {\n      parameters: 'editorId=' + encodeURIComponent(this.element.id),\n      onComplete: Prototype.emptyFunction,\n      onSuccess: function(transport) {\n        this._text = transport.responseText.strip();\n        this.buildOptionList();\n      }.bind(this),\n      onFailure: this.onFailure\n    });\n    new Ajax.Request(this.options.loadTextURL, options);\n  },\n\n  buildOptionList: function() {\n    this._form.removeClassName(this.options.loadingClassName);\n    this._collection = this._collection.map(function(entry) {\n      return 2 === entry.length ? entry : [entry, entry].flatten();\n    });\n    var marker = ('value' in this.options) ? this.options.value : this._text;\n    var textFound = this._collection.any(function(entry) {\n      return entry[0] == marker;\n    }.bind(this));\n    this._controls.editor.update('');\n    var option;\n    this._collection.each(function(entry, index) {\n      option = document.createElement('option');\n      option.value = entry[0];\n      option.selected = textFound ? entry[0] == marker : 0 == index;\n      option.appendChild(document.createTextNode(entry[1]));\n      this._controls.editor.appendChild(option);\n    }.bind(this));\n    this._controls.editor.disabled = false;\n    Field.scrollFreeActivate(this._controls.editor);\n  }\n});\n\n//**** DEPRECATION LAYER FOR InPlace[Collection]Editor! ****\n//**** This only  exists for a while,  in order to  let ****\n//**** users adapt to  the new API.  Read up on the new ****\n//**** API and convert your code to it ASAP!            ****\n\nAjax.InPlaceEditor.prototype.initialize.dealWithDeprecatedOptions = function(options) {\n  if (!options) return;\n  function fallback(name, expr) {\n    if (name in options || expr === undefined) return;\n    options[name] = expr;\n  };\n  fallback('cancelControl', (options.cancelLink ? 'link' : (options.cancelButton ? 'button' :\n    options.cancelLink == options.cancelButton == false ? false : undefined)));\n  fallback('okControl', (options.okLink ? 'link' : (options.okButton ? 'button' :\n    options.okLink == options.okButton == false ? false : undefined)));\n  fallback('highlightColor', options.highlightcolor);\n  fallback('highlightEndColor', options.highlightendcolor);\n};\n\nObject.extend(Ajax.InPlaceEditor, {\n  DefaultOptions: {\n    ajaxOptions: { },\n    autoRows: 3,                                // Use when multi-line w/ rows == 1\n    cancelControl: 'link',                      // 'link'|'button'|false\n    cancelText: 'cancel',\n    clickToEditText: 'Click to edit',\n    externalControl: null,                      // id|elt\n    externalControlOnly: false,\n    fieldPostCreation: 'activate',              // 'activate'|'focus'|false\n    formClassName: 'inplaceeditor-form',\n    formId: null,                               // id|elt\n    highlightColor: '#ffff99',\n    highlightEndColor: '#ffffff',\n    hoverClassName: '',\n    htmlResponse: true,\n    loadingClassName: 'inplaceeditor-loading',\n    loadingText: 'Loading...',\n    okControl: 'button',                        // 'link'|'button'|false\n    okText: 'ok',\n    paramName: 'value',\n    rows: 1,                                    // If 1 and multi-line, uses autoRows\n    savingClassName: 'inplaceeditor-saving',\n    savingText: 'Saving...',\n    size: 0,\n    stripLoadedTextTags: false,\n    submitOnBlur: false,\n    textAfterControls: '',\n    textBeforeControls: '',\n    textBetweenControls: ''\n  },\n  DefaultCallbacks: {\n    callback: function(form) {\n      return Form.serialize(form);\n    },\n    onComplete: function(transport, element) {\n      // For backward compatibility, this one is bound to the IPE, and passes\n      // the element directly.  It was too often customized, so we don't break it.\n      new Effect.Highlight(element, {\n        startcolor: this.options.highlightColor, keepBackgroundImage: true });\n    },\n    onEnterEditMode: null,\n    onEnterHover: function(ipe) {\n      ipe.element.style.backgroundColor = ipe.options.highlightColor;\n      if (ipe._effect)\n        ipe._effect.cancel();\n    },\n    onFailure: function(transport, ipe) {\n      alert('Error communication with the server: ' + transport.responseText.stripTags());\n    },\n    onFormCustomization: null, // Takes the IPE and its generated form, after editor, before controls.\n    onLeaveEditMode: null,\n    onLeaveHover: function(ipe) {\n      ipe._effect = new Effect.Highlight(ipe.element, {\n        startcolor: ipe.options.highlightColor, endcolor: ipe.options.highlightEndColor,\n        restorecolor: ipe._originalBackground, keepBackgroundImage: true\n      });\n    }\n  },\n  Listeners: {\n    click: 'enterEditMode',\n    keydown: 'checkForEscapeOrReturn',\n    mouseover: 'enterHover',\n    mouseout: 'leaveHover'\n  }\n});\n\nAjax.InPlaceCollectionEditor.DefaultOptions = {\n  loadingCollectionText: 'Loading options...'\n};\n\n// Delayed observer, like Form.Element.Observer,\n// but waits for delay after last key input\n// Ideal for live-search fields\n\nForm.Element.DelayedObserver = Class.create({\n  initialize: function(element, delay, callback) {\n    this.delay     = delay || 0.5;\n    this.element   = $(element);\n    this.callback  = callback;\n    this.timer     = null;\n    this.lastValue = $F(this.element);\n    Event.observe(this.element,'keyup',this.delayedListener.bindAsEventListener(this));\n  },\n  delayedListener: function(event) {\n    if(this.lastValue == $F(this.element)) return;\n    if(this.timer) clearTimeout(this.timer);\n    this.timer = setTimeout(this.onTimerEvent.bind(this), this.delay * 1000);\n    this.lastValue = $F(this.element);\n  },\n  onTimerEvent: function() {\n    this.timer = null;\n    this.callback(this.element, $F(this.element));\n  }\n});",
      "css" : "/*\n * grid style\n */\n\n/* the main table of JB controls */\ntable.jb_params { border-collapse: collapse; margin-right: auto; margin-left: auto }\ntable.jb_params tr.header { background-color: #B6C8D0 }\ntable.jb_params tr.selected { background-color: #D8E0E4 }\ntable.jb_params tr.unselected { background-color: #E4E8E8; color: #664 }\ntable.jb_params tr.selected th.header { background-color: #B6C8D0 }\ntable.jb_params th.always-header { background-color: #B6C8D0 }\ntable.jb_params td, th { border: 1px solid #FFF; padding: 0.5em }\ntable.jb_params td { text-align: center; font-size: 0.7em }\ntable.jb_params table { border-collapse: collapse; margin-right: auto; margin-left: auto }\ntable.jb_params table td { font-size: 1.0em; border: none }\ntable.jb_params td label { display: inline; float: none }\n\n/* default sytles for form controls */\ntable.jb_params select { border: 1px solid #9BAAAF; font-size: 1.0em }\ntable.jb_params input { border: 1px solid #9BAAAF; font-size: 1.0em; text-align: center }\n\n/* form control styles when JB is selected or unslected */\ntable.jb_params tr.selected select { color: black }\ntable.jb_params tr.unselected select { color: #888 }\ntable.jb_params tr.selected input { color: black }\ntable.jb_params tr.unselected input { color: #888 }\n\n/* for autocompletion divs and the lists they contain */\ntable.jb_params div.autocomplete ul { padding: 0; margin: 0; margin-top: 0.5em; background-color: white; text-align: left; border: 1px solid #9BAAAF; width: 250px; height: 200px; overflow: auto }\ntable.jb_params div.autocomplete li { padding: 1px 3px; margin: 0; list-style: none; white-space: nowrap }\ntable.jb_params div.autocomplete li.selected { background-color: #0A246A; color: white }\n\n/* miscellaneous */\ntable.jb_params div.spacer { margin: 0.5em 0 }\ntable.jb_params div.smallSpacer { margin: 0.25em 0 }\ntable.jb_params .blank { background-color: #E4E8E8 !important }\ntable.jb_params .error { color: #F00 }\npre.jb_params { border: 1px solid #9BAAAF; background-color: white; padding: 0.5em; margin: 0 10% 2em 10% }\n\n/*\n * tabs style\n */\n\n/* tab controls */\ndiv.jb_params table.tab_control { margin-left: auto; margin-right: auto }\ndiv.jb_params table.tab_control td { border: 1px solid #FFF; padding: 0.5em }\ndiv.jb_params span.header { font-weight: bold; }\ndiv.jb_params table.tab_control td.selected { background-color: #B6C8D0 }\ndiv.jb_params table.tab_control td.invisible { border-color: #E4E8E8 }\ndiv.jb_params table.tab_control td.smallish { font-size: 0.7em }\n\n/* tables */\ndiv.jb_params tr.header { background-color: #B6C8D0 }\ndiv.jb_params table.tab_tab { border-collapse: collapse; margin-right: auto; margin-left: auto }\ndiv.jb_params table.tab_tab td, th { border: 1px solid #FFF; padding: 0.5em }\ndiv.jb_params table.tab_tab td { text-align: center; font-size: 0.7em }\ndiv.jb_params table.selected tr { background-color: #D8E0E4}\ndiv.jb_params table.unselected tr { background-color: #E4E8E8; color: #664 }\ndiv.jb_params td.header { font-weight: bold; font-size: 1.0em !important; }\ndiv.jb_params td label { display: inline; float: none }\n\n/* form controls */\ndiv.jb_params select { border: 1px solid #9BAAAF; font-size: 1.0em }\ndiv.jb_params input { border: 1px solid #9BAAAF; font-size: 1.0em; text-align: center }\ndiv.jb_params table.selected select { color: black }\ndiv.jb_params table.unselected select { color: #888 }\n\n/* autocompletions */\ndiv.jb_params div.autocomplete ul { padding: 0; margin: 0; margin-top: 0.5em; background-color: white; text-align: left; border: 1px solid #9BAAAF; width: 250px; height: 200px; overflow: auto }\ndiv.jb_params div.autocomplete li { padding: 1px 3px; margin: 0; list-style: none; white-space: nowrap }\ndiv.jb_params div.autocomplete li.selected { background-color: #0A246A; color: white }\n\n/* miscellaneous */\ndiv.jb_params div.spacer { margin: 0.5em 0 }\ndiv.jb_params div.smallSpacer { margin: 0.25em 0 }\ndiv.jb_params .blank { background-color: #E4E8E8 !important }\ndiv.jb_params .error { color: #F00 }\ndiv.jb_params .cushioned { margin-bottom: 1em }\n\n/*\n * divs style\n */\n\ndiv.jb_params div.generic { float: left; border: 1px solid #9BAAAF; padding: 0.5em; margin-right: 0.5em; font-size: 0.7em }\ndiv.jb_params div.generic div.label { font-size: 1.45em; font-weight: bold; margin-bottom: 0.5em }\ndiv.jb_params div.selection { float: left; border: 1px solid #9BAAAF; padding: 0.5em; margin-right: 0.5em }\ndiv.jb_params div.control { float: left; border: 1px solid #9BAAAF; padding: 0.5em; margin-right: 0.5em }\ndiv.jb_params div.selected { color: black; background-color: #B6C8D0 }\ndiv.jb_params div.unselected { color: #888;  background-color: #E4E8E8 }\ndiv.jb_params div.selected select { color: black }\ndiv.jb_params div.unselected select { color: #888 }\ndiv.jb_params div.generic { background-color: #B6C8D0 }\n\n/*\n * For jquery autocomplete.\n */\n.jb_params .ui-widget-overlay { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }\n.jb_params .ui-autocomplete { position: absolute; cursor: default; }\n.jb_params .ui-helper-hidden-accessible { display: none }\n",
      "effects" : "// script.aculo.us effects.js v1.8.3, Thu Oct 08 11:23:33 +0200 2009\n\n// Copyright (c) 2005-2009 Thomas Fuchs (http://script.aculo.us, http://mir.aculo.us)\n// Contributors:\n//  Justin Palmer (http://encytemedia.com/)\n//  Mark Pilgrim (http://diveintomark.org/)\n//  Martin Bialasinki\n//\n// script.aculo.us is freely distributable under the terms of an MIT-style license.\n// For details, see the script.aculo.us web site: http://script.aculo.us/\n\n// converts rgb() and #xxx to #xxxxxx format,\n// returns self (or first argument) if not convertable\nString.prototype.parseColor = function() {\n  var color = '#';\n  if (this.slice(0,4) == 'rgb(') {\n    var cols = this.slice(4,this.length-1).split(',');\n    var i=0; do { color += parseInt(cols[i]).toColorPart() } while (++i<3);\n  } else {\n    if (this.slice(0,1) == '#') {\n      if (this.length==4) for(var i=1;i<4;i++) color += (this.charAt(i) + this.charAt(i)).toLowerCase();\n      if (this.length==7) color = this.toLowerCase();\n    }\n  }\n  return (color.length==7 ? color : (arguments[0] || this));\n};\n\n/*--------------------------------------------------------------------------*/\n\nElement.collectTextNodes = function(element) {\n  return $A($(element).childNodes).collect( function(node) {\n    return (node.nodeType==3 ? node.nodeValue :\n      (node.hasChildNodes() ? Element.collectTextNodes(node) : ''));\n  }).flatten().join('');\n};\n\nElement.collectTextNodesIgnoreClass = function(element, className) {\n  return $A($(element).childNodes).collect( function(node) {\n    return (node.nodeType==3 ? node.nodeValue :\n      ((node.hasChildNodes() && !Element.hasClassName(node,className)) ?\n        Element.collectTextNodesIgnoreClass(node, className) : ''));\n  }).flatten().join('');\n};\n\nElement.setContentZoom = function(element, percent) {\n  element = $(element);\n  element.setStyle({fontSize: (percent/100) + 'em'});\n  if (Prototype.Browser.WebKit) window.scrollBy(0,0);\n  return element;\n};\n\nElement.getInlineOpacity = function(element){\n  return $(element).style.opacity || '';\n};\n\nElement.forceRerendering = function(element) {\n  try {\n    element = $(element);\n    var n = document.createTextNode(' ');\n    element.appendChild(n);\n    element.removeChild(n);\n  } catch(e) { }\n};\n\n/*--------------------------------------------------------------------------*/\n\nvar Effect = {\n  _elementDoesNotExistError: {\n    name: 'ElementDoesNotExistError',\n    message: 'The specified DOM element does not exist, but is required for this effect to operate'\n  },\n  Transitions: {\n    linear: Prototype.K,\n    sinoidal: function(pos) {\n      return (-Math.cos(pos*Math.PI)/2) + .5;\n    },\n    reverse: function(pos) {\n      return 1-pos;\n    },\n    flicker: function(pos) {\n      var pos = ((-Math.cos(pos*Math.PI)/4) + .75) + Math.random()/4;\n      return pos > 1 ? 1 : pos;\n    },\n    wobble: function(pos) {\n      return (-Math.cos(pos*Math.PI*(9*pos))/2) + .5;\n    },\n    pulse: function(pos, pulses) {\n      return (-Math.cos((pos*((pulses||5)-.5)*2)*Math.PI)/2) + .5;\n    },\n    spring: function(pos) {\n      return 1 - (Math.cos(pos * 4.5 * Math.PI) * Math.exp(-pos * 6));\n    },\n    none: function(pos) {\n      return 0;\n    },\n    full: function(pos) {\n      return 1;\n    }\n  },\n  DefaultOptions: {\n    duration:   1.0,   // seconds\n    fps:        100,   // 100= assume 66fps max.\n    sync:       false, // true for combining\n    from:       0.0,\n    to:         1.0,\n    delay:      0.0,\n    queue:      'parallel'\n  },\n  tagifyText: function(element) {\n    var tagifyStyle = 'position:relative';\n    if (Prototype.Browser.IE) tagifyStyle += ';zoom:1';\n\n    element = $(element);\n    $A(element.childNodes).each( function(child) {\n      if (child.nodeType==3) {\n        child.nodeValue.toArray().each( function(character) {\n          element.insertBefore(\n            new Element('span', {style: tagifyStyle}).update(\n              character == ' ' ? String.fromCharCode(160) : character),\n              child);\n        });\n        Element.remove(child);\n      }\n    });\n  },\n  multiple: function(element, effect) {\n    var elements;\n    if (((typeof element == 'object') ||\n        Object.isFunction(element)) &&\n       (element.length))\n      elements = element;\n    else\n      elements = $(element).childNodes;\n\n    var options = Object.extend({\n      speed: 0.1,\n      delay: 0.0\n    }, arguments[2] || { });\n    var masterDelay = options.delay;\n\n    $A(elements).each( function(element, index) {\n      new effect(element, Object.extend(options, { delay: index * options.speed + masterDelay }));\n    });\n  },\n  PAIRS: {\n    'slide':  ['SlideDown','SlideUp'],\n    'blind':  ['BlindDown','BlindUp'],\n    'appear': ['Appear','Fade']\n  },\n  toggle: function(element, effect, options) {\n    element = $(element);\n    effect  = (effect || 'appear').toLowerCase();\n    \n    return Effect[ Effect.PAIRS[ effect ][ element.visible() ? 1 : 0 ] ](element, Object.extend({\n      queue: { position:'end', scope:(element.id || 'global'), limit: 1 }\n    }, options || {}));\n  }\n};\n\nEffect.DefaultOptions.transition = Effect.Transitions.sinoidal;\n\n/* ------------- core effects ------------- */\n\nEffect.ScopedQueue = Class.create(Enumerable, {\n  initialize: function() {\n    this.effects  = [];\n    this.interval = null;\n  },\n  _each: function(iterator) {\n    this.effects._each(iterator);\n  },\n  add: function(effect) {\n    var timestamp = new Date().getTime();\n\n    var position = Object.isString(effect.options.queue) ?\n      effect.options.queue : effect.options.queue.position;\n\n    switch(position) {\n      case 'front':\n        // move unstarted effects after this effect\n        this.effects.findAll(function(e){ return e.state=='idle' }).each( function(e) {\n            e.startOn  += effect.finishOn;\n            e.finishOn += effect.finishOn;\n          });\n        break;\n      case 'with-last':\n        timestamp = this.effects.pluck('startOn').max() || timestamp;\n        break;\n      case 'end':\n        // start effect after last queued effect has finished\n        timestamp = this.effects.pluck('finishOn').max() || timestamp;\n        break;\n    }\n\n    effect.startOn  += timestamp;\n    effect.finishOn += timestamp;\n\n    if (!effect.options.queue.limit || (this.effects.length < effect.options.queue.limit))\n      this.effects.push(effect);\n\n    if (!this.interval)\n      this.interval = setInterval(this.loop.bind(this), 15);\n  },\n  remove: function(effect) {\n    this.effects = this.effects.reject(function(e) { return e==effect });\n    if (this.effects.length == 0) {\n      clearInterval(this.interval);\n      this.interval = null;\n    }\n  },\n  loop: function() {\n    var timePos = new Date().getTime();\n    for(var i=0, len=this.effects.length;i<len;i++)\n      this.effects[i] && this.effects[i].loop(timePos);\n  }\n});\n\nEffect.Queues = {\n  instances: $H(),\n  get: function(queueName) {\n    if (!Object.isString(queueName)) return queueName;\n\n    return this.instances.get(queueName) ||\n      this.instances.set(queueName, new Effect.ScopedQueue());\n  }\n};\nEffect.Queue = Effect.Queues.get('global');\n\nEffect.Base = Class.create({\n  position: null,\n  start: function(options) {\n    if (options && options.transition === false) options.transition = Effect.Transitions.linear;\n    this.options      = Object.extend(Object.extend({ },Effect.DefaultOptions), options || { });\n    this.currentFrame = 0;\n    this.state        = 'idle';\n    this.startOn      = this.options.delay*1000;\n    this.finishOn     = this.startOn+(this.options.duration*1000);\n    this.fromToDelta  = this.options.to-this.options.from;\n    this.totalTime    = this.finishOn-this.startOn;\n    this.totalFrames  = this.options.fps*this.options.duration;\n\n    this.render = (function() {\n      function dispatch(effect, eventName) {\n        if (effect.options[eventName + 'Internal'])\n          effect.options[eventName + 'Internal'](effect);\n        if (effect.options[eventName])\n          effect.options[eventName](effect);\n      }\n\n      return function(pos) {\n        if (this.state === \"idle\") {\n          this.state = \"running\";\n          dispatch(this, 'beforeSetup');\n          if (this.setup) this.setup();\n          dispatch(this, 'afterSetup');\n        }\n        if (this.state === \"running\") {\n          pos = (this.options.transition(pos) * this.fromToDelta) + this.options.from;\n          this.position = pos;\n          dispatch(this, 'beforeUpdate');\n          if (this.update) this.update(pos);\n          dispatch(this, 'afterUpdate');\n        }\n      };\n    })();\n\n    this.event('beforeStart');\n    if (!this.options.sync)\n      Effect.Queues.get(Object.isString(this.options.queue) ?\n        'global' : this.options.queue.scope).add(this);\n  },\n  loop: function(timePos) {\n    if (timePos >= this.startOn) {\n      if (timePos >= this.finishOn) {\n        this.render(1.0);\n        this.cancel();\n        this.event('beforeFinish');\n        if (this.finish) this.finish();\n        this.event('afterFinish');\n        return;\n      }\n      var pos   = (timePos - this.startOn) / this.totalTime,\n          frame = (pos * this.totalFrames).round();\n      if (frame > this.currentFrame) {\n        this.render(pos);\n        this.currentFrame = frame;\n      }\n    }\n  },\n  cancel: function() {\n    if (!this.options.sync)\n      Effect.Queues.get(Object.isString(this.options.queue) ?\n        'global' : this.options.queue.scope).remove(this);\n    this.state = 'finished';\n  },\n  event: function(eventName) {\n    if (this.options[eventName + 'Internal']) this.options[eventName + 'Internal'](this);\n    if (this.options[eventName]) this.options[eventName](this);\n  },\n  inspect: function() {\n    var data = $H();\n    for(property in this)\n      if (!Object.isFunction(this[property])) data.set(property, this[property]);\n    return '#<Effect:' + data.inspect() + ',options:' + $H(this.options).inspect() + '>';\n  }\n});\n\nEffect.Parallel = Class.create(Effect.Base, {\n  initialize: function(effects) {\n    this.effects = effects || [];\n    this.start(arguments[1]);\n  },\n  update: function(position) {\n    this.effects.invoke('render', position);\n  },\n  finish: function(position) {\n    this.effects.each( function(effect) {\n      effect.render(1.0);\n      effect.cancel();\n      effect.event('beforeFinish');\n      if (effect.finish) effect.finish(position);\n      effect.event('afterFinish');\n    });\n  }\n});\n\nEffect.Tween = Class.create(Effect.Base, {\n  initialize: function(object, from, to) {\n    object = Object.isString(object) ? $(object) : object;\n    var args = $A(arguments), method = args.last(),\n      options = args.length == 5 ? args[3] : null;\n    this.method = Object.isFunction(method) ? method.bind(object) :\n      Object.isFunction(object[method]) ? object[method].bind(object) :\n      function(value) { object[method] = value };\n    this.start(Object.extend({ from: from, to: to }, options || { }));\n  },\n  update: function(position) {\n    this.method(position);\n  }\n});\n\nEffect.Event = Class.create(Effect.Base, {\n  initialize: function() {\n    this.start(Object.extend({ duration: 0 }, arguments[0] || { }));\n  },\n  update: Prototype.emptyFunction\n});\n\nEffect.Opacity = Class.create(Effect.Base, {\n  initialize: function(element) {\n    this.element = $(element);\n    if (!this.element) throw(Effect._elementDoesNotExistError);\n    // make this work on IE on elements without 'layout'\n    if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))\n      this.element.setStyle({zoom: 1});\n    var options = Object.extend({\n      from: this.element.getOpacity() || 0.0,\n      to:   1.0\n    }, arguments[1] || { });\n    this.start(options);\n  },\n  update: function(position) {\n    this.element.setOpacity(position);\n  }\n});\n\nEffect.Move = Class.create(Effect.Base, {\n  initialize: function(element) {\n    this.element = $(element);\n    if (!this.element) throw(Effect._elementDoesNotExistError);\n    var options = Object.extend({\n      x:    0,\n      y:    0,\n      mode: 'relative'\n    }, arguments[1] || { });\n    this.start(options);\n  },\n  setup: function() {\n    this.element.makePositioned();\n    this.originalLeft = parseFloat(this.element.getStyle('left') || '0');\n    this.originalTop  = parseFloat(this.element.getStyle('top')  || '0');\n    if (this.options.mode == 'absolute') {\n      this.options.x = this.options.x - this.originalLeft;\n      this.options.y = this.options.y - this.originalTop;\n    }\n  },\n  update: function(position) {\n    this.element.setStyle({\n      left: (this.options.x  * position + this.originalLeft).round() + 'px',\n      top:  (this.options.y  * position + this.originalTop).round()  + 'px'\n    });\n  }\n});\n\n// for backwards compatibility\nEffect.MoveBy = function(element, toTop, toLeft) {\n  return new Effect.Move(element,\n    Object.extend({ x: toLeft, y: toTop }, arguments[3] || { }));\n};\n\nEffect.Scale = Class.create(Effect.Base, {\n  initialize: function(element, percent) {\n    this.element = $(element);\n    if (!this.element) throw(Effect._elementDoesNotExistError);\n    var options = Object.extend({\n      scaleX: true,\n      scaleY: true,\n      scaleContent: true,\n      scaleFromCenter: false,\n      scaleMode: 'box',        // 'box' or 'contents' or { } with provided values\n      scaleFrom: 100.0,\n      scaleTo:   percent\n    }, arguments[2] || { });\n    this.start(options);\n  },\n  setup: function() {\n    this.restoreAfterFinish = this.options.restoreAfterFinish || false;\n    this.elementPositioning = this.element.getStyle('position');\n\n    this.originalStyle = { };\n    ['top','left','width','height','fontSize'].each( function(k) {\n      this.originalStyle[k] = this.element.style[k];\n    }.bind(this));\n\n    this.originalTop  = this.element.offsetTop;\n    this.originalLeft = this.element.offsetLeft;\n\n    var fontSize = this.element.getStyle('font-size') || '100%';\n    ['em','px','%','pt'].each( function(fontSizeType) {\n      if (fontSize.indexOf(fontSizeType)>0) {\n        this.fontSize     = parseFloat(fontSize);\n        this.fontSizeType = fontSizeType;\n      }\n    }.bind(this));\n\n    this.factor = (this.options.scaleTo - this.options.scaleFrom)/100;\n\n    this.dims = null;\n    if (this.options.scaleMode=='box')\n      this.dims = [this.element.offsetHeight, this.element.offsetWidth];\n    if (/^content/.test(this.options.scaleMode))\n      this.dims = [this.element.scrollHeight, this.element.scrollWidth];\n    if (!this.dims)\n      this.dims = [this.options.scaleMode.originalHeight,\n                   this.options.scaleMode.originalWidth];\n  },\n  update: function(position) {\n    var currentScale = (this.options.scaleFrom/100.0) + (this.factor * position);\n    if (this.options.scaleContent && this.fontSize)\n      this.element.setStyle({fontSize: this.fontSize * currentScale + this.fontSizeType });\n    this.setDimensions(this.dims[0] * currentScale, this.dims[1] * currentScale);\n  },\n  finish: function(position) {\n    if (this.restoreAfterFinish) this.element.setStyle(this.originalStyle);\n  },\n  setDimensions: function(height, width) {\n    var d = { };\n    if (this.options.scaleX) d.width = width.round() + 'px';\n    if (this.options.scaleY) d.height = height.round() + 'px';\n    if (this.options.scaleFromCenter) {\n      var topd  = (height - this.dims[0])/2;\n      var leftd = (width  - this.dims[1])/2;\n      if (this.elementPositioning == 'absolute') {\n        if (this.options.scaleY) d.top = this.originalTop-topd + 'px';\n        if (this.options.scaleX) d.left = this.originalLeft-leftd + 'px';\n      } else {\n        if (this.options.scaleY) d.top = -topd + 'px';\n        if (this.options.scaleX) d.left = -leftd + 'px';\n      }\n    }\n    this.element.setStyle(d);\n  }\n});\n\nEffect.Highlight = Class.create(Effect.Base, {\n  initialize: function(element) {\n    this.element = $(element);\n    if (!this.element) throw(Effect._elementDoesNotExistError);\n    var options = Object.extend({ startcolor: '#ffff99' }, arguments[1] || { });\n    this.start(options);\n  },\n  setup: function() {\n    // Prevent executing on elements not in the layout flow\n    if (this.element.getStyle('display')=='none') { this.cancel(); return; }\n    // Disable background image during the effect\n    this.oldStyle = { };\n    if (!this.options.keepBackgroundImage) {\n      this.oldStyle.backgroundImage = this.element.getStyle('background-image');\n      this.element.setStyle({backgroundImage: 'none'});\n    }\n    if (!this.options.endcolor)\n      this.options.endcolor = this.element.getStyle('background-color').parseColor('#ffffff');\n    if (!this.options.restorecolor)\n      this.options.restorecolor = this.element.getStyle('background-color');\n    // init color calculations\n    this._base  = $R(0,2).map(function(i){ return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16) }.bind(this));\n    this._delta = $R(0,2).map(function(i){ return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i] }.bind(this));\n  },\n  update: function(position) {\n    this.element.setStyle({backgroundColor: $R(0,2).inject('#',function(m,v,i){\n      return m+((this._base[i]+(this._delta[i]*position)).round().toColorPart()); }.bind(this)) });\n  },\n  finish: function() {\n    this.element.setStyle(Object.extend(this.oldStyle, {\n      backgroundColor: this.options.restorecolor\n    }));\n  }\n});\n\nEffect.ScrollTo = function(element) {\n  var options = arguments[1] || { },\n  scrollOffsets = document.viewport.getScrollOffsets(),\n  elementOffsets = $(element).cumulativeOffset();\n\n  if (options.offset) elementOffsets[1] += options.offset;\n\n  return new Effect.Tween(null,\n    scrollOffsets.top,\n    elementOffsets[1],\n    options,\n    function(p){ scrollTo(scrollOffsets.left, p.round()); }\n  );\n};\n\n/* ------------- combination effects ------------- */\n\nEffect.Fade = function(element) {\n  element = $(element);\n  var oldOpacity = element.getInlineOpacity();\n  var options = Object.extend({\n    from: element.getOpacity() || 1.0,\n    to:   0.0,\n    afterFinishInternal: function(effect) {\n      if (effect.options.to!=0) return;\n      effect.element.hide().setStyle({opacity: oldOpacity});\n    }\n  }, arguments[1] || { });\n  return new Effect.Opacity(element,options);\n};\n\nEffect.Appear = function(element) {\n  element = $(element);\n  var options = Object.extend({\n  from: (element.getStyle('display') == 'none' ? 0.0 : element.getOpacity() || 0.0),\n  to:   1.0,\n  // force Safari to render floated elements properly\n  afterFinishInternal: function(effect) {\n    effect.element.forceRerendering();\n  },\n  beforeSetup: function(effect) {\n    effect.element.setOpacity(effect.options.from).show();\n  }}, arguments[1] || { });\n  return new Effect.Opacity(element,options);\n};\n\nEffect.Puff = function(element) {\n  element = $(element);\n  var oldStyle = {\n    opacity: element.getInlineOpacity(),\n    position: element.getStyle('position'),\n    top:  element.style.top,\n    left: element.style.left,\n    width: element.style.width,\n    height: element.style.height\n  };\n  return new Effect.Parallel(\n   [ new Effect.Scale(element, 200,\n      { sync: true, scaleFromCenter: true, scaleContent: true, restoreAfterFinish: true }),\n     new Effect.Opacity(element, { sync: true, to: 0.0 } ) ],\n     Object.extend({ duration: 1.0,\n      beforeSetupInternal: function(effect) {\n        Position.absolutize(effect.effects[0].element);\n      },\n      afterFinishInternal: function(effect) {\n         effect.effects[0].element.hide().setStyle(oldStyle); }\n     }, arguments[1] || { })\n   );\n};\n\nEffect.BlindUp = function(element) {\n  element = $(element);\n  element.makeClipping();\n  return new Effect.Scale(element, 0,\n    Object.extend({ scaleContent: false,\n      scaleX: false,\n      restoreAfterFinish: true,\n      afterFinishInternal: function(effect) {\n        effect.element.hide().undoClipping();\n      }\n    }, arguments[1] || { })\n  );\n};\n\nEffect.BlindDown = function(element) {\n  element = $(element);\n  var elementDimensions = element.getDimensions();\n  return new Effect.Scale(element, 100, Object.extend({\n    scaleContent: false,\n    scaleX: false,\n    scaleFrom: 0,\n    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},\n    restoreAfterFinish: true,\n    afterSetup: function(effect) {\n      effect.element.makeClipping().setStyle({height: '0px'}).show();\n    },\n    afterFinishInternal: function(effect) {\n      effect.element.undoClipping();\n    }\n  }, arguments[1] || { }));\n};\n\nEffect.SwitchOff = function(element) {\n  element = $(element);\n  var oldOpacity = element.getInlineOpacity();\n  return new Effect.Appear(element, Object.extend({\n    duration: 0.4,\n    from: 0,\n    transition: Effect.Transitions.flicker,\n    afterFinishInternal: function(effect) {\n      new Effect.Scale(effect.element, 1, {\n        duration: 0.3, scaleFromCenter: true,\n        scaleX: false, scaleContent: false, restoreAfterFinish: true,\n        beforeSetup: function(effect) {\n          effect.element.makePositioned().makeClipping();\n        },\n        afterFinishInternal: function(effect) {\n          effect.element.hide().undoClipping().undoPositioned().setStyle({opacity: oldOpacity});\n        }\n      });\n    }\n  }, arguments[1] || { }));\n};\n\nEffect.DropOut = function(element) {\n  element = $(element);\n  var oldStyle = {\n    top: element.getStyle('top'),\n    left: element.getStyle('left'),\n    opacity: element.getInlineOpacity() };\n  return new Effect.Parallel(\n    [ new Effect.Move(element, {x: 0, y: 100, sync: true }),\n      new Effect.Opacity(element, { sync: true, to: 0.0 }) ],\n    Object.extend(\n      { duration: 0.5,\n        beforeSetup: function(effect) {\n          effect.effects[0].element.makePositioned();\n        },\n        afterFinishInternal: function(effect) {\n          effect.effects[0].element.hide().undoPositioned().setStyle(oldStyle);\n        }\n      }, arguments[1] || { }));\n};\n\nEffect.Shake = function(element) {\n  element = $(element);\n  var options = Object.extend({\n    distance: 20,\n    duration: 0.5\n  }, arguments[1] || {});\n  var distance = parseFloat(options.distance);\n  var split = parseFloat(options.duration) / 10.0;\n  var oldStyle = {\n    top: element.getStyle('top'),\n    left: element.getStyle('left') };\n    return new Effect.Move(element,\n      { x:  distance, y: 0, duration: split, afterFinishInternal: function(effect) {\n    new Effect.Move(effect.element,\n      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {\n    new Effect.Move(effect.element,\n      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {\n    new Effect.Move(effect.element,\n      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {\n    new Effect.Move(effect.element,\n      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: function(effect) {\n    new Effect.Move(effect.element,\n      { x: -distance, y: 0, duration: split, afterFinishInternal: function(effect) {\n        effect.element.undoPositioned().setStyle(oldStyle);\n  }}); }}); }}); }}); }}); }});\n};\n\nEffect.SlideDown = function(element) {\n  element = $(element).cleanWhitespace();\n  // SlideDown need to have the content of the element wrapped in a container element with fixed height!\n  var oldInnerBottom = element.down().getStyle('bottom');\n  var elementDimensions = element.getDimensions();\n  return new Effect.Scale(element, 100, Object.extend({\n    scaleContent: false,\n    scaleX: false,\n    scaleFrom: window.opera ? 0 : 1,\n    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},\n    restoreAfterFinish: true,\n    afterSetup: function(effect) {\n      effect.element.makePositioned();\n      effect.element.down().makePositioned();\n      if (window.opera) effect.element.setStyle({top: ''});\n      effect.element.makeClipping().setStyle({height: '0px'}).show();\n    },\n    afterUpdateInternal: function(effect) {\n      effect.element.down().setStyle({bottom:\n        (effect.dims[0] - effect.element.clientHeight) + 'px' });\n    },\n    afterFinishInternal: function(effect) {\n      effect.element.undoClipping().undoPositioned();\n      effect.element.down().undoPositioned().setStyle({bottom: oldInnerBottom}); }\n    }, arguments[1] || { })\n  );\n};\n\nEffect.SlideUp = function(element) {\n  element = $(element).cleanWhitespace();\n  var oldInnerBottom = element.down().getStyle('bottom');\n  var elementDimensions = element.getDimensions();\n  return new Effect.Scale(element, window.opera ? 0 : 1,\n   Object.extend({ scaleContent: false,\n    scaleX: false,\n    scaleMode: 'box',\n    scaleFrom: 100,\n    scaleMode: {originalHeight: elementDimensions.height, originalWidth: elementDimensions.width},\n    restoreAfterFinish: true,\n    afterSetup: function(effect) {\n      effect.element.makePositioned();\n      effect.element.down().makePositioned();\n      if (window.opera) effect.element.setStyle({top: ''});\n      effect.element.makeClipping().show();\n    },\n    afterUpdateInternal: function(effect) {\n      effect.element.down().setStyle({bottom:\n        (effect.dims[0] - effect.element.clientHeight) + 'px' });\n    },\n    afterFinishInternal: function(effect) {\n      effect.element.hide().undoClipping().undoPositioned();\n      effect.element.down().undoPositioned().setStyle({bottom: oldInnerBottom});\n    }\n   }, arguments[1] || { })\n  );\n};\n\n// Bug in opera makes the TD containing this element expand for a instance after finish\nEffect.Squish = function(element) {\n  return new Effect.Scale(element, window.opera ? 1 : 0, {\n    restoreAfterFinish: true,\n    beforeSetup: function(effect) {\n      effect.element.makeClipping();\n    },\n    afterFinishInternal: function(effect) {\n      effect.element.hide().undoClipping();\n    }\n  });\n};\n\nEffect.Grow = function(element) {\n  element = $(element);\n  var options = Object.extend({\n    direction: 'center',\n    moveTransition: Effect.Transitions.sinoidal,\n    scaleTransition: Effect.Transitions.sinoidal,\n    opacityTransition: Effect.Transitions.full\n  }, arguments[1] || { });\n  var oldStyle = {\n    top: element.style.top,\n    left: element.style.left,\n    height: element.style.height,\n    width: element.style.width,\n    opacity: element.getInlineOpacity() };\n\n  var dims = element.getDimensions();\n  var initialMoveX, initialMoveY;\n  var moveX, moveY;\n\n  switch (options.direction) {\n    case 'top-left':\n      initialMoveX = initialMoveY = moveX = moveY = 0;\n      break;\n    case 'top-right':\n      initialMoveX = dims.width;\n      initialMoveY = moveY = 0;\n      moveX = -dims.width;\n      break;\n    case 'bottom-left':\n      initialMoveX = moveX = 0;\n      initialMoveY = dims.height;\n      moveY = -dims.height;\n      break;\n    case 'bottom-right':\n      initialMoveX = dims.width;\n      initialMoveY = dims.height;\n      moveX = -dims.width;\n      moveY = -dims.height;\n      break;\n    case 'center':\n      initialMoveX = dims.width / 2;\n      initialMoveY = dims.height / 2;\n      moveX = -dims.width / 2;\n      moveY = -dims.height / 2;\n      break;\n  }\n\n  return new Effect.Move(element, {\n    x: initialMoveX,\n    y: initialMoveY,\n    duration: 0.01,\n    beforeSetup: function(effect) {\n      effect.element.hide().makeClipping().makePositioned();\n    },\n    afterFinishInternal: function(effect) {\n      new Effect.Parallel(\n        [ new Effect.Opacity(effect.element, { sync: true, to: 1.0, from: 0.0, transition: options.opacityTransition }),\n          new Effect.Move(effect.element, { x: moveX, y: moveY, sync: true, transition: options.moveTransition }),\n          new Effect.Scale(effect.element, 100, {\n            scaleMode: { originalHeight: dims.height, originalWidth: dims.width },\n            sync: true, scaleFrom: window.opera ? 1 : 0, transition: options.scaleTransition, restoreAfterFinish: true})\n        ], Object.extend({\n             beforeSetup: function(effect) {\n               effect.effects[0].element.setStyle({height: '0px'}).show();\n             },\n             afterFinishInternal: function(effect) {\n               effect.effects[0].element.undoClipping().undoPositioned().setStyle(oldStyle);\n             }\n           }, options)\n      );\n    }\n  });\n};\n\nEffect.Shrink = function(element) {\n  element = $(element);\n  var options = Object.extend({\n    direction: 'center',\n    moveTransition: Effect.Transitions.sinoidal,\n    scaleTransition: Effect.Transitions.sinoidal,\n    opacityTransition: Effect.Transitions.none\n  }, arguments[1] || { });\n  var oldStyle = {\n    top: element.style.top,\n    left: element.style.left,\n    height: element.style.height,\n    width: element.style.width,\n    opacity: element.getInlineOpacity() };\n\n  var dims = element.getDimensions();\n  var moveX, moveY;\n\n  switch (options.direction) {\n    case 'top-left':\n      moveX = moveY = 0;\n      break;\n    case 'top-right':\n      moveX = dims.width;\n      moveY = 0;\n      break;\n    case 'bottom-left':\n      moveX = 0;\n      moveY = dims.height;\n      break;\n    case 'bottom-right':\n      moveX = dims.width;\n      moveY = dims.height;\n      break;\n    case 'center':\n      moveX = dims.width / 2;\n      moveY = dims.height / 2;\n      break;\n  }\n\n  return new Effect.Parallel(\n    [ new Effect.Opacity(element, { sync: true, to: 0.0, from: 1.0, transition: options.opacityTransition }),\n      new Effect.Scale(element, window.opera ? 1 : 0, { sync: true, transition: options.scaleTransition, restoreAfterFinish: true}),\n      new Effect.Move(element, { x: moveX, y: moveY, sync: true, transition: options.moveTransition })\n    ], Object.extend({\n         beforeStartInternal: function(effect) {\n           effect.effects[0].element.makePositioned().makeClipping();\n         },\n         afterFinishInternal: function(effect) {\n           effect.effects[0].element.hide().undoClipping().undoPositioned().setStyle(oldStyle); }\n       }, options)\n  );\n};\n\nEffect.Pulsate = function(element) {\n  element = $(element);\n  var options    = arguments[1] || { },\n    oldOpacity = element.getInlineOpacity(),\n    transition = options.transition || Effect.Transitions.linear,\n    reverser   = function(pos){\n      return 1 - transition((-Math.cos((pos*(options.pulses||5)*2)*Math.PI)/2) + .5);\n    };\n\n  return new Effect.Opacity(element,\n    Object.extend(Object.extend({  duration: 2.0, from: 0,\n      afterFinishInternal: function(effect) { effect.element.setStyle({opacity: oldOpacity}); }\n    }, options), {transition: reverser}));\n};\n\nEffect.Fold = function(element) {\n  element = $(element);\n  var oldStyle = {\n    top: element.style.top,\n    left: element.style.left,\n    width: element.style.width,\n    height: element.style.height };\n  element.makeClipping();\n  return new Effect.Scale(element, 5, Object.extend({\n    scaleContent: false,\n    scaleX: false,\n    afterFinishInternal: function(effect) {\n    new Effect.Scale(element, 1, {\n      scaleContent: false,\n      scaleY: false,\n      afterFinishInternal: function(effect) {\n        effect.element.hide().undoClipping().setStyle(oldStyle);\n      } });\n  }}, arguments[1] || { }));\n};\n\nEffect.Morph = Class.create(Effect.Base, {\n  initialize: function(element) {\n    this.element = $(element);\n    if (!this.element) throw(Effect._elementDoesNotExistError);\n    var options = Object.extend({\n      style: { }\n    }, arguments[1] || { });\n\n    if (!Object.isString(options.style)) this.style = $H(options.style);\n    else {\n      if (options.style.include(':'))\n        this.style = options.style.parseStyle();\n      else {\n        this.element.addClassName(options.style);\n        this.style = $H(this.element.getStyles());\n        this.element.removeClassName(options.style);\n        var css = this.element.getStyles();\n        this.style = this.style.reject(function(style) {\n          return style.value == css[style.key];\n        });\n        options.afterFinishInternal = function(effect) {\n          effect.element.addClassName(effect.options.style);\n          effect.transforms.each(function(transform) {\n            effect.element.style[transform.style] = '';\n          });\n        };\n      }\n    }\n    this.start(options);\n  },\n\n  setup: function(){\n    function parseColor(color){\n      if (!color || ['rgba(0, 0, 0, 0)','transparent'].include(color)) color = '#ffffff';\n      color = color.parseColor();\n      return $R(0,2).map(function(i){\n        return parseInt( color.slice(i*2+1,i*2+3), 16 );\n      });\n    }\n    this.transforms = this.style.map(function(pair){\n      var property = pair[0], value = pair[1], unit = null;\n\n      if (value.parseColor('#zzzzzz') != '#zzzzzz') {\n        value = value.parseColor();\n        unit  = 'color';\n      } else if (property == 'opacity') {\n        value = parseFloat(value);\n        if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))\n          this.element.setStyle({zoom: 1});\n      } else if (Element.CSS_LENGTH.test(value)) {\n          var components = value.match(/^([\\+\\-]?[0-9\\.]+)(.*)$/);\n          value = parseFloat(components[1]);\n          unit = (components.length == 3) ? components[2] : null;\n      }\n\n      var originalValue = this.element.getStyle(property);\n      return {\n        style: property.camelize(),\n        originalValue: unit=='color' ? parseColor(originalValue) : parseFloat(originalValue || 0),\n        targetValue: unit=='color' ? parseColor(value) : value,\n        unit: unit\n      };\n    }.bind(this)).reject(function(transform){\n      return (\n        (transform.originalValue == transform.targetValue) ||\n        (\n          transform.unit != 'color' &&\n          (isNaN(transform.originalValue) || isNaN(transform.targetValue))\n        )\n      );\n    });\n  },\n  update: function(position) {\n    var style = { }, transform, i = this.transforms.length;\n    while(i--)\n      style[(transform = this.transforms[i]).style] =\n        transform.unit=='color' ? '#'+\n          (Math.round(transform.originalValue[0]+\n            (transform.targetValue[0]-transform.originalValue[0])*position)).toColorPart() +\n          (Math.round(transform.originalValue[1]+\n            (transform.targetValue[1]-transform.originalValue[1])*position)).toColorPart() +\n          (Math.round(transform.originalValue[2]+\n            (transform.targetValue[2]-transform.originalValue[2])*position)).toColorPart() :\n        (transform.originalValue +\n          (transform.targetValue - transform.originalValue) * position).toFixed(3) +\n            (transform.unit === null ? '' : transform.unit);\n    this.element.setStyle(style, true);\n  }\n});\n\nEffect.Transform = Class.create({\n  initialize: function(tracks){\n    this.tracks  = [];\n    this.options = arguments[1] || { };\n    this.addTracks(tracks);\n  },\n  addTracks: function(tracks){\n    tracks.each(function(track){\n      track = $H(track);\n      var data = track.values().first();\n      this.tracks.push($H({\n        ids:     track.keys().first(),\n        effect:  Effect.Morph,\n        options: { style: data }\n      }));\n    }.bind(this));\n    return this;\n  },\n  play: function(){\n    return new Effect.Parallel(\n      this.tracks.map(function(track){\n        var ids = track.get('ids'), effect = track.get('effect'), options = track.get('options');\n        var elements = [$(ids) || $$(ids)].flatten();\n        return elements.map(function(e){ return new effect(e, Object.extend({ sync:true }, options)) });\n      }).flatten(),\n      this.options\n    );\n  }\n});\n\nElement.CSS_PROPERTIES = $w(\n  'backgroundColor backgroundPosition borderBottomColor borderBottomStyle ' +\n  'borderBottomWidth borderLeftColor borderLeftStyle borderLeftWidth ' +\n  'borderRightColor borderRightStyle borderRightWidth borderSpacing ' +\n  'borderTopColor borderTopStyle borderTopWidth bottom clip color ' +\n  'fontSize fontWeight height left letterSpacing lineHeight ' +\n  'marginBottom marginLeft marginRight marginTop markerOffset maxHeight '+\n  'maxWidth minHeight minWidth opacity outlineColor outlineOffset ' +\n  'outlineWidth paddingBottom paddingLeft paddingRight paddingTop ' +\n  'right textIndent top width wordSpacing zIndex');\n\nElement.CSS_LENGTH = /^(([\\+\\-]?[0-9\\.]+)(em|ex|px|in|cm|mm|pt|pc|\\%))|0$/;\n\nString.__parseStyleElement = document.createElement('div');\nString.prototype.parseStyle = function(){\n  var style, styleRules = $H();\n  if (Prototype.Browser.WebKit)\n    style = new Element('div',{style:this}).style;\n  else {\n    String.__parseStyleElement.innerHTML = '<div style=\"' + this + '\"></div>';\n    style = String.__parseStyleElement.childNodes[0].style;\n  }\n\n  Element.CSS_PROPERTIES.each(function(property){\n    if (style[property]) styleRules.set(property, style[property]);\n  });\n\n  if (Prototype.Browser.IE && this.include('opacity'))\n    styleRules.set('opacity', this.match(/opacity:\\s*((?:0|1)?(?:\\.\\d*)?)/)[1]);\n\n  return styleRules;\n};\n\nif (document.defaultView && document.defaultView.getComputedStyle) {\n  Element.getStyles = function(element) {\n    var css = document.defaultView.getComputedStyle($(element), null);\n    return Element.CSS_PROPERTIES.inject({ }, function(styles, property) {\n      styles[property] = css[property];\n      return styles;\n    });\n  };\n} else {\n  Element.getStyles = function(element) {\n    element = $(element);\n    var css = element.currentStyle, styles;\n    styles = Element.CSS_PROPERTIES.inject({ }, function(results, property) {\n      results[property] = css[property];\n      return results;\n    });\n    if (!styles.opacity) styles.opacity = element.getOpacity();\n    return styles;\n  };\n}\n\nEffect.Methods = {\n  morph: function(element, style) {\n    element = $(element);\n    new Effect.Morph(element, Object.extend({ style: style }, arguments[2] || { }));\n    return element;\n  },\n  visualEffect: function(element, effect, options) {\n    element = $(element);\n    var s = effect.dasherize().camelize(), klass = s.charAt(0).toUpperCase() + s.substring(1);\n    new Effect[klass](element, options);\n    return element;\n  },\n  highlight: function(element, options) {\n    element = $(element);\n    new Effect.Highlight(element, options);\n    return element;\n  }\n};\n\n$w('fade appear grow shrink fold blindUp blindDown slideUp slideDown '+\n  'pulsate shake puff squish switchOff dropOut').each(\n  function(effect) {\n    Effect.Methods[effect] = function(element, options){\n      element = $(element);\n      Effect[effect.charAt(0).toUpperCase() + effect.substring(1)](element, options);\n      return element;\n    };\n  }\n);\n\n$w('getInlineOpacity forceRerendering setContentZoom collectTextNodes collectTextNodesIgnoreClass getStyles').each(\n  function(f) { Effect.Methods[f] = Element[f]; }\n);\n\nElement.addMethods(Effect.Methods);",
      "jb_params" : "// Backwards compatibility with prototype versions before 1.6.\nif (!Hash.prototype.get)\n{\n    Hash.prototype.get = function(key) { return this[key]; }\n}\n\n// Define a namespace for the functions manipulating JB search params.\n// This works in conjunction with code that is loaded or evaluated\n// separately and dynamically generated by tt/spiders/params/js.tt,\n// which initialises the undefined attributes in the object below.\nvar jb_params =\n{\n    // The jobboard codes.\n    jb_codes: undefined,\n\n    // The generic parameter names.\n    generic_names: undefined,\n\n    // The type of JB UI controls.\n    control_types: undefined,\n\n    // The type of generic UI controls.\n    generic_types: undefined,\n\n    // The separators of all UI controls that have them.\n    separators: undefined,\n\n    // The parents of generic combo controls.\n    generic_combos: undefined,\n\n    // The layout style (defaulted).\n    style: 'grid',\n\n    // The locale (defaulted).\n    locale: 'en',\n\n    // The default ajax endpoint for updates.\n    ajax_updater: '/rtb/spider_params_ajax.pl',\n\n    // Default additional fixed ajax endpoint parameters (none).\n    ajax_params: $H(),\n\n    // The default ajax endpoint for autocompletions.\n    ajax_auto_completer: '/rtb/spider_params_completer.pl',\n\n    // Whether, by default, to use JSONP.\n    jsonp: false,\n\n    // Make guesses for all generic controls.\n    init: function()\n    {\n        // Call onchange with no arguments.\n        jb_params.onchange();\n    },\n\n    // Clients which include this script (whether or not new-style JB searching is\n    // configured) can use this method as a way to find out if new-style is active.\n    active: function()\n    {\n        return typeof this.jb_codes != 'undefined';\n    },\n\n    // Select or deselect a jobboard.\n    toggle: function(code, event, check_master)\n    {\n        // By default, we do check the master selector.\n        if (check_master == undefined) check_master = true;\n\n        // Find the checkbox controlling this JB's selection.\n        var select = $(code + '_select');\n\n        // Find the element containing the JB controls.\n        var elem_id;\n        switch(this.style)\n        {\n            case 'tabs':\n            case 'tab2':\n                elem_id = 'jb_' + code + '_tab';\n                break;\n            case 'divs':\n                elem_id = 'jb_' + code + '_div';\n                break;\n            default:\n                elem_id = code + '_row';\n        }\n        var elem = $(elem_id);\n\n        // Alter the class of the element to reflect the current JB's selection state.\n        if (select.checked)\n        {\n            // Turn on.\n            elem.removeClassName('unselected');\n            elem.addClassName('selected');\n\n            // When not using the master switch.\n            if (check_master)\n            {\n                // In any tab style show the controls when we select them.\n                if (this.style.indexOf('tab') == 0) this.toggle_tab(code);\n\n                // In any div style show the controls when we select them.\n                if (this.style.indexOf('div') == 0) this.toggle_div(code);\n            }\n        }\n        else\n        {\n            // Turn off.\n            elem.removeClassName('selected');\n            elem.addClassName('unselected');\n        }\n\n        // Don't let the click event bubble to the parent cell.\n        if (event.stopPropagation) event.stopPropagation();\n        else event.cancelBubble = true;\n\n        // Reset the state of the master select if appropriate.\n        if (check_master) this.reset_master();\n    },\n\n    // Show one tab and hide the others (tabs style only).\n    toggle_tab: function(code)\n    {\n        $$('div#jb_params td.tab_control').each(function(td) {\n            if (td.id == 'jb_tab_control_' + code) {\n                td.addClassName('selected');\n            } else {\n                td.removeClassName('selected');\n            }\n        });\n        $$('div#jb_params table.showable').each(function(table) {\n            if (table.id == 'jb_' + code + '_tab') {\n                table.show();\n            } else {\n                table.hide();\n            }\n        });\n    },\n\n    // Show one JB div and hide the others (divs style only).\n    toggle_div: function(code)\n    {\n        $$('div#jb_params div.div_control').each(function(div) {\n            if (div.id == 'jb_div_control_' + code) {\n                div.addClassName('selected');\n            } else {\n                div.removeClassName('selected');\n            }\n        });\n        $$('div#jb_params div.showable').each(function(div) {\n            if (div.id == 'jb_' + code + '_div') {\n                div.show();\n            } else {\n                div.hide();\n            }\n        });\n    },\n\n    // Toggle the JBs all on or all off.\n    master_toggle: function(event)\n    {\n        // Find the master checkbox.\n        var master = $('master_jb_select');\n\n        // Loop over all JBs.\n        this.jb_codes.each(function(code)\n        {\n            // Find the selector for this JB.\n            code = code.toLowerCase();\n            var select = $(code + '_select');\n\n            // Toggle if it's state is different to the master's state.\n            if (master.checked != select.checked)\n            {\n                select.checked = master.checked;\n                jb_params.toggle(code, event, false);\n            }\n        });\n    },\n\n    // If any JB selects are off, the master should also be off.\n    // The master is only on when all JB's are on.\n    reset_master: function()\n    {\n        // How many JB selects are on or off.\n        var select_on = 0;\n        var select_off = 0;\n\n        // Loop over all JBs.\n        this.jb_codes.each(function(code)\n        {\n            // Find the selector for this JB.\n            code = code.toLowerCase();\n            var select = $(code + '_select');\n\n            // On or off?\n            if (select.checked) select_on += 1;\n            else select_off += 1;\n        });\n\n        // Set the master appropriately.\n        var master = $('master_jb_select');\n        if (master) master.checked = select_off == 0 && select_on > 0 ? true : false;\n    },\n\n    // When a generic control changes, get new JB-specific parameter guesses.\n    // Can also be used to re-initialise all JB-specific controls from the\n    // current generic values by being called with no parameters.\n    onchange: function(ui_name, changed, special)\n    {\n        // Initialise.\n        var parameters = {};\n\n        // Any explicit special cases get echoed to the server.\n        if (typeof special != 'undefined') parameters['special'] = special;\n\n        // There are three cases.\n        if (special == 'jb_specific')\n        {\n            // A special case where we're rebuilding the slave(s)\n            // of a JB-specific master control that has changed.\n            this.add_specific_master(parameters, changed);\n\n            // Set the one parameter name (this will belong to the master's parent combo).\n            parameters['ui_name'] = ui_name;\n\n            // This time we only send one jobboard (instead of all of them).\n            var m = changed.match(/^jb_([a-z]{3})_/);\n            if (m) parameters['jb_codes'] = m[1].toUpperCase();\n\n            // Add the name of the parameter that changed.\n            parameters['changed'] = changed;\n        }\n        else if (ui_name == undefined)\n        {\n            // A special case where we're going to initialise multiple parameters.\n            // Could be used to initiliase at the start but currently server code does that.\n            parameters['ui_name'] = this.generic_names.join(',');\n\n            // All JBs are affected.\n            parameters['jb_codes'] = this.jb_codes.join(',');\n\n            // Loop over each generic control adding it's parameters.\n            this.generic_names.each(function(name) { jb_params.add_parameters(parameters, name) });\n        }\n        else\n        {\n            // The normal case where we're guessing values for one control. Set the one parameter name.\n            parameters['ui_name'] = ui_name;\n\n            // All JBs are affected.\n            parameters['jb_codes'] = this.jb_codes.join(',');\n\n            // Add parameters relevant to the UI control for this parameter.\n            this.add_parameters(parameters, ui_name);\n\n            // Add the name of the parameter that changed.\n            parameters['changed'] = changed;\n        }\n\n        // Add optional fixed parameters.\n        this.ajax_params.each(function(pair) { parameters[pair.key] = pair.value } );\n\n        // Add locale as an extra parameter.\n        parameters['locale'] = this.locale;\n\n        // Get something we'll need if we're doing JSONP.\n        var head;\n        if (this.jsonp) head = $$('head').first();\n\n        // Query the server to get a JSON object representing the new values.\n        if (head && Hash.prototype.toQueryString)\n        {\n            // Use JSONP (which is NOT subject to cross-origin sharing policy).\n            // First, prepare some extra parameters.\n            parameters['rand'] = Math.floor(Math.random() * 1000001); // avoid browser caching\n            parameters['callback'] = 'jb_params.process_json';        // request JSONP by sending name of callback\n\n            // Next, prepare to use the toQueryString method of the Hash class.\n            var hash = new Hash(parameters);\n\n            // Finally, perform the JSONP trick by injecting a script element.\n            head.insert({\n                bottom: new Element('script', {\n                    type: 'text/javascript',\n                    src:  this.ajax_updater + '?' + hash.toQueryString()\n                })\n            });\n        }\n        else\n        {\n            // Use Ajax (which IS subject to cross-origin sharing policy).\n            new Ajax.Request(this.ajax_updater,\n            {\n                method: 'get',\n                parameters: parameters,\n                onSuccess: function(req)\n                {\n                    // Get the JSON object from the body.\n                    var json = eval('(' + req.responseText + ')');\n\n                    // Process the JSON.\n                    jb_params.process_json(json);\n                }\n            });\n        }\n    },\n\n    // Process the JSON returned by Ajax (this is also the JSONP callback).\n    process_json: function(json)\n    {\n        // Sanity check first.\n        if (json.status == 'success')\n        {\n            // Process the slave controls.\n            var slaves = $H(json.slaves);\n            slaves.keys().each(function(attr) { jb_params.rebuild_jb_control(attr, slaves.get(attr)) } );\n\n            // Process the guesses.\n            var guesses = $H(json.guesses);\n            guesses.keys().each(function(attr) { jb_params.set_jb_control(attr, guesses.get(attr)) } );\n        }\n    },\n\n    // Build the parameters for a call to spider_params_ajax to make a guess at the JB params.\n    add_parameters: function(parameters, ui_name)\n    {\n        // If the control is in a combo, use the parent's name, not the control's.\n        if (this.generic_combos.get(ui_name)) ui_name = this.generic_combos.get(ui_name);\n\n        // Add a key-value pair for the generic control (or each control in a combo).\n        this.generic_types.keys().each(function(name)\n        {\n            // Only consider controls which are relevant (their names start the same way).\n            if (name.indexOf(ui_name) != 0) return;\n\n            // Get the form contol.\n            var control = $(name);\n            if (!control) return;\n\n            // Has this UI control got multiple values?\n            var sep = jb_params.separators.get(name);\n            if (sep)\n            {\n                // Should only apply to menus.\n                if (jb_params.generic_types.get(name) == 'menu')\n                {\n                    var values = [];\n                    $A(control.options).each(function(option)\n                    {\n                        if (option.selected) values.push(option.value);\n                    });\n                    parameters[name] = values.join(sep);\n                }\n            }\n            else\n            {\n                // Add something to the hash for this control.\n                parameters[name] = control.value;\n            }\n        });\n    },\n\n    // Build the parameters for a call to spider_params_ajax to rebuild JB-specific slaves.\n    add_specific_master: function(parameters, ui_name)\n    {\n        // Get the form contol.\n        var control = $(ui_name);\n        if (!control) return;\n\n        // Has this UI control got multiple values?\n        var sep = jb_params.separators.get(ui_name);\n        if (sep)\n        {\n            // Assume it's a menu.\n            var values = [];\n            $A(control.options).each(function(option)\n            {\n                if (option.selected) values.push(option.value);\n            });\n            parameters[ui_name] = values.join(sep);\n        }\n        else\n        {\n            // Add something to the hash for this control.\n            parameters[ui_name] = control.value;\n        }\n    },\n\n    // Given a jb_ui_name and a value, set the corresponding control.\n    set_jb_control: function(jb_ui_name, value)\n    {\n        // First, find the control.\n        var control = $(jb_ui_name);\n        if (!control) return;\n\n        // Second, get the control type.\n        var type = this.control_types.get(jb_ui_name);\n        if (!type) return;\n\n        // Don't do anything with nulls. Null's mean the server mapping has no opinion\n        // on this attribute and we should just leave whatever the user has already set.\n        if (value == undefined) return;\n\n        // Now decide how to set it.\n        if (type == 'check_box')\n        {\n            // Checkboxes.\n            control.checked = value;\n        }\n        else if (type == 'menu' && this.separators.get(jb_ui_name))\n        {\n            // Menu - ensure the value we're dealing with is a string.\n            value = '' + value;\n\n            // Split the value into a hash and loop over options selecting each accordingly.\n            var hash = {};\n            value.split(this.separators.get(jb_ui_name)).each(function(v) { hash['_' + v] = true });\n            $A(control.options).each(function(option)\n            {\n                option.selected = hash['_' + option.value] ? true : false;\n            });\n        }\n        else\n        {\n            // Everything else.\n            control.value = value;\n        }\n    },\n\n    // Rebuild a slave control.\n    rebuild_jb_control: function(jb_ui_name, data)\n    {\n        // Knock off the initial 'slave_' part of the name.\n        jb_ui_name = jb_ui_name.substring(6);\n\n        // Currently only for menus.\n        if (this.control_types.get(jb_ui_name) != 'menu' && this.generic_types.get(jb_ui_name) != 'menu') return;\n\n        // Find the control.\n        var control = $(jb_ui_name);\n        if (!control) return;\n\n        // Delete the old options.\n        control.options.length = 0;\n\n        // Rebuild them.\n        data.each(function(option, i)\n        {\n            var selected = option[2] == 1;\n            control.options[control.options.length] = new Option(option[0], option[1], selected, selected);\n        });\n    }\n};\n",
      "prototype" : "/*  Prototype JavaScript framework, version 1.6.1\n *  (c) 2005-2009 Sam Stephenson\n *\n *  Prototype is freely distributable under the terms of an MIT-style license.\n *  For details, see the Prototype web site: http://www.prototypejs.org/\n *\n *--------------------------------------------------------------------------*/\n\nvar Prototype = {\n  Version: '1.6.1',\n\n  Browser: (function(){\n    var ua = navigator.userAgent;\n    var isOpera = Object.prototype.toString.call(window.opera) == '[object Opera]';\n    return {\n      IE:             !!window.attachEvent && !isOpera,\n      Opera:          isOpera,\n      WebKit:         ua.indexOf('AppleWebKit/') > -1,\n      Gecko:          ua.indexOf('Gecko') > -1 && ua.indexOf('KHTML') === -1,\n      MobileSafari:   /Apple.*Mobile.*Safari/.test(ua)\n    }\n  })(),\n\n  BrowserFeatures: {\n    XPath: !!document.evaluate,\n    SelectorsAPI: !!document.querySelector,\n    ElementExtensions: (function() {\n      var constructor = window.Element || window.HTMLElement;\n      return !!(constructor && constructor.prototype);\n    })(),\n    SpecificElementExtensions: (function() {\n      if (typeof window.HTMLDivElement !== 'undefined')\n        return true;\n\n      var div = document.createElement('div');\n      var form = document.createElement('form');\n      var isSupported = false;\n\n      if (div['__proto__'] && (div['__proto__'] !== form['__proto__'])) {\n        isSupported = true;\n      }\n\n      div = form = null;\n\n      return isSupported;\n    })()\n  },\n\n  ScriptFragment: '<script[^>]*>([\\\\S\\\\s]*?)<\\/script>',\n  JSONFilter: /^\\/\\*-secure-([\\s\\S]*)\\*\\/\\s*$/,\n\n  emptyFunction: function() { },\n  K: function(x) { return x }\n};\n\nif (Prototype.Browser.MobileSafari)\n  Prototype.BrowserFeatures.SpecificElementExtensions = false;\n\n\nvar Abstract = { };\n\n\nvar Try = {\n  these: function() {\n    var returnValue;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      var lambda = arguments[i];\n      try {\n        returnValue = lambda();\n        break;\n      } catch (e) { }\n    }\n\n    return returnValue;\n  }\n};\n\n/* Based on Alex Arnell's inheritance implementation. */\n\nvar Class = (function() {\n  function subclass() {};\n  function create() {\n    var parent = null, properties = $A(arguments);\n    if (Object.isFunction(properties[0]))\n      parent = properties.shift();\n\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    Object.extend(klass, Class.Methods);\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      subclass.prototype = parent.prototype;\n      klass.prototype = new subclass;\n      parent.subclasses.push(klass);\n    }\n\n    for (var i = 0; i < properties.length; i++)\n      klass.addMethods(properties[i]);\n\n    if (!klass.prototype.initialize)\n      klass.prototype.initialize = Prototype.emptyFunction;\n\n    klass.prototype.constructor = klass;\n    return klass;\n  }\n\n  function addMethods(source) {\n    var ancestor   = this.superclass && this.superclass.prototype;\n    var properties = Object.keys(source);\n\n    if (!Object.keys({ toString: true }).length) {\n      if (source.toString != Object.prototype.toString)\n        properties.push(\"toString\");\n      if (source.valueOf != Object.prototype.valueOf)\n        properties.push(\"valueOf\");\n    }\n\n    for (var i = 0, length = properties.length; i < length; i++) {\n      var property = properties[i], value = source[property];\n      if (ancestor && Object.isFunction(value) &&\n          value.argumentNames().first() == \"$super\") {\n        var method = value;\n        value = (function(m) {\n          return function() { return ancestor[m].apply(this, arguments); };\n        })(property).wrap(method);\n\n        value.valueOf = method.valueOf.bind(method);\n        value.toString = method.toString.bind(method);\n      }\n      this.prototype[property] = value;\n    }\n\n    return this;\n  }\n\n  return {\n    create: create,\n    Methods: {\n      addMethods: addMethods\n    }\n  };\n})();\n(function() {\n\n  var _toString = Object.prototype.toString;\n\n  function extend(destination, source) {\n    for (var property in source)\n      destination[property] = source[property];\n    return destination;\n  }\n\n  function inspect(object) {\n    try {\n      if (isUndefined(object)) return 'undefined';\n      if (object === null) return 'null';\n      return object.inspect ? object.inspect() : String(object);\n    } catch (e) {\n      if (e instanceof RangeError) return '...';\n      throw e;\n    }\n  }\n\n  function toJSON(object) {\n    var type = typeof object;\n    switch (type) {\n      case 'undefined':\n      case 'function':\n      case 'unknown': return;\n      case 'boolean': return object.toString();\n    }\n\n    if (object === null) return 'null';\n    if (object.toJSON) return object.toJSON();\n    if (isElement(object)) return;\n\n    var results = [];\n    for (var property in object) {\n      var value = toJSON(object[property]);\n      if (!isUndefined(value))\n        results.push(property.toJSON() + ': ' + value);\n    }\n\n    return '{' + results.join(', ') + '}';\n  }\n\n  function toQueryString(object) {\n    return $H(object).toQueryString();\n  }\n\n  function toHTML(object) {\n    return object && object.toHTML ? object.toHTML() : String.interpret(object);\n  }\n\n  function keys(object) {\n    var results = [];\n    for (var property in object)\n      results.push(property);\n    return results;\n  }\n\n  function values(object) {\n    var results = [];\n    for (var property in object)\n      results.push(object[property]);\n    return results;\n  }\n\n  function clone(object) {\n    return extend({ }, object);\n  }\n\n  function isElement(object) {\n    return !!(object && object.nodeType == 1);\n  }\n\n  function isArray(object) {\n    return _toString.call(object) == \"[object Array]\";\n  }\n\n\n  function isHash(object) {\n    return object instanceof Hash;\n  }\n\n  function isFunction(object) {\n    return typeof object === \"function\";\n  }\n\n  function isString(object) {\n    return _toString.call(object) == \"[object String]\";\n  }\n\n  function isNumber(object) {\n    return _toString.call(object) == \"[object Number]\";\n  }\n\n  function isUndefined(object) {\n    return typeof object === \"undefined\";\n  }\n\n  extend(Object, {\n    extend:        extend,\n    inspect:       inspect,\n    toJSON:        toJSON,\n    toQueryString: toQueryString,\n    toHTML:        toHTML,\n    keys:          keys,\n    values:        values,\n    clone:         clone,\n    isElement:     isElement,\n    isArray:       isArray,\n    isHash:        isHash,\n    isFunction:    isFunction,\n    isString:      isString,\n    isNumber:      isNumber,\n    isUndefined:   isUndefined\n  });\n})();\nObject.extend(Function.prototype, (function() {\n  var slice = Array.prototype.slice;\n\n  function update(array, args) {\n    var arrayLength = array.length, length = args.length;\n    while (length--) array[arrayLength + length] = args[length];\n    return array;\n  }\n\n  function merge(array, args) {\n    array = slice.call(array, 0);\n    return update(array, args);\n  }\n\n  function argumentNames() {\n    var names = this.toString().match(/^[\\s\\(]*function[^(]*\\(([^)]*)\\)/)[1]\n      .replace(/\\/\\/.*?[\\r\\n]|\\/\\*(?:.|[\\r\\n])*?\\*\\//g, '')\n      .replace(/\\s+/g, '').split(',');\n    return names.length == 1 && !names[0] ? [] : names;\n  }\n\n  function bind(context) {\n    if (arguments.length < 2 && Object.isUndefined(arguments[0])) return this;\n    var __method = this, args = slice.call(arguments, 1);\n    return function() {\n      var a = merge(args, arguments);\n      return __method.apply(context, a);\n    }\n  }\n\n  function bindAsEventListener(context) {\n    var __method = this, args = slice.call(arguments, 1);\n    return function(event) {\n      var a = update([event || window.event], args);\n      return __method.apply(context, a);\n    }\n  }\n\n  function curry() {\n    if (!arguments.length) return this;\n    var __method = this, args = slice.call(arguments, 0);\n    return function() {\n      var a = merge(args, arguments);\n      return __method.apply(this, a);\n    }\n  }\n\n  function delay(timeout) {\n    var __method = this, args = slice.call(arguments, 1);\n    timeout = timeout * 1000\n    return window.setTimeout(function() {\n      return __method.apply(__method, args);\n    }, timeout);\n  }\n\n  function defer() {\n    var args = update([0.01], arguments);\n    return this.delay.apply(this, args);\n  }\n\n  function wrap(wrapper) {\n    var __method = this;\n    return function() {\n      var a = update([__method.bind(this)], arguments);\n      return wrapper.apply(this, a);\n    }\n  }\n\n  function methodize() {\n    if (this._methodized) return this._methodized;\n    var __method = this;\n    return this._methodized = function() {\n      var a = update([this], arguments);\n      return __method.apply(null, a);\n    };\n  }\n\n  return {\n    argumentNames:       argumentNames,\n    bind:                bind,\n    bindAsEventListener: bindAsEventListener,\n    curry:               curry,\n    delay:               delay,\n    defer:               defer,\n    wrap:                wrap,\n    methodize:           methodize\n  }\n})());\n\n\nDate.prototype.toJSON = function() {\n  return '\"' + this.getUTCFullYear() + '-' +\n    (this.getUTCMonth() + 1).toPaddedString(2) + '-' +\n    this.getUTCDate().toPaddedString(2) + 'T' +\n    this.getUTCHours().toPaddedString(2) + ':' +\n    this.getUTCMinutes().toPaddedString(2) + ':' +\n    this.getUTCSeconds().toPaddedString(2) + 'Z\"';\n};\n\n\nRegExp.prototype.match = RegExp.prototype.test;\n\nRegExp.escape = function(str) {\n  return String(str).replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n};\nvar PeriodicalExecuter = Class.create({\n  initialize: function(callback, frequency) {\n    this.callback = callback;\n    this.frequency = frequency;\n    this.currentlyExecuting = false;\n\n    this.registerCallback();\n  },\n\n  registerCallback: function() {\n    this.timer = setInterval(this.onTimerEvent.bind(this), this.frequency * 1000);\n  },\n\n  execute: function() {\n    this.callback(this);\n  },\n\n  stop: function() {\n    if (!this.timer) return;\n    clearInterval(this.timer);\n    this.timer = null;\n  },\n\n  onTimerEvent: function() {\n    if (!this.currentlyExecuting) {\n      try {\n        this.currentlyExecuting = true;\n        this.execute();\n        this.currentlyExecuting = false;\n      } catch(e) {\n        this.currentlyExecuting = false;\n        throw e;\n      }\n    }\n  }\n});\nObject.extend(String, {\n  interpret: function(value) {\n    return value == null ? '' : String(value);\n  },\n  specialChar: {\n    '\\b': '\\\\b',\n    '\\t': '\\\\t',\n    '\\n': '\\\\n',\n    '\\f': '\\\\f',\n    '\\r': '\\\\r',\n    '\\\\': '\\\\\\\\'\n  }\n});\n\nObject.extend(String.prototype, (function() {\n\n  function prepareReplacement(replacement) {\n    if (Object.isFunction(replacement)) return replacement;\n    var template = new Template(replacement);\n    return function(match) { return template.evaluate(match) };\n  }\n\n  function gsub(pattern, replacement) {\n    var result = '', source = this, match;\n    replacement = prepareReplacement(replacement);\n\n    if (Object.isString(pattern))\n      pattern = RegExp.escape(pattern);\n\n    if (!(pattern.length || pattern.source)) {\n      replacement = replacement('');\n      return replacement + source.split('').join(replacement) + replacement;\n    }\n\n    while (source.length > 0) {\n      if (match = source.match(pattern)) {\n        result += source.slice(0, match.index);\n        result += String.interpret(replacement(match));\n        source  = source.slice(match.index + match[0].length);\n      } else {\n        result += source, source = '';\n      }\n    }\n    return result;\n  }\n\n  function sub(pattern, replacement, count) {\n    replacement = prepareReplacement(replacement);\n    count = Object.isUndefined(count) ? 1 : count;\n\n    return this.gsub(pattern, function(match) {\n      if (--count < 0) return match[0];\n      return replacement(match);\n    });\n  }\n\n  function scan(pattern, iterator) {\n    this.gsub(pattern, iterator);\n    return String(this);\n  }\n\n  function truncate(length, truncation) {\n    length = length || 30;\n    truncation = Object.isUndefined(truncation) ? '...' : truncation;\n    return this.length > length ?\n      this.slice(0, length - truncation.length) + truncation : String(this);\n  }\n\n  function strip() {\n    return this.replace(/^\\s+/, '').replace(/\\s+$/, '');\n  }\n\n  function stripTags() {\n    return this.replace(/<\\w+(\\s+(\"[^\"]*\"|'[^']*'|[^>])+)?>|<\\/\\w+>/gi, '');\n  }\n\n  function stripScripts() {\n    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');\n  }\n\n  function extractScripts() {\n    var matchAll = new RegExp(Prototype.ScriptFragment, 'img');\n    var matchOne = new RegExp(Prototype.ScriptFragment, 'im');\n    return (this.match(matchAll) || []).map(function(scriptTag) {\n      return (scriptTag.match(matchOne) || ['', ''])[1];\n    });\n  }\n\n  function evalScripts() {\n    return this.extractScripts().map(function(script) { return eval(script) });\n  }\n\n  function escapeHTML() {\n    return this.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');\n  }\n\n  function unescapeHTML() {\n    return this.stripTags().replace(/&lt;/g,'<').replace(/&gt;/g,'>').replace(/&amp;/g,'&');\n  }\n\n\n  function toQueryParams(separator) {\n    var match = this.strip().match(/([^?#]*)(#.*)?$/);\n    if (!match) return { };\n\n    return match[1].split(separator || '&').inject({ }, function(hash, pair) {\n      if ((pair = pair.split('='))[0]) {\n        var key = decodeURIComponent(pair.shift());\n        var value = pair.length > 1 ? pair.join('=') : pair[0];\n        if (value != undefined) value = decodeURIComponent(value);\n\n        if (key in hash) {\n          if (!Object.isArray(hash[key])) hash[key] = [hash[key]];\n          hash[key].push(value);\n        }\n        else hash[key] = value;\n      }\n      return hash;\n    });\n  }\n\n  function toArray() {\n    return this.split('');\n  }\n\n  function succ() {\n    return this.slice(0, this.length - 1) +\n      String.fromCharCode(this.charCodeAt(this.length - 1) + 1);\n  }\n\n  function times(count) {\n    return count < 1 ? '' : new Array(count + 1).join(this);\n  }\n\n  function camelize() {\n    var parts = this.split('-'), len = parts.length;\n    if (len == 1) return parts[0];\n\n    var camelized = this.charAt(0) == '-'\n      ? parts[0].charAt(0).toUpperCase() + parts[0].substring(1)\n      : parts[0];\n\n    for (var i = 1; i < len; i++)\n      camelized += parts[i].charAt(0).toUpperCase() + parts[i].substring(1);\n\n    return camelized;\n  }\n\n  function capitalize() {\n    return this.charAt(0).toUpperCase() + this.substring(1).toLowerCase();\n  }\n\n  function underscore() {\n    return this.replace(/::/g, '/')\n               .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\n               .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\n               .replace(/-/g, '_')\n               .toLowerCase();\n  }\n\n  function dasherize() {\n    return this.replace(/_/g, '-');\n  }\n\n  function inspect(useDoubleQuotes) {\n    var escapedString = this.replace(/[\\x00-\\x1f\\\\]/g, function(character) {\n      if (character in String.specialChar) {\n        return String.specialChar[character];\n      }\n      return '\\\\u00' + character.charCodeAt().toPaddedString(2, 16);\n    });\n    if (useDoubleQuotes) return '\"' + escapedString.replace(/\"/g, '\\\\\"') + '\"';\n    return \"'\" + escapedString.replace(/'/g, '\\\\\\'') + \"'\";\n  }\n\n  function toJSON() {\n    return this.inspect(true);\n  }\n\n  function unfilterJSON(filter) {\n    return this.replace(filter || Prototype.JSONFilter, '$1');\n  }\n\n  function isJSON() {\n    var str = this;\n    if (str.blank()) return false;\n    str = this.replace(/\\\\./g, '@').replace(/\"[^\"\\\\\\n\\r]*\"/g, '');\n    return (/^[,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]*$/).test(str);\n  }\n\n  function evalJSON(sanitize) {\n    var json = this.unfilterJSON();\n    try {\n      if (!sanitize || json.isJSON()) return eval('(' + json + ')');\n    } catch (e) { }\n    throw new SyntaxError('Badly formed JSON string: ' + this.inspect());\n  }\n\n  function include(pattern) {\n    return this.indexOf(pattern) > -1;\n  }\n\n  function startsWith(pattern) {\n    return this.indexOf(pattern) === 0;\n  }\n\n  function endsWith(pattern) {\n    var d = this.length - pattern.length;\n    return d >= 0 && this.lastIndexOf(pattern) === d;\n  }\n\n  function empty() {\n    return this == '';\n  }\n\n  function blank() {\n    return /^\\s*$/.test(this);\n  }\n\n  function interpolate(object, pattern) {\n    return new Template(this, pattern).evaluate(object);\n  }\n\n  return {\n    gsub:           gsub,\n    sub:            sub,\n    scan:           scan,\n    truncate:       truncate,\n    strip:          String.prototype.trim ? String.prototype.trim : strip,\n    stripTags:      stripTags,\n    stripScripts:   stripScripts,\n    extractScripts: extractScripts,\n    evalScripts:    evalScripts,\n    escapeHTML:     escapeHTML,\n    unescapeHTML:   unescapeHTML,\n    toQueryParams:  toQueryParams,\n    parseQuery:     toQueryParams,\n    toArray:        toArray,\n    succ:           succ,\n    times:          times,\n    camelize:       camelize,\n    capitalize:     capitalize,\n    underscore:     underscore,\n    dasherize:      dasherize,\n    inspect:        inspect,\n    toJSON:         toJSON,\n    unfilterJSON:   unfilterJSON,\n    isJSON:         isJSON,\n    evalJSON:       evalJSON,\n    include:        include,\n    startsWith:     startsWith,\n    endsWith:       endsWith,\n    empty:          empty,\n    blank:          blank,\n    interpolate:    interpolate\n  };\n})());\n\nvar Template = Class.create({\n  initialize: function(template, pattern) {\n    this.template = template.toString();\n    this.pattern = pattern || Template.Pattern;\n  },\n\n  evaluate: function(object) {\n    if (object && Object.isFunction(object.toTemplateReplacements))\n      object = object.toTemplateReplacements();\n\n    return this.template.gsub(this.pattern, function(match) {\n      if (object == null) return (match[1] + '');\n\n      var before = match[1] || '';\n      if (before == '\\\\') return match[2];\n\n      var ctx = object, expr = match[3];\n      var pattern = /^([^.[]+|\\[((?:.*?[^\\\\])?)\\])(\\.|\\[|$)/;\n      match = pattern.exec(expr);\n      if (match == null) return before;\n\n      while (match != null) {\n        var comp = match[1].startsWith('[') ? match[2].replace(/\\\\\\\\]/g, ']') : match[1];\n        ctx = ctx[comp];\n        if (null == ctx || '' == match[3]) break;\n        expr = expr.substring('[' == match[3] ? match[1].length : match[0].length);\n        match = pattern.exec(expr);\n      }\n\n      return before + String.interpret(ctx);\n    });\n  }\n});\nTemplate.Pattern = /(^|.|\\r|\\n)(#\\{(.*?)\\})/;\n\nvar $break = { };\n\nvar Enumerable = (function() {\n  function each(iterator, context) {\n    var index = 0;\n    try {\n      this._each(function(value) {\n        iterator.call(context, value, index++);\n      });\n    } catch (e) {\n      if (e != $break) throw e;\n    }\n    return this;\n  }\n\n  function eachSlice(number, iterator, context) {\n    var index = -number, slices = [], array = this.toArray();\n    if (number < 1) return array;\n    while ((index += number) < array.length)\n      slices.push(array.slice(index, index+number));\n    return slices.collect(iterator, context);\n  }\n\n  function all(iterator, context) {\n    iterator = iterator || Prototype.K;\n    var result = true;\n    this.each(function(value, index) {\n      result = result && !!iterator.call(context, value, index);\n      if (!result) throw $break;\n    });\n    return result;\n  }\n\n  function any(iterator, context) {\n    iterator = iterator || Prototype.K;\n    var result = false;\n    this.each(function(value, index) {\n      if (result = !!iterator.call(context, value, index))\n        throw $break;\n    });\n    return result;\n  }\n\n  function collect(iterator, context) {\n    iterator = iterator || Prototype.K;\n    var results = [];\n    this.each(function(value, index) {\n      results.push(iterator.call(context, value, index));\n    });\n    return results;\n  }\n\n  function detect(iterator, context) {\n    var result;\n    this.each(function(value, index) {\n      if (iterator.call(context, value, index)) {\n        result = value;\n        throw $break;\n      }\n    });\n    return result;\n  }\n\n  function findAll(iterator, context) {\n    var results = [];\n    this.each(function(value, index) {\n      if (iterator.call(context, value, index))\n        results.push(value);\n    });\n    return results;\n  }\n\n  function grep(filter, iterator, context) {\n    iterator = iterator || Prototype.K;\n    var results = [];\n\n    if (Object.isString(filter))\n      filter = new RegExp(RegExp.escape(filter));\n\n    this.each(function(value, index) {\n      if (filter.match(value))\n        results.push(iterator.call(context, value, index));\n    });\n    return results;\n  }\n\n  function include(object) {\n    if (Object.isFunction(this.indexOf))\n      if (this.indexOf(object) != -1) return true;\n\n    var found = false;\n    this.each(function(value) {\n      if (value == object) {\n        found = true;\n        throw $break;\n      }\n    });\n    return found;\n  }\n\n  function inGroupsOf(number, fillWith) {\n    fillWith = Object.isUndefined(fillWith) ? null : fillWith;\n    return this.eachSlice(number, function(slice) {\n      while(slice.length < number) slice.push(fillWith);\n      return slice;\n    });\n  }\n\n  function inject(memo, iterator, context) {\n    this.each(function(value, index) {\n      memo = iterator.call(context, memo, value, index);\n    });\n    return memo;\n  }\n\n  function invoke(method) {\n    var args = $A(arguments).slice(1);\n    return this.map(function(value) {\n      return value[method].apply(value, args);\n    });\n  }\n\n  function max(iterator, context) {\n    iterator = iterator || Prototype.K;\n    var result;\n    this.each(function(value, index) {\n      value = iterator.call(context, value, index);\n      if (result == null || value >= result)\n        result = value;\n    });\n    return result;\n  }\n\n  function min(iterator, context) {\n    iterator = iterator || Prototype.K;\n    var result;\n    this.each(function(value, index) {\n      value = iterator.call(context, value, index);\n      if (result == null || value < result)\n        result = value;\n    });\n    return result;\n  }\n\n  function partition(iterator, context) {\n    iterator = iterator || Prototype.K;\n    var trues = [], falses = [];\n    this.each(function(value, index) {\n      (iterator.call(context, value, index) ?\n        trues : falses).push(value);\n    });\n    return [trues, falses];\n  }\n\n  function pluck(property) {\n    var results = [];\n    this.each(function(value) {\n      results.push(value[property]);\n    });\n    return results;\n  }\n\n  function reject(iterator, context) {\n    var results = [];\n    this.each(function(value, index) {\n      if (!iterator.call(context, value, index))\n        results.push(value);\n    });\n    return results;\n  }\n\n  function sortBy(iterator, context) {\n    return this.map(function(value, index) {\n      return {\n        value: value,\n        criteria: iterator.call(context, value, index)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria, b = right.criteria;\n      return a < b ? -1 : a > b ? 1 : 0;\n    }).pluck('value');\n  }\n\n  function toArray() {\n    return this.map();\n  }\n\n  function zip() {\n    var iterator = Prototype.K, args = $A(arguments);\n    if (Object.isFunction(args.last()))\n      iterator = args.pop();\n\n    var collections = [this].concat(args).map($A);\n    return this.map(function(value, index) {\n      return iterator(collections.pluck(index));\n    });\n  }\n\n  function size() {\n    return this.toArray().length;\n  }\n\n  function inspect() {\n    return '#<Enumerable:' + this.toArray().inspect() + '>';\n  }\n\n\n\n\n\n\n\n\n\n  return {\n    each:       each,\n    eachSlice:  eachSlice,\n    all:        all,\n    every:      all,\n    any:        any,\n    some:       any,\n    collect:    collect,\n    map:        collect,\n    detect:     detect,\n    findAll:    findAll,\n    select:     findAll,\n    filter:     findAll,\n    grep:       grep,\n    include:    include,\n    member:     include,\n    inGroupsOf: inGroupsOf,\n    inject:     inject,\n    invoke:     invoke,\n    max:        max,\n    min:        min,\n    partition:  partition,\n    pluck:      pluck,\n    reject:     reject,\n    sortBy:     sortBy,\n    toArray:    toArray,\n    entries:    toArray,\n    zip:        zip,\n    size:       size,\n    inspect:    inspect,\n    find:       detect\n  };\n})();\nfunction $A(iterable) {\n  if (!iterable) return [];\n  if ('toArray' in Object(iterable)) return iterable.toArray();\n  var length = iterable.length || 0, results = new Array(length);\n  while (length--) results[length] = iterable[length];\n  return results;\n}\n\nfunction $w(string) {\n  if (!Object.isString(string)) return [];\n  string = string.strip();\n  return string ? string.split(/\\s+/) : [];\n}\n\nArray.from = $A;\n\n\n(function() {\n  var arrayProto = Array.prototype,\n      slice = arrayProto.slice,\n      _each = arrayProto.forEach; // use native browser JS 1.6 implementation if available\n\n  function each(iterator) {\n    for (var i = 0, length = this.length; i < length; i++)\n      iterator(this[i]);\n  }\n  if (!_each) _each = each;\n\n  function clear() {\n    this.length = 0;\n    return this;\n  }\n\n  function first() {\n    return this[0];\n  }\n\n  function last() {\n    return this[this.length - 1];\n  }\n\n  function compact() {\n    return this.select(function(value) {\n      return value != null;\n    });\n  }\n\n  function flatten() {\n    return this.inject([], function(array, value) {\n      if (Object.isArray(value))\n        return array.concat(value.flatten());\n      array.push(value);\n      return array;\n    });\n  }\n\n  function without() {\n    var values = slice.call(arguments, 0);\n    return this.select(function(value) {\n      return !values.include(value);\n    });\n  }\n\n  function reverse(inline) {\n    return (inline !== false ? this : this.toArray())._reverse();\n  }\n\n  function uniq(sorted) {\n    return this.inject([], function(array, value, index) {\n      if (0 == index || (sorted ? array.last() != value : !array.include(value)))\n        array.push(value);\n      return array;\n    });\n  }\n\n  function intersect(array) {\n    return this.uniq().findAll(function(item) {\n      return array.detect(function(value) { return item === value });\n    });\n  }\n\n\n  function clone() {\n    return slice.call(this, 0);\n  }\n\n  function size() {\n    return this.length;\n  }\n\n  function inspect() {\n    return '[' + this.map(Object.inspect).join(', ') + ']';\n  }\n\n  function toJSON() {\n    var results = [];\n    this.each(function(object) {\n      var value = Object.toJSON(object);\n      if (!Object.isUndefined(value)) results.push(value);\n    });\n    return '[' + results.join(', ') + ']';\n  }\n\n  function indexOf(item, i) {\n    i || (i = 0);\n    var length = this.length;\n    if (i < 0) i = length + i;\n    for (; i < length; i++)\n      if (this[i] === item) return i;\n    return -1;\n  }\n\n  function lastIndexOf(item, i) {\n    i = isNaN(i) ? this.length : (i < 0 ? this.length + i : i) + 1;\n    var n = this.slice(0, i).reverse().indexOf(item);\n    return (n < 0) ? n : i - n - 1;\n  }\n\n  function concat() {\n    var array = slice.call(this, 0), item;\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      item = arguments[i];\n      if (Object.isArray(item) && !('callee' in item)) {\n        for (var j = 0, arrayLength = item.length; j < arrayLength; j++)\n          array.push(item[j]);\n      } else {\n        array.push(item);\n      }\n    }\n    return array;\n  }\n\n  Object.extend(arrayProto, Enumerable);\n\n  if (!arrayProto._reverse)\n    arrayProto._reverse = arrayProto.reverse;\n\n  Object.extend(arrayProto, {\n    _each:     _each,\n    clear:     clear,\n    first:     first,\n    last:      last,\n    compact:   compact,\n    flatten:   flatten,\n    without:   without,\n    reverse:   reverse,\n    uniq:      uniq,\n    intersect: intersect,\n    clone:     clone,\n    toArray:   clone,\n    size:      size,\n    inspect:   inspect,\n    toJSON:    toJSON\n  });\n\n  var CONCAT_ARGUMENTS_BUGGY = (function() {\n    return [].concat(arguments)[0][0] !== 1;\n  })(1,2)\n\n  if (CONCAT_ARGUMENTS_BUGGY) arrayProto.concat = concat;\n\n  if (!arrayProto.indexOf) arrayProto.indexOf = indexOf;\n  if (!arrayProto.lastIndexOf) arrayProto.lastIndexOf = lastIndexOf;\n})();\nfunction $H(object) {\n  return new Hash(object);\n};\n\nvar Hash = Class.create(Enumerable, (function() {\n  function initialize(object) {\n    this._object = Object.isHash(object) ? object.toObject() : Object.clone(object);\n  }\n\n  function _each(iterator) {\n    for (var key in this._object) {\n      var value = this._object[key], pair = [key, value];\n      pair.key = key;\n      pair.value = value;\n      iterator(pair);\n    }\n  }\n\n  function set(key, value) {\n    return this._object[key] = value;\n  }\n\n  function get(key) {\n    if (this._object[key] !== Object.prototype[key])\n      return this._object[key];\n  }\n\n  function unset(key) {\n    var value = this._object[key];\n    delete this._object[key];\n    return value;\n  }\n\n  function toObject() {\n    return Object.clone(this._object);\n  }\n\n  function keys() {\n    return this.pluck('key');\n  }\n\n  function values() {\n    return this.pluck('value');\n  }\n\n  function index(value) {\n    var match = this.detect(function(pair) {\n      return pair.value === value;\n    });\n    return match && match.key;\n  }\n\n  function merge(object) {\n    return this.clone().update(object);\n  }\n\n  function update(object) {\n    return new Hash(object).inject(this, function(result, pair) {\n      result.set(pair.key, pair.value);\n      return result;\n    });\n  }\n\n  function toQueryPair(key, value) {\n    if (Object.isUndefined(value)) return key;\n    return key + '=' + encodeURIComponent(String.interpret(value));\n  }\n\n  function toQueryString() {\n    return this.inject([], function(results, pair) {\n      var key = encodeURIComponent(pair.key), values = pair.value;\n\n      if (values && typeof values == 'object') {\n        if (Object.isArray(values))\n          return results.concat(values.map(toQueryPair.curry(key)));\n      } else results.push(toQueryPair(key, values));\n      return results;\n    }).join('&');\n  }\n\n  function inspect() {\n    return '#<Hash:{' + this.map(function(pair) {\n      return pair.map(Object.inspect).join(': ');\n    }).join(', ') + '}>';\n  }\n\n  function toJSON() {\n    return Object.toJSON(this.toObject());\n  }\n\n  function clone() {\n    return new Hash(this);\n  }\n\n  return {\n    initialize:             initialize,\n    _each:                  _each,\n    set:                    set,\n    get:                    get,\n    unset:                  unset,\n    toObject:               toObject,\n    toTemplateReplacements: toObject,\n    keys:                   keys,\n    values:                 values,\n    index:                  index,\n    merge:                  merge,\n    update:                 update,\n    toQueryString:          toQueryString,\n    inspect:                inspect,\n    toJSON:                 toJSON,\n    clone:                  clone\n  };\n})());\n\nHash.from = $H;\nObject.extend(Number.prototype, (function() {\n  function toColorPart() {\n    return this.toPaddedString(2, 16);\n  }\n\n  function succ() {\n    return this + 1;\n  }\n\n  function times(iterator, context) {\n    $R(0, this, true).each(iterator, context);\n    return this;\n  }\n\n  function toPaddedString(length, radix) {\n    var string = this.toString(radix || 10);\n    return '0'.times(length - string.length) + string;\n  }\n\n  function toJSON() {\n    return isFinite(this) ? this.toString() : 'null';\n  }\n\n  function abs() {\n    return Math.abs(this);\n  }\n\n  function round() {\n    return Math.round(this);\n  }\n\n  function ceil() {\n    return Math.ceil(this);\n  }\n\n  function floor() {\n    return Math.floor(this);\n  }\n\n  return {\n    toColorPart:    toColorPart,\n    succ:           succ,\n    times:          times,\n    toPaddedString: toPaddedString,\n    toJSON:         toJSON,\n    abs:            abs,\n    round:          round,\n    ceil:           ceil,\n    floor:          floor\n  };\n})());\n\nfunction $R(start, end, exclusive) {\n  return new ObjectRange(start, end, exclusive);\n}\n\nvar ObjectRange = Class.create(Enumerable, (function() {\n  function initialize(start, end, exclusive) {\n    this.start = start;\n    this.end = end;\n    this.exclusive = exclusive;\n  }\n\n  function _each(iterator) {\n    var value = this.start;\n    while (this.include(value)) {\n      iterator(value);\n      value = value.succ();\n    }\n  }\n\n  function include(value) {\n    if (value < this.start)\n      return false;\n    if (this.exclusive)\n      return value < this.end;\n    return value <= this.end;\n  }\n\n  return {\n    initialize: initialize,\n    _each:      _each,\n    include:    include\n  };\n})());\n\n\n\nvar Ajax = {\n  getTransport: function() {\n    return Try.these(\n      function() {return new XMLHttpRequest()},\n      function() {return new ActiveXObject('Msxml2.XMLHTTP')},\n      function() {return new ActiveXObject('Microsoft.XMLHTTP')}\n    ) || false;\n  },\n\n  activeRequestCount: 0\n};\n\nAjax.Responders = {\n  responders: [],\n\n  _each: function(iterator) {\n    this.responders._each(iterator);\n  },\n\n  register: function(responder) {\n    if (!this.include(responder))\n      this.responders.push(responder);\n  },\n\n  unregister: function(responder) {\n    this.responders = this.responders.without(responder);\n  },\n\n  dispatch: function(callback, request, transport, json) {\n    this.each(function(responder) {\n      if (Object.isFunction(responder[callback])) {\n        try {\n          responder[callback].apply(responder, [request, transport, json]);\n        } catch (e) { }\n      }\n    });\n  }\n};\n\nObject.extend(Ajax.Responders, Enumerable);\n\nAjax.Responders.register({\n  onCreate:   function() { Ajax.activeRequestCount++ },\n  onComplete: function() { Ajax.activeRequestCount-- }\n});\nAjax.Base = Class.create({\n  initialize: function(options) {\n    this.options = {\n      method:       'post',\n      asynchronous: true,\n      contentType:  'application/x-www-form-urlencoded',\n      encoding:     'UTF-8',\n      parameters:   '',\n      evalJSON:     true,\n      evalJS:       true\n    };\n    Object.extend(this.options, options || { });\n\n    this.options.method = this.options.method.toLowerCase();\n\n    if (Object.isString(this.options.parameters))\n      this.options.parameters = this.options.parameters.toQueryParams();\n    else if (Object.isHash(this.options.parameters))\n      this.options.parameters = this.options.parameters.toObject();\n  }\n});\nAjax.Request = Class.create(Ajax.Base, {\n  _complete: false,\n\n  initialize: function($super, url, options) {\n    $super(options);\n    this.transport = Ajax.getTransport();\n    this.request(url);\n  },\n\n  request: function(url) {\n    this.url = url;\n    this.method = this.options.method;\n    var params = Object.clone(this.options.parameters);\n\n    if (!['get', 'post'].include(this.method)) {\n      params['_method'] = this.method;\n      this.method = 'post';\n    }\n\n    this.parameters = params;\n\n    if (params = Object.toQueryString(params)) {\n      if (this.method == 'get')\n        this.url += (this.url.include('?') ? '&' : '?') + params;\n      else if (/Konqueror|Safari|KHTML/.test(navigator.userAgent))\n        params += '&_=';\n    }\n\n    try {\n      var response = new Ajax.Response(this);\n      if (this.options.onCreate) this.options.onCreate(response);\n      Ajax.Responders.dispatch('onCreate', this, response);\n\n      this.transport.open(this.method.toUpperCase(), this.url,\n        this.options.asynchronous);\n\n      if (this.options.asynchronous) this.respondToReadyState.bind(this).defer(1);\n\n      this.transport.onreadystatechange = this.onStateChange.bind(this);\n      this.setRequestHeaders();\n\n      this.body = this.method == 'post' ? (this.options.postBody || params) : null;\n      this.transport.send(this.body);\n\n      /* Force Firefox to handle ready state 4 for synchronous requests */\n      if (!this.options.asynchronous && this.transport.overrideMimeType)\n        this.onStateChange();\n\n    }\n    catch (e) {\n      this.dispatchException(e);\n    }\n  },\n\n  onStateChange: function() {\n    var readyState = this.transport.readyState;\n    if (readyState > 1 && !((readyState == 4) && this._complete))\n      this.respondToReadyState(this.transport.readyState);\n  },\n\n  setRequestHeaders: function() {\n    var headers = {\n      'X-Requested-With': 'XMLHttpRequest',\n      'X-Prototype-Version': Prototype.Version,\n      'Accept': 'text/javascript, text/html, application/xml, text/xml, */*'\n    };\n\n    if (this.method == 'post') {\n      headers['Content-type'] = this.options.contentType +\n        (this.options.encoding ? '; charset=' + this.options.encoding : '');\n\n      /* Force \"Connection: close\" for older Mozilla browsers to work\n       * around a bug where XMLHttpRequest sends an incorrect\n       * Content-length header. See Mozilla Bugzilla #246651.\n       */\n      if (this.transport.overrideMimeType &&\n          (navigator.userAgent.match(/Gecko\\/(\\d{4})/) || [0,2005])[1] < 2005)\n            headers['Connection'] = 'close';\n    }\n\n    if (typeof this.options.requestHeaders == 'object') {\n      var extras = this.options.requestHeaders;\n\n      if (Object.isFunction(extras.push))\n        for (var i = 0, length = extras.length; i < length; i += 2)\n          headers[extras[i]] = extras[i+1];\n      else\n        $H(extras).each(function(pair) { headers[pair.key] = pair.value });\n    }\n\n    for (var name in headers)\n      this.transport.setRequestHeader(name, headers[name]);\n  },\n\n  success: function() {\n    var status = this.getStatus();\n    return !status || (status >= 200 && status < 300);\n  },\n\n  getStatus: function() {\n    try {\n      return this.transport.status || 0;\n    } catch (e) { return 0 }\n  },\n\n  respondToReadyState: function(readyState) {\n    var state = Ajax.Request.Events[readyState], response = new Ajax.Response(this);\n\n    if (state == 'Complete') {\n      try {\n        this._complete = true;\n        (this.options['on' + response.status]\n         || this.options['on' + (this.success() ? 'Success' : 'Failure')]\n         || Prototype.emptyFunction)(response, response.headerJSON);\n      } catch (e) {\n        this.dispatchException(e);\n      }\n\n      var contentType = response.getHeader('Content-type');\n      if (this.options.evalJS == 'force'\n          || (this.options.evalJS && this.isSameOrigin() && contentType\n          && contentType.match(/^\\s*(text|application)\\/(x-)?(java|ecma)script(;.*)?\\s*$/i)))\n        this.evalResponse();\n    }\n\n    try {\n      (this.options['on' + state] || Prototype.emptyFunction)(response, response.headerJSON);\n      Ajax.Responders.dispatch('on' + state, this, response, response.headerJSON);\n    } catch (e) {\n      this.dispatchException(e);\n    }\n\n    if (state == 'Complete') {\n      this.transport.onreadystatechange = Prototype.emptyFunction;\n    }\n  },\n\n  isSameOrigin: function() {\n    var m = this.url.match(/^\\s*https?:\\/\\/[^\\/]*/);\n    return !m || (m[0] == '#{protocol}//#{domain}#{port}'.interpolate({\n      protocol: location.protocol,\n      domain: document.domain,\n      port: location.port ? ':' + location.port : ''\n    }));\n  },\n\n  getHeader: function(name) {\n    try {\n      return this.transport.getResponseHeader(name) || null;\n    } catch (e) { return null; }\n  },\n\n  evalResponse: function() {\n    try {\n      return eval((this.transport.responseText || '').unfilterJSON());\n    } catch (e) {\n      this.dispatchException(e);\n    }\n  },\n\n  dispatchException: function(exception) {\n    (this.options.onException || Prototype.emptyFunction)(this, exception);\n    Ajax.Responders.dispatch('onException', this, exception);\n  }\n});\n\nAjax.Request.Events =\n  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];\n\n\n\n\n\n\n\n\nAjax.Response = Class.create({\n  initialize: function(request){\n    this.request = request;\n    var transport  = this.transport  = request.transport,\n        readyState = this.readyState = transport.readyState;\n\n    if((readyState > 2 && !Prototype.Browser.IE) || readyState == 4) {\n      this.status       = this.getStatus();\n      this.statusText   = this.getStatusText();\n      this.responseText = String.interpret(transport.responseText);\n      this.headerJSON   = this._getHeaderJSON();\n    }\n\n    if(readyState == 4) {\n      var xml = transport.responseXML;\n      this.responseXML  = Object.isUndefined(xml) ? null : xml;\n      this.responseJSON = this._getResponseJSON();\n    }\n  },\n\n  status:      0,\n\n  statusText: '',\n\n  getStatus: Ajax.Request.prototype.getStatus,\n\n  getStatusText: function() {\n    try {\n      return this.transport.statusText || '';\n    } catch (e) { return '' }\n  },\n\n  getHeader: Ajax.Request.prototype.getHeader,\n\n  getAllHeaders: function() {\n    try {\n      return this.getAllResponseHeaders();\n    } catch (e) { return null }\n  },\n\n  getResponseHeader: function(name) {\n    return this.transport.getResponseHeader(name);\n  },\n\n  getAllResponseHeaders: function() {\n    return this.transport.getAllResponseHeaders();\n  },\n\n  _getHeaderJSON: function() {\n    var json = this.getHeader('X-JSON');\n    if (!json) return null;\n    json = decodeURIComponent(escape(json));\n    try {\n      return json.evalJSON(this.request.options.sanitizeJSON ||\n        !this.request.isSameOrigin());\n    } catch (e) {\n      this.request.dispatchException(e);\n    }\n  },\n\n  _getResponseJSON: function() {\n    var options = this.request.options;\n    if (!options.evalJSON || (options.evalJSON != 'force' &&\n      !(this.getHeader('Content-type') || '').include('application/json')) ||\n        this.responseText.blank())\n          return null;\n    try {\n      return this.responseText.evalJSON(options.sanitizeJSON ||\n        !this.request.isSameOrigin());\n    } catch (e) {\n      this.request.dispatchException(e);\n    }\n  }\n});\n\nAjax.Updater = Class.create(Ajax.Request, {\n  initialize: function($super, container, url, options) {\n    this.container = {\n      success: (container.success || container),\n      failure: (container.failure || (container.success ? null : container))\n    };\n\n    options = Object.clone(options);\n    var onComplete = options.onComplete;\n    options.onComplete = (function(response, json) {\n      this.updateContent(response.responseText);\n      if (Object.isFunction(onComplete)) onComplete(response, json);\n    }).bind(this);\n\n    $super(url, options);\n  },\n\n  updateContent: function(responseText) {\n    var receiver = this.container[this.success() ? 'success' : 'failure'],\n        options = this.options;\n\n    if (!options.evalScripts) responseText = responseText.stripScripts();\n\n    if (receiver = $(receiver)) {\n      if (options.insertion) {\n        if (Object.isString(options.insertion)) {\n          var insertion = { }; insertion[options.insertion] = responseText;\n          receiver.insert(insertion);\n        }\n        else options.insertion(receiver, responseText);\n      }\n      else receiver.update(responseText);\n    }\n  }\n});\n\nAjax.PeriodicalUpdater = Class.create(Ajax.Base, {\n  initialize: function($super, container, url, options) {\n    $super(options);\n    this.onComplete = this.options.onComplete;\n\n    this.frequency = (this.options.frequency || 2);\n    this.decay = (this.options.decay || 1);\n\n    this.updater = { };\n    this.container = container;\n    this.url = url;\n\n    this.start();\n  },\n\n  start: function() {\n    this.options.onComplete = this.updateComplete.bind(this);\n    this.onTimerEvent();\n  },\n\n  stop: function() {\n    this.updater.options.onComplete = undefined;\n    clearTimeout(this.timer);\n    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);\n  },\n\n  updateComplete: function(response) {\n    if (this.options.decay) {\n      this.decay = (response.responseText == this.lastText ?\n        this.decay * this.options.decay : 1);\n\n      this.lastText = response.responseText;\n    }\n    this.timer = this.onTimerEvent.bind(this).delay(this.decay * this.frequency);\n  },\n\n  onTimerEvent: function() {\n    this.updater = new Ajax.Updater(this.container, this.url, this.options);\n  }\n});\n\n\n\nfunction $(element) {\n  if (arguments.length > 1) {\n    for (var i = 0, elements = [], length = arguments.length; i < length; i++)\n      elements.push($(arguments[i]));\n    return elements;\n  }\n  if (Object.isString(element))\n    element = document.getElementById(element);\n  return Element.extend(element);\n}\n\nif (Prototype.BrowserFeatures.XPath) {\n  document._getElementsByXPath = function(expression, parentElement) {\n    var results = [];\n    var query = document.evaluate(expression, $(parentElement) || document,\n      null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);\n    for (var i = 0, length = query.snapshotLength; i < length; i++)\n      results.push(Element.extend(query.snapshotItem(i)));\n    return results;\n  };\n}\n\n/*--------------------------------------------------------------------------*/\n\nif (!window.Node) var Node = { };\n\nif (!Node.ELEMENT_NODE) {\n  Object.extend(Node, {\n    ELEMENT_NODE: 1,\n    ATTRIBUTE_NODE: 2,\n    TEXT_NODE: 3,\n    CDATA_SECTION_NODE: 4,\n    ENTITY_REFERENCE_NODE: 5,\n    ENTITY_NODE: 6,\n    PROCESSING_INSTRUCTION_NODE: 7,\n    COMMENT_NODE: 8,\n    DOCUMENT_NODE: 9,\n    DOCUMENT_TYPE_NODE: 10,\n    DOCUMENT_FRAGMENT_NODE: 11,\n    NOTATION_NODE: 12\n  });\n}\n\n\n(function(global) {\n\n  var SETATTRIBUTE_IGNORES_NAME = (function(){\n    var elForm = document.createElement(\"form\");\n    var elInput = document.createElement(\"input\");\n    var root = document.documentElement;\n    elInput.setAttribute(\"name\", \"test\");\n    elForm.appendChild(elInput);\n    root.appendChild(elForm);\n    var isBuggy = elForm.elements\n      ? (typeof elForm.elements.test == \"undefined\")\n      : null;\n    root.removeChild(elForm);\n    elForm = elInput = null;\n    return isBuggy;\n  })();\n\n  var element = global.Element;\n  global.Element = function(tagName, attributes) {\n    attributes = attributes || { };\n    tagName = tagName.toLowerCase();\n    var cache = Element.cache;\n    if (SETATTRIBUTE_IGNORES_NAME && attributes.name) {\n      tagName = '<' + tagName + ' name=\"' + attributes.name + '\">';\n      delete attributes.name;\n      return Element.writeAttribute(document.createElement(tagName), attributes);\n    }\n    if (!cache[tagName]) cache[tagName] = Element.extend(document.createElement(tagName));\n    return Element.writeAttribute(cache[tagName].cloneNode(false), attributes);\n  };\n  Object.extend(global.Element, element || { });\n  if (element) global.Element.prototype = element.prototype;\n})(this);\n\nElement.cache = { };\nElement.idCounter = 1;\n\nElement.Methods = {\n  visible: function(element) {\n    return $(element).style.display != 'none';\n  },\n\n  toggle: function(element) {\n    element = $(element);\n    Element[Element.visible(element) ? 'hide' : 'show'](element);\n    return element;\n  },\n\n\n  hide: function(element) {\n    element = $(element);\n    element.style.display = 'none';\n    return element;\n  },\n\n  show: function(element) {\n    element = $(element);\n    element.style.display = '';\n    return element;\n  },\n\n  remove: function(element) {\n    element = $(element);\n    element.parentNode.removeChild(element);\n    return element;\n  },\n\n  update: (function(){\n\n    var SELECT_ELEMENT_INNERHTML_BUGGY = (function(){\n      var el = document.createElement(\"select\"),\n          isBuggy = true;\n      el.innerHTML = \"<option value=\\\"test\\\">test</option>\";\n      if (el.options && el.options[0]) {\n        isBuggy = el.options[0].nodeName.toUpperCase() !== \"OPTION\";\n      }\n      el = null;\n      return isBuggy;\n    })();\n\n    var TABLE_ELEMENT_INNERHTML_BUGGY = (function(){\n      try {\n        var el = document.createElement(\"table\");\n        if (el && el.tBodies) {\n          el.innerHTML = \"<tbody><tr><td>test</td></tr></tbody>\";\n          var isBuggy = typeof el.tBodies[0] == \"undefined\";\n          el = null;\n          return isBuggy;\n        }\n      } catch (e) {\n        return true;\n      }\n    })();\n\n    var SCRIPT_ELEMENT_REJECTS_TEXTNODE_APPENDING = (function () {\n      var s = document.createElement(\"script\"),\n          isBuggy = false;\n      try {\n        s.appendChild(document.createTextNode(\"\"));\n        isBuggy = !s.firstChild ||\n          s.firstChild && s.firstChild.nodeType !== 3;\n      } catch (e) {\n        isBuggy = true;\n      }\n      s = null;\n      return isBuggy;\n    })();\n\n    function update(element, content) {\n      element = $(element);\n\n      if (content && content.toElement)\n        content = content.toElement();\n\n      if (Object.isElement(content))\n        return element.update().insert(content);\n\n      content = Object.toHTML(content);\n\n      var tagName = element.tagName.toUpperCase();\n\n      if (tagName === 'SCRIPT' && SCRIPT_ELEMENT_REJECTS_TEXTNODE_APPENDING) {\n        element.text = content;\n        return element;\n      }\n\n      if (SELECT_ELEMENT_INNERHTML_BUGGY || TABLE_ELEMENT_INNERHTML_BUGGY) {\n        if (tagName in Element._insertionTranslations.tags) {\n          while (element.firstChild) {\n            element.removeChild(element.firstChild);\n          }\n          Element._getContentFromAnonymousElement(tagName, content.stripScripts())\n            .each(function(node) {\n              element.appendChild(node)\n            });\n        }\n        else {\n          element.innerHTML = content.stripScripts();\n        }\n      }\n      else {\n        element.innerHTML = content.stripScripts();\n      }\n\n      content.evalScripts.bind(content).defer();\n      return element;\n    }\n\n    return update;\n  })(),\n\n  replace: function(element, content) {\n    element = $(element);\n    if (content && content.toElement) content = content.toElement();\n    else if (!Object.isElement(content)) {\n      content = Object.toHTML(content);\n      var range = element.ownerDocument.createRange();\n      range.selectNode(element);\n      content.evalScripts.bind(content).defer();\n      content = range.createContextualFragment(content.stripScripts());\n    }\n    element.parentNode.replaceChild(content, element);\n    return element;\n  },\n\n  insert: function(element, insertions) {\n    element = $(element);\n\n    if (Object.isString(insertions) || Object.isNumber(insertions) ||\n        Object.isElement(insertions) || (insertions && (insertions.toElement || insertions.toHTML)))\n          insertions = {bottom:insertions};\n\n    var content, insert, tagName, childNodes;\n\n    for (var position in insertions) {\n      content  = insertions[position];\n      position = position.toLowerCase();\n      insert = Element._insertionTranslations[position];\n\n      if (content && content.toElement) content = content.toElement();\n      if (Object.isElement(content)) {\n        insert(element, content);\n        continue;\n      }\n\n      content = Object.toHTML(content);\n\n      tagName = ((position == 'before' || position == 'after')\n        ? element.parentNode : element).tagName.toUpperCase();\n\n      childNodes = Element._getContentFromAnonymousElement(tagName, content.stripScripts());\n\n      if (position == 'top' || position == 'after') childNodes.reverse();\n      childNodes.each(insert.curry(element));\n\n      content.evalScripts.bind(content).defer();\n    }\n\n    return element;\n  },\n\n  wrap: function(element, wrapper, attributes) {\n    element = $(element);\n    if (Object.isElement(wrapper))\n      $(wrapper).writeAttribute(attributes || { });\n    else if (Object.isString(wrapper)) wrapper = new Element(wrapper, attributes);\n    else wrapper = new Element('div', wrapper);\n    if (element.parentNode)\n      element.parentNode.replaceChild(wrapper, element);\n    wrapper.appendChild(element);\n    return wrapper;\n  },\n\n  inspect: function(element) {\n    element = $(element);\n    var result = '<' + element.tagName.toLowerCase();\n    $H({'id': 'id', 'className': 'class'}).each(function(pair) {\n      var property = pair.first(), attribute = pair.last();\n      var value = (element[property] || '').toString();\n      if (value) result += ' ' + attribute + '=' + value.inspect(true);\n    });\n    return result + '>';\n  },\n\n  recursivelyCollect: function(element, property) {\n    element = $(element);\n    var elements = [];\n    while (element = element[property])\n      if (element.nodeType == 1)\n        elements.push(Element.extend(element));\n    return elements;\n  },\n\n  ancestors: function(element) {\n    return Element.recursivelyCollect(element, 'parentNode');\n  },\n\n  descendants: function(element) {\n    return Element.select(element, \"*\");\n  },\n\n  firstDescendant: function(element) {\n    element = $(element).firstChild;\n    while (element && element.nodeType != 1) element = element.nextSibling;\n    return $(element);\n  },\n\n  immediateDescendants: function(element) {\n    if (!(element = $(element).firstChild)) return [];\n    while (element && element.nodeType != 1) element = element.nextSibling;\n    if (element) return [element].concat($(element).nextSiblings());\n    return [];\n  },\n\n  previousSiblings: function(element) {\n    return Element.recursivelyCollect(element, 'previousSibling');\n  },\n\n  nextSiblings: function(element) {\n    return Element.recursivelyCollect(element, 'nextSibling');\n  },\n\n  siblings: function(element) {\n    element = $(element);\n    return Element.previousSiblings(element).reverse()\n      .concat(Element.nextSiblings(element));\n  },\n\n  match: function(element, selector) {\n    if (Object.isString(selector))\n      selector = new Selector(selector);\n    return selector.match($(element));\n  },\n\n  up: function(element, expression, index) {\n    element = $(element);\n    if (arguments.length == 1) return $(element.parentNode);\n    var ancestors = Element.ancestors(element);\n    return Object.isNumber(expression) ? ancestors[expression] :\n      Selector.findElement(ancestors, expression, index);\n  },\n\n  down: function(element, expression, index) {\n    element = $(element);\n    if (arguments.length == 1) return Element.firstDescendant(element);\n    return Object.isNumber(expression) ? Element.descendants(element)[expression] :\n      Element.select(element, expression)[index || 0];\n  },\n\n  previous: function(element, expression, index) {\n    element = $(element);\n    if (arguments.length == 1) return $(Selector.handlers.previousElementSibling(element));\n    var previousSiblings = Element.previousSiblings(element);\n    return Object.isNumber(expression) ? previousSiblings[expression] :\n      Selector.findElement(previousSiblings, expression, index);\n  },\n\n  next: function(element, expression, index) {\n    element = $(element);\n    if (arguments.length == 1) return $(Selector.handlers.nextElementSibling(element));\n    var nextSiblings = Element.nextSiblings(element);\n    return Object.isNumber(expression) ? nextSiblings[expression] :\n      Selector.findElement(nextSiblings, expression, index);\n  },\n\n\n  select: function(element) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return Selector.findChildElements(element, args);\n  },\n\n  adjacent: function(element) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return Selector.findChildElements(element.parentNode, args).without(element);\n  },\n\n  identify: function(element) {\n    element = $(element);\n    var id = Element.readAttribute(element, 'id');\n    if (id) return id;\n    do { id = 'anonymous_element_' + Element.idCounter++ } while ($(id));\n    Element.writeAttribute(element, 'id', id);\n    return id;\n  },\n\n  readAttribute: function(element, name) {\n    element = $(element);\n    if (Prototype.Browser.IE) {\n      var t = Element._attributeTranslations.read;\n      if (t.values[name]) return t.values[name](element, name);\n      if (t.names[name]) name = t.names[name];\n      if (name.include(':')) {\n        return (!element.attributes || !element.attributes[name]) ? null :\n         element.attributes[name].value;\n      }\n    }\n    return element.getAttribute(name);\n  },\n\n  writeAttribute: function(element, name, value) {\n    element = $(element);\n    var attributes = { }, t = Element._attributeTranslations.write;\n\n    if (typeof name == 'object') attributes = name;\n    else attributes[name] = Object.isUndefined(value) ? true : value;\n\n    for (var attr in attributes) {\n      name = t.names[attr] || attr;\n      value = attributes[attr];\n      if (t.values[attr]) name = t.values[attr](element, value);\n      if (value === false || value === null)\n        element.removeAttribute(name);\n      else if (value === true)\n        element.setAttribute(name, name);\n      else element.setAttribute(name, value);\n    }\n    return element;\n  },\n\n  getHeight: function(element) {\n    return Element.getDimensions(element).height;\n  },\n\n  getWidth: function(element) {\n    return Element.getDimensions(element).width;\n  },\n\n  classNames: function(element) {\n    return new Element.ClassNames(element);\n  },\n\n  hasClassName: function(element, className) {\n    if (!(element = $(element))) return;\n    var elementClassName = element.className;\n    return (elementClassName.length > 0 && (elementClassName == className ||\n      new RegExp(\"(^|\\\\s)\" + className + \"(\\\\s|$)\").test(elementClassName)));\n  },\n\n  addClassName: function(element, className) {\n    if (!(element = $(element))) return;\n    if (!Element.hasClassName(element, className))\n      element.className += (element.className ? ' ' : '') + className;\n    return element;\n  },\n\n  removeClassName: function(element, className) {\n    if (!(element = $(element))) return;\n    element.className = element.className.replace(\n      new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), ' ').strip();\n    return element;\n  },\n\n  toggleClassName: function(element, className) {\n    if (!(element = $(element))) return;\n    return Element[Element.hasClassName(element, className) ?\n      'removeClassName' : 'addClassName'](element, className);\n  },\n\n  cleanWhitespace: function(element) {\n    element = $(element);\n    var node = element.firstChild;\n    while (node) {\n      var nextNode = node.nextSibling;\n      if (node.nodeType == 3 && !/\\S/.test(node.nodeValue))\n        element.removeChild(node);\n      node = nextNode;\n    }\n    return element;\n  },\n\n  empty: function(element) {\n    return $(element).innerHTML.blank();\n  },\n\n  descendantOf: function(element, ancestor) {\n    element = $(element), ancestor = $(ancestor);\n\n    if (element.compareDocumentPosition)\n      return (element.compareDocumentPosition(ancestor) & 8) === 8;\n\n    if (ancestor.contains)\n      return ancestor.contains(element) && ancestor !== element;\n\n    while (element = element.parentNode)\n      if (element == ancestor) return true;\n\n    return false;\n  },\n\n  scrollTo: function(element) {\n    element = $(element);\n    var pos = Element.cumulativeOffset(element);\n    window.scrollTo(pos[0], pos[1]);\n    return element;\n  },\n\n  getStyle: function(element, style) {\n    element = $(element);\n    style = style == 'float' ? 'cssFloat' : style.camelize();\n    var value = element.style[style];\n    if (!value || value == 'auto') {\n      var css = document.defaultView.getComputedStyle(element, null);\n      value = css ? css[style] : null;\n    }\n    if (style == 'opacity') return value ? parseFloat(value) : 1.0;\n    return value == 'auto' ? null : value;\n  },\n\n  getOpacity: function(element) {\n    return $(element).getStyle('opacity');\n  },\n\n  setStyle: function(element, styles) {\n    element = $(element);\n    var elementStyle = element.style, match;\n    if (Object.isString(styles)) {\n      element.style.cssText += ';' + styles;\n      return styles.include('opacity') ?\n        element.setOpacity(styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1]) : element;\n    }\n    for (var property in styles)\n      if (property == 'opacity') element.setOpacity(styles[property]);\n      else\n        elementStyle[(property == 'float' || property == 'cssFloat') ?\n          (Object.isUndefined(elementStyle.styleFloat) ? 'cssFloat' : 'styleFloat') :\n            property] = styles[property];\n\n    return element;\n  },\n\n  setOpacity: function(element, value) {\n    element = $(element);\n    element.style.opacity = (value == 1 || value === '') ? '' :\n      (value < 0.00001) ? 0 : value;\n    return element;\n  },\n\n  getDimensions: function(element) {\n    element = $(element);\n    var display = Element.getStyle(element, 'display');\n    if (display != 'none' && display != null) // Safari bug\n      return {width: element.offsetWidth, height: element.offsetHeight};\n\n    var els = element.style;\n    var originalVisibility = els.visibility;\n    var originalPosition = els.position;\n    var originalDisplay = els.display;\n    els.visibility = 'hidden';\n    if (originalPosition != 'fixed') // Switching fixed to absolute causes issues in Safari\n      els.position = 'absolute';\n    els.display = 'block';\n    var originalWidth = element.clientWidth;\n    var originalHeight = element.clientHeight;\n    els.display = originalDisplay;\n    els.position = originalPosition;\n    els.visibility = originalVisibility;\n    return {width: originalWidth, height: originalHeight};\n  },\n\n  makePositioned: function(element) {\n    element = $(element);\n    var pos = Element.getStyle(element, 'position');\n    if (pos == 'static' || !pos) {\n      element._madePositioned = true;\n      element.style.position = 'relative';\n      if (Prototype.Browser.Opera) {\n        element.style.top = 0;\n        element.style.left = 0;\n      }\n    }\n    return element;\n  },\n\n  undoPositioned: function(element) {\n    element = $(element);\n    if (element._madePositioned) {\n      element._madePositioned = undefined;\n      element.style.position =\n        element.style.top =\n        element.style.left =\n        element.style.bottom =\n        element.style.right = '';\n    }\n    return element;\n  },\n\n  makeClipping: function(element) {\n    element = $(element);\n    if (element._overflow) return element;\n    element._overflow = Element.getStyle(element, 'overflow') || 'auto';\n    if (element._overflow !== 'hidden')\n      element.style.overflow = 'hidden';\n    return element;\n  },\n\n  undoClipping: function(element) {\n    element = $(element);\n    if (!element._overflow) return element;\n    element.style.overflow = element._overflow == 'auto' ? '' : element._overflow;\n    element._overflow = null;\n    return element;\n  },\n\n  cumulativeOffset: function(element) {\n    var valueT = 0, valueL = 0;\n    do {\n      valueT += element.offsetTop  || 0;\n      valueL += element.offsetLeft || 0;\n      element = element.offsetParent;\n    } while (element);\n    return Element._returnOffset(valueL, valueT);\n  },\n\n  positionedOffset: function(element) {\n    var valueT = 0, valueL = 0;\n    do {\n      valueT += element.offsetTop  || 0;\n      valueL += element.offsetLeft || 0;\n      element = element.offsetParent;\n      if (element) {\n        if (element.tagName.toUpperCase() == 'BODY') break;\n        var p = Element.getStyle(element, 'position');\n        if (p !== 'static') break;\n      }\n    } while (element);\n    return Element._returnOffset(valueL, valueT);\n  },\n\n  absolutize: function(element) {\n    element = $(element);\n    if (Element.getStyle(element, 'position') == 'absolute') return element;\n\n    var offsets = Element.positionedOffset(element);\n    var top     = offsets[1];\n    var left    = offsets[0];\n    var width   = element.clientWidth;\n    var height  = element.clientHeight;\n\n    element._originalLeft   = left - parseFloat(element.style.left  || 0);\n    element._originalTop    = top  - parseFloat(element.style.top || 0);\n    element._originalWidth  = element.style.width;\n    element._originalHeight = element.style.height;\n\n    element.style.position = 'absolute';\n    element.style.top    = top + 'px';\n    element.style.left   = left + 'px';\n    element.style.width  = width + 'px';\n    element.style.height = height + 'px';\n    return element;\n  },\n\n  relativize: function(element) {\n    element = $(element);\n    if (Element.getStyle(element, 'position') == 'relative') return element;\n\n    element.style.position = 'relative';\n    var top  = parseFloat(element.style.top  || 0) - (element._originalTop || 0);\n    var left = parseFloat(element.style.left || 0) - (element._originalLeft || 0);\n\n    element.style.top    = top + 'px';\n    element.style.left   = left + 'px';\n    element.style.height = element._originalHeight;\n    element.style.width  = element._originalWidth;\n    return element;\n  },\n\n  cumulativeScrollOffset: function(element) {\n    var valueT = 0, valueL = 0;\n    do {\n      valueT += element.scrollTop  || 0;\n      valueL += element.scrollLeft || 0;\n      element = element.parentNode;\n    } while (element);\n    return Element._returnOffset(valueL, valueT);\n  },\n\n  getOffsetParent: function(element) {\n    if (element.offsetParent) return $(element.offsetParent);\n    if (element == document.body) return $(element);\n\n    while ((element = element.parentNode) && element != document.body)\n      if (Element.getStyle(element, 'position') != 'static')\n        return $(element);\n\n    return $(document.body);\n  },\n\n  viewportOffset: function(forElement) {\n    var valueT = 0, valueL = 0;\n\n    var element = forElement;\n    do {\n      valueT += element.offsetTop  || 0;\n      valueL += element.offsetLeft || 0;\n\n      if (element.offsetParent == document.body &&\n        Element.getStyle(element, 'position') == 'absolute') break;\n\n    } while (element = element.offsetParent);\n\n    element = forElement;\n    do {\n      if (!Prototype.Browser.Opera || (element.tagName && (element.tagName.toUpperCase() == 'BODY'))) {\n        valueT -= element.scrollTop  || 0;\n        valueL -= element.scrollLeft || 0;\n      }\n    } while (element = element.parentNode);\n\n    return Element._returnOffset(valueL, valueT);\n  },\n\n  clonePosition: function(element, source) {\n    var options = Object.extend({\n      setLeft:    true,\n      setTop:     true,\n      setWidth:   true,\n      setHeight:  true,\n      offsetTop:  0,\n      offsetLeft: 0\n    }, arguments[2] || { });\n\n    source = $(source);\n    var p = Element.viewportOffset(source);\n\n    element = $(element);\n    var delta = [0, 0];\n    var parent = null;\n    if (Element.getStyle(element, 'position') == 'absolute') {\n      parent = Element.getOffsetParent(element);\n      delta = Element.viewportOffset(parent);\n    }\n\n    if (parent == document.body) {\n      delta[0] -= document.body.offsetLeft;\n      delta[1] -= document.body.offsetTop;\n    }\n\n    if (options.setLeft)   element.style.left  = (p[0] - delta[0] + options.offsetLeft) + 'px';\n    if (options.setTop)    element.style.top   = (p[1] - delta[1] + options.offsetTop) + 'px';\n    if (options.setWidth)  element.style.width = source.offsetWidth + 'px';\n    if (options.setHeight) element.style.height = source.offsetHeight + 'px';\n    return element;\n  }\n};\n\nObject.extend(Element.Methods, {\n  getElementsBySelector: Element.Methods.select,\n\n  childElements: Element.Methods.immediateDescendants\n});\n\nElement._attributeTranslations = {\n  write: {\n    names: {\n      className: 'class',\n      htmlFor:   'for'\n    },\n    values: { }\n  }\n};\n\nif (Prototype.Browser.Opera) {\n  Element.Methods.getStyle = Element.Methods.getStyle.wrap(\n    function(proceed, element, style) {\n      switch (style) {\n        case 'left': case 'top': case 'right': case 'bottom':\n          if (proceed(element, 'position') === 'static') return null;\n        case 'height': case 'width':\n          if (!Element.visible(element)) return null;\n\n          var dim = parseInt(proceed(element, style), 10);\n\n          if (dim !== element['offset' + style.capitalize()])\n            return dim + 'px';\n\n          var properties;\n          if (style === 'height') {\n            properties = ['border-top-width', 'padding-top',\n             'padding-bottom', 'border-bottom-width'];\n          }\n          else {\n            properties = ['border-left-width', 'padding-left',\n             'padding-right', 'border-right-width'];\n          }\n          return properties.inject(dim, function(memo, property) {\n            var val = proceed(element, property);\n            return val === null ? memo : memo - parseInt(val, 10);\n          }) + 'px';\n        default: return proceed(element, style);\n      }\n    }\n  );\n\n  Element.Methods.readAttribute = Element.Methods.readAttribute.wrap(\n    function(proceed, element, attribute) {\n      if (attribute === 'title') return element.title;\n      return proceed(element, attribute);\n    }\n  );\n}\n\nelse if (Prototype.Browser.IE) {\n  Element.Methods.getOffsetParent = Element.Methods.getOffsetParent.wrap(\n    function(proceed, element) {\n      element = $(element);\n      try { element.offsetParent }\n      catch(e) { return $(document.body) }\n      var position = element.getStyle('position');\n      if (position !== 'static') return proceed(element);\n      element.setStyle({ position: 'relative' });\n      var value = proceed(element);\n      element.setStyle({ position: position });\n      return value;\n    }\n  );\n\n  $w('positionedOffset viewportOffset').each(function(method) {\n    Element.Methods[method] = Element.Methods[method].wrap(\n      function(proceed, element) {\n        element = $(element);\n        try { element.offsetParent }\n        catch(e) { return Element._returnOffset(0,0) }\n        var position = element.getStyle('position');\n        if (position !== 'static') return proceed(element);\n        var offsetParent = element.getOffsetParent();\n        if (offsetParent && offsetParent.getStyle('position') === 'fixed')\n          offsetParent.setStyle({ zoom: 1 });\n        element.setStyle({ position: 'relative' });\n        var value = proceed(element);\n        element.setStyle({ position: position });\n        return value;\n      }\n    );\n  });\n\n  Element.Methods.cumulativeOffset = Element.Methods.cumulativeOffset.wrap(\n    function(proceed, element) {\n      try { element.offsetParent }\n      catch(e) { return Element._returnOffset(0,0) }\n      return proceed(element);\n    }\n  );\n\n  Element.Methods.getStyle = function(element, style) {\n    element = $(element);\n    style = (style == 'float' || style == 'cssFloat') ? 'styleFloat' : style.camelize();\n    var value = element.style[style];\n    if (!value && element.currentStyle) value = element.currentStyle[style];\n\n    if (style == 'opacity') {\n      if (value = (element.getStyle('filter') || '').match(/alpha\\(opacity=(.*)\\)/))\n        if (value[1]) return parseFloat(value[1]) / 100;\n      return 1.0;\n    }\n\n    if (value == 'auto') {\n      if ((style == 'width' || style == 'height') && (element.getStyle('display') != 'none'))\n        return element['offset' + style.capitalize()] + 'px';\n      return null;\n    }\n    return value;\n  };\n\n  Element.Methods.setOpacity = function(element, value) {\n    function stripAlpha(filter){\n      return filter.replace(/alpha\\([^\\)]*\\)/gi,'');\n    }\n    element = $(element);\n    var currentStyle = element.currentStyle;\n    if ((currentStyle && !currentStyle.hasLayout) ||\n      (!currentStyle && element.style.zoom == 'normal'))\n        element.style.zoom = 1;\n\n    var filter = element.getStyle('filter'), style = element.style;\n    if (value == 1 || value === '') {\n      (filter = stripAlpha(filter)) ?\n        style.filter = filter : style.removeAttribute('filter');\n      return element;\n    } else if (value < 0.00001) value = 0;\n    style.filter = stripAlpha(filter) +\n      'alpha(opacity=' + (value * 100) + ')';\n    return element;\n  };\n\n  Element._attributeTranslations = (function(){\n\n    var classProp = 'className';\n    var forProp = 'for';\n\n    var el = document.createElement('div');\n\n    el.setAttribute(classProp, 'x');\n\n    if (el.className !== 'x') {\n      el.setAttribute('class', 'x');\n      if (el.className === 'x') {\n        classProp = 'class';\n      }\n    }\n    el = null;\n\n    el = document.createElement('label');\n    el.setAttribute(forProp, 'x');\n    if (el.htmlFor !== 'x') {\n      el.setAttribute('htmlFor', 'x');\n      if (el.htmlFor === 'x') {\n        forProp = 'htmlFor';\n      }\n    }\n    el = null;\n\n    return {\n      read: {\n        names: {\n          'class':      classProp,\n          'className':  classProp,\n          'for':        forProp,\n          'htmlFor':    forProp\n        },\n        values: {\n          _getAttr: function(element, attribute) {\n            return element.getAttribute(attribute);\n          },\n          _getAttr2: function(element, attribute) {\n            return element.getAttribute(attribute, 2);\n          },\n          _getAttrNode: function(element, attribute) {\n            var node = element.getAttributeNode(attribute);\n            return node ? node.value : \"\";\n          },\n          _getEv: (function(){\n\n            var el = document.createElement('div');\n            el.onclick = Prototype.emptyFunction;\n            var value = el.getAttribute('onclick');\n            var f;\n\n            if (String(value).indexOf('{') > -1) {\n              f = function(element, attribute) {\n                attribute = element.getAttribute(attribute);\n                if (!attribute) return null;\n                attribute = attribute.toString();\n                attribute = attribute.split('{')[1];\n                attribute = attribute.split('}')[0];\n                return attribute.strip();\n              };\n            }\n            else if (value === '') {\n              f = function(element, attribute) {\n                attribute = element.getAttribute(attribute);\n                if (!attribute) return null;\n                return attribute.strip();\n              };\n            }\n            el = null;\n            return f;\n          })(),\n          _flag: function(element, attribute) {\n            return $(element).hasAttribute(attribute) ? attribute : null;\n          },\n          style: function(element) {\n            return element.style.cssText.toLowerCase();\n          },\n          title: function(element) {\n            return element.title;\n          }\n        }\n      }\n    }\n  })();\n\n  Element._attributeTranslations.write = {\n    names: Object.extend({\n      cellpadding: 'cellPadding',\n      cellspacing: 'cellSpacing'\n    }, Element._attributeTranslations.read.names),\n    values: {\n      checked: function(element, value) {\n        element.checked = !!value;\n      },\n\n      style: function(element, value) {\n        element.style.cssText = value ? value : '';\n      }\n    }\n  };\n\n  Element._attributeTranslations.has = {};\n\n  $w('colSpan rowSpan vAlign dateTime accessKey tabIndex ' +\n      'encType maxLength readOnly longDesc frameBorder').each(function(attr) {\n    Element._attributeTranslations.write.names[attr.toLowerCase()] = attr;\n    Element._attributeTranslations.has[attr.toLowerCase()] = attr;\n  });\n\n  (function(v) {\n    Object.extend(v, {\n      href:        v._getAttr2,\n      src:         v._getAttr2,\n      type:        v._getAttr,\n      action:      v._getAttrNode,\n      disabled:    v._flag,\n      checked:     v._flag,\n      readonly:    v._flag,\n      multiple:    v._flag,\n      onload:      v._getEv,\n      onunload:    v._getEv,\n      onclick:     v._getEv,\n      ondblclick:  v._getEv,\n      onmousedown: v._getEv,\n      onmouseup:   v._getEv,\n      onmouseover: v._getEv,\n      onmousemove: v._getEv,\n      onmouseout:  v._getEv,\n      onfocus:     v._getEv,\n      onblur:      v._getEv,\n      onkeypress:  v._getEv,\n      onkeydown:   v._getEv,\n      onkeyup:     v._getEv,\n      onsubmit:    v._getEv,\n      onreset:     v._getEv,\n      onselect:    v._getEv,\n      onchange:    v._getEv\n    });\n  })(Element._attributeTranslations.read.values);\n\n  if (Prototype.BrowserFeatures.ElementExtensions) {\n    (function() {\n      function _descendants(element) {\n        var nodes = element.getElementsByTagName('*'), results = [];\n        for (var i = 0, node; node = nodes[i]; i++)\n          if (node.tagName !== \"!\") // Filter out comment nodes.\n            results.push(node);\n        return results;\n      }\n\n      Element.Methods.down = function(element, expression, index) {\n        element = $(element);\n        if (arguments.length == 1) return element.firstDescendant();\n        return Object.isNumber(expression) ? _descendants(element)[expression] :\n          Element.select(element, expression)[index || 0];\n      }\n    })();\n  }\n\n}\n\nelse if (Prototype.Browser.Gecko && /rv:1\\.8\\.0/.test(navigator.userAgent)) {\n  Element.Methods.setOpacity = function(element, value) {\n    element = $(element);\n    element.style.opacity = (value == 1) ? 0.999999 :\n      (value === '') ? '' : (value < 0.00001) ? 0 : value;\n    return element;\n  };\n}\n\nelse if (Prototype.Browser.WebKit) {\n  Element.Methods.setOpacity = function(element, value) {\n    element = $(element);\n    element.style.opacity = (value == 1 || value === '') ? '' :\n      (value < 0.00001) ? 0 : value;\n\n    if (value == 1)\n      if(element.tagName.toUpperCase() == 'IMG' && element.width) {\n        element.width++; element.width--;\n      } else try {\n        var n = document.createTextNode(' ');\n        element.appendChild(n);\n        element.removeChild(n);\n      } catch (e) { }\n\n    return element;\n  };\n\n  Element.Methods.cumulativeOffset = function(element) {\n    var valueT = 0, valueL = 0;\n    do {\n      valueT += element.offsetTop  || 0;\n      valueL += element.offsetLeft || 0;\n      if (element.offsetParent == document.body)\n        if (Element.getStyle(element, 'position') == 'absolute') break;\n\n      element = element.offsetParent;\n    } while (element);\n\n    return Element._returnOffset(valueL, valueT);\n  };\n}\n\nif ('outerHTML' in document.documentElement) {\n  Element.Methods.replace = function(element, content) {\n    element = $(element);\n\n    if (content && content.toElement) content = content.toElement();\n    if (Object.isElement(content)) {\n      element.parentNode.replaceChild(content, element);\n      return element;\n    }\n\n    content = Object.toHTML(content);\n    var parent = element.parentNode, tagName = parent.tagName.toUpperCase();\n\n    if (Element._insertionTranslations.tags[tagName]) {\n      var nextSibling = element.next();\n      var fragments = Element._getContentFromAnonymousElement(tagName, content.stripScripts());\n      parent.removeChild(element);\n      if (nextSibling)\n        fragments.each(function(node) { parent.insertBefore(node, nextSibling) });\n      else\n        fragments.each(function(node) { parent.appendChild(node) });\n    }\n    else element.outerHTML = content.stripScripts();\n\n    content.evalScripts.bind(content).defer();\n    return element;\n  };\n}\n\nElement._returnOffset = function(l, t) {\n  var result = [l, t];\n  result.left = l;\n  result.top = t;\n  return result;\n};\n\nElement._getContentFromAnonymousElement = function(tagName, html) {\n  var div = new Element('div'), t = Element._insertionTranslations.tags[tagName];\n  if (t) {\n    div.innerHTML = t[0] + html + t[1];\n    t[2].times(function() { div = div.firstChild });\n  } else div.innerHTML = html;\n  return $A(div.childNodes);\n};\n\nElement._insertionTranslations = {\n  before: function(element, node) {\n    element.parentNode.insertBefore(node, element);\n  },\n  top: function(element, node) {\n    element.insertBefore(node, element.firstChild);\n  },\n  bottom: function(element, node) {\n    element.appendChild(node);\n  },\n  after: function(element, node) {\n    element.parentNode.insertBefore(node, element.nextSibling);\n  },\n  tags: {\n    TABLE:  ['<table>',                '</table>',                   1],\n    TBODY:  ['<table><tbody>',         '</tbody></table>',           2],\n    TR:     ['<table><tbody><tr>',     '</tr></tbody></table>',      3],\n    TD:     ['<table><tbody><tr><td>', '</td></tr></tbody></table>', 4],\n    SELECT: ['<select>',               '</select>',                  1]\n  }\n};\n\n(function() {\n  var tags = Element._insertionTranslations.tags;\n  Object.extend(tags, {\n    THEAD: tags.TBODY,\n    TFOOT: tags.TBODY,\n    TH:    tags.TD\n  });\n})();\n\nElement.Methods.Simulated = {\n  hasAttribute: function(element, attribute) {\n    attribute = Element._attributeTranslations.has[attribute] || attribute;\n    var node = $(element).getAttributeNode(attribute);\n    return !!(node && node.specified);\n  }\n};\n\nElement.Methods.ByTag = { };\n\nObject.extend(Element, Element.Methods);\n\n(function(div) {\n\n  if (!Prototype.BrowserFeatures.ElementExtensions && div['__proto__']) {\n    window.HTMLElement = { };\n    window.HTMLElement.prototype = div['__proto__'];\n    Prototype.BrowserFeatures.ElementExtensions = true;\n  }\n\n  div = null;\n\n})(document.createElement('div'))\n\nElement.extend = (function() {\n\n  function checkDeficiency(tagName) {\n    if (typeof window.Element != 'undefined') {\n      var proto = window.Element.prototype;\n      if (proto) {\n        var id = '_' + (Math.random()+'').slice(2);\n        var el = document.createElement(tagName);\n        proto[id] = 'x';\n        var isBuggy = (el[id] !== 'x');\n        delete proto[id];\n        el = null;\n        return isBuggy;\n      }\n    }\n    return false;\n  }\n\n  function extendElementWith(element, methods) {\n    for (var property in methods) {\n      var value = methods[property];\n      if (Object.isFunction(value) && !(property in element))\n        element[property] = value.methodize();\n    }\n  }\n\n  var HTMLOBJECTELEMENT_PROTOTYPE_BUGGY = checkDeficiency('object');\n\n  if (Prototype.BrowserFeatures.SpecificElementExtensions) {\n    if (HTMLOBJECTELEMENT_PROTOTYPE_BUGGY) {\n      return function(element) {\n        if (element && typeof element._extendedByPrototype == 'undefined') {\n          var t = element.tagName;\n          if (t && (/^(?:object|applet|embed)$/i.test(t))) {\n            extendElementWith(element, Element.Methods);\n            extendElementWith(element, Element.Methods.Simulated);\n            extendElementWith(element, Element.Methods.ByTag[t.toUpperCase()]);\n          }\n        }\n        return element;\n      }\n    }\n    return Prototype.K;\n  }\n\n  var Methods = { }, ByTag = Element.Methods.ByTag;\n\n  var extend = Object.extend(function(element) {\n    if (!element || typeof element._extendedByPrototype != 'undefined' ||\n        element.nodeType != 1 || element == window) return element;\n\n    var methods = Object.clone(Methods),\n        tagName = element.tagName.toUpperCase();\n\n    if (ByTag[tagName]) Object.extend(methods, ByTag[tagName]);\n\n    extendElementWith(element, methods);\n\n    element._extendedByPrototype = Prototype.emptyFunction;\n    return element;\n\n  }, {\n    refresh: function() {\n      if (!Prototype.BrowserFeatures.ElementExtensions) {\n        Object.extend(Methods, Element.Methods);\n        Object.extend(Methods, Element.Methods.Simulated);\n      }\n    }\n  });\n\n  extend.refresh();\n  return extend;\n})();\n\nElement.hasAttribute = function(element, attribute) {\n  if (element.hasAttribute) return element.hasAttribute(attribute);\n  return Element.Methods.Simulated.hasAttribute(element, attribute);\n};\n\nElement.addMethods = function(methods) {\n  var F = Prototype.BrowserFeatures, T = Element.Methods.ByTag;\n\n  if (!methods) {\n    Object.extend(Form, Form.Methods);\n    Object.extend(Form.Element, Form.Element.Methods);\n    Object.extend(Element.Methods.ByTag, {\n      \"FORM\":     Object.clone(Form.Methods),\n      \"INPUT\":    Object.clone(Form.Element.Methods),\n      \"SELECT\":   Object.clone(Form.Element.Methods),\n      \"TEXTAREA\": Object.clone(Form.Element.Methods)\n    });\n  }\n\n  if (arguments.length == 2) {\n    var tagName = methods;\n    methods = arguments[1];\n  }\n\n  if (!tagName) Object.extend(Element.Methods, methods || { });\n  else {\n    if (Object.isArray(tagName)) tagName.each(extend);\n    else extend(tagName);\n  }\n\n  function extend(tagName) {\n    tagName = tagName.toUpperCase();\n    if (!Element.Methods.ByTag[tagName])\n      Element.Methods.ByTag[tagName] = { };\n    Object.extend(Element.Methods.ByTag[tagName], methods);\n  }\n\n  function copy(methods, destination, onlyIfAbsent) {\n    onlyIfAbsent = onlyIfAbsent || false;\n    for (var property in methods) {\n      var value = methods[property];\n      if (!Object.isFunction(value)) continue;\n      if (!onlyIfAbsent || !(property in destination))\n        destination[property] = value.methodize();\n    }\n  }\n\n  function findDOMClass(tagName) {\n    var klass;\n    var trans = {\n      \"OPTGROUP\": \"OptGroup\", \"TEXTAREA\": \"TextArea\", \"P\": \"Paragraph\",\n      \"FIELDSET\": \"FieldSet\", \"UL\": \"UList\", \"OL\": \"OList\", \"DL\": \"DList\",\n      \"DIR\": \"Directory\", \"H1\": \"Heading\", \"H2\": \"Heading\", \"H3\": \"Heading\",\n      \"H4\": \"Heading\", \"H5\": \"Heading\", \"H6\": \"Heading\", \"Q\": \"Quote\",\n      \"INS\": \"Mod\", \"DEL\": \"Mod\", \"A\": \"Anchor\", \"IMG\": \"Image\", \"CAPTION\":\n      \"TableCaption\", \"COL\": \"TableCol\", \"COLGROUP\": \"TableCol\", \"THEAD\":\n      \"TableSection\", \"TFOOT\": \"TableSection\", \"TBODY\": \"TableSection\", \"TR\":\n      \"TableRow\", \"TH\": \"TableCell\", \"TD\": \"TableCell\", \"FRAMESET\":\n      \"FrameSet\", \"IFRAME\": \"IFrame\"\n    };\n    if (trans[tagName]) klass = 'HTML' + trans[tagName] + 'Element';\n    if (window[klass]) return window[klass];\n    klass = 'HTML' + tagName + 'Element';\n    if (window[klass]) return window[klass];\n    klass = 'HTML' + tagName.capitalize() + 'Element';\n    if (window[klass]) return window[klass];\n\n    var element = document.createElement(tagName);\n    var proto = element['__proto__'] || element.constructor.prototype;\n    element = null;\n    return proto;\n  }\n\n  var elementPrototype = window.HTMLElement ? HTMLElement.prototype :\n   Element.prototype;\n\n  if (F.ElementExtensions) {\n    copy(Element.Methods, elementPrototype);\n    copy(Element.Methods.Simulated, elementPrototype, true);\n  }\n\n  if (F.SpecificElementExtensions) {\n    for (var tag in Element.Methods.ByTag) {\n      var klass = findDOMClass(tag);\n      if (Object.isUndefined(klass)) continue;\n      copy(T[tag], klass.prototype);\n    }\n  }\n\n  Object.extend(Element, Element.Methods);\n  delete Element.ByTag;\n\n  if (Element.extend.refresh) Element.extend.refresh();\n  Element.cache = { };\n};\n\n\ndocument.viewport = {\n\n  getDimensions: function() {\n    return { width: this.getWidth(), height: this.getHeight() };\n  },\n\n  getScrollOffsets: function() {\n    return Element._returnOffset(\n      window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft,\n      window.pageYOffset || document.documentElement.scrollTop  || document.body.scrollTop);\n  }\n};\n\n(function(viewport) {\n  var B = Prototype.Browser, doc = document, element, property = {};\n\n  function getRootElement() {\n    if (B.WebKit && !doc.evaluate)\n      return document;\n\n    if (B.Opera && window.parseFloat(window.opera.version()) < 9.5)\n      return document.body;\n\n    return document.documentElement;\n  }\n\n  function define(D) {\n    if (!element) element = getRootElement();\n\n    property[D] = 'client' + D;\n\n    viewport['get' + D] = function() { return element[property[D]] };\n    return viewport['get' + D]();\n  }\n\n  viewport.getWidth  = define.curry('Width');\n\n  viewport.getHeight = define.curry('Height');\n})(document.viewport);\n\n\nElement.Storage = {\n  UID: 1\n};\n\nElement.addMethods({\n  getStorage: function(element) {\n    if (!(element = $(element))) return;\n\n    var uid;\n    if (element === window) {\n      uid = 0;\n    } else {\n      if (typeof element._prototypeUID === \"undefined\")\n        element._prototypeUID = [Element.Storage.UID++];\n      uid = element._prototypeUID[0];\n    }\n\n    if (!Element.Storage[uid])\n      Element.Storage[uid] = $H();\n\n    return Element.Storage[uid];\n  },\n\n  store: function(element, key, value) {\n    if (!(element = $(element))) return;\n\n    if (arguments.length === 2) {\n      Element.getStorage(element).update(key);\n    } else {\n      Element.getStorage(element).set(key, value);\n    }\n\n    return element;\n  },\n\n  retrieve: function(element, key, defaultValue) {\n    if (!(element = $(element))) return;\n    var hash = Element.getStorage(element), value = hash.get(key);\n\n    if (Object.isUndefined(value)) {\n      hash.set(key, defaultValue);\n      value = defaultValue;\n    }\n\n    return value;\n  },\n\n  clone: function(element, deep) {\n    if (!(element = $(element))) return;\n    var clone = element.cloneNode(deep);\n    clone._prototypeUID = void 0;\n    if (deep) {\n      var descendants = Element.select(clone, '*'),\n          i = descendants.length;\n      while (i--) {\n        descendants[i]._prototypeUID = void 0;\n      }\n    }\n    return Element.extend(clone);\n  }\n});\n/* Portions of the Selector class are derived from Jack Slocum's DomQuery,\n * part of YUI-Ext version 0.40, distributed under the terms of an MIT-style\n * license.  Please see http://www.yui-ext.com/ for more information. */\n\nvar Selector = Class.create({\n  initialize: function(expression) {\n    this.expression = expression.strip();\n\n    if (this.shouldUseSelectorsAPI()) {\n      this.mode = 'selectorsAPI';\n    } else if (this.shouldUseXPath()) {\n      this.mode = 'xpath';\n      this.compileXPathMatcher();\n    } else {\n      this.mode = \"normal\";\n      this.compileMatcher();\n    }\n\n  },\n\n  shouldUseXPath: (function() {\n\n    var IS_DESCENDANT_SELECTOR_BUGGY = (function(){\n      var isBuggy = false;\n      if (document.evaluate && window.XPathResult) {\n        var el = document.createElement('div');\n        el.innerHTML = '<ul><li></li></ul><div><ul><li></li></ul></div>';\n\n        var xpath = \".//*[local-name()='ul' or local-name()='UL']\" +\n          \"//*[local-name()='li' or local-name()='LI']\";\n\n        var result = document.evaluate(xpath, el, null,\n          XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);\n\n        isBuggy = (result.snapshotLength !== 2);\n        el = null;\n      }\n      return isBuggy;\n    })();\n\n    return function() {\n      if (!Prototype.BrowserFeatures.XPath) return false;\n\n      var e = this.expression;\n\n      if (Prototype.Browser.WebKit &&\n       (e.include(\"-of-type\") || e.include(\":empty\")))\n        return false;\n\n      if ((/(\\[[\\w-]*?:|:checked)/).test(e))\n        return false;\n\n      if (IS_DESCENDANT_SELECTOR_BUGGY) return false;\n\n      return true;\n    }\n\n  })(),\n\n  shouldUseSelectorsAPI: function() {\n    if (!Prototype.BrowserFeatures.SelectorsAPI) return false;\n\n    if (Selector.CASE_INSENSITIVE_CLASS_NAMES) return false;\n\n    if (!Selector._div) Selector._div = new Element('div');\n\n    try {\n      Selector._div.querySelector(this.expression);\n    } catch(e) {\n      return false;\n    }\n\n    return true;\n  },\n\n  compileMatcher: function() {\n    var e = this.expression, ps = Selector.patterns, h = Selector.handlers,\n        c = Selector.criteria, le, p, m, len = ps.length, name;\n\n    if (Selector._cache[e]) {\n      this.matcher = Selector._cache[e];\n      return;\n    }\n\n    this.matcher = [\"this.matcher = function(root) {\",\n                    \"var r = root, h = Selector.handlers, c = false, n;\"];\n\n    while (e && le != e && (/\\S/).test(e)) {\n      le = e;\n      for (var i = 0; i<len; i++) {\n        p = ps[i].re;\n        name = ps[i].name;\n        if (m = e.match(p)) {\n          this.matcher.push(Object.isFunction(c[name]) ? c[name](m) :\n            new Template(c[name]).evaluate(m));\n          e = e.replace(m[0], '');\n          break;\n        }\n      }\n    }\n\n    this.matcher.push(\"return h.unique(n);\\n}\");\n    eval(this.matcher.join('\\n'));\n    Selector._cache[this.expression] = this.matcher;\n  },\n\n  compileXPathMatcher: function() {\n    var e = this.expression, ps = Selector.patterns,\n        x = Selector.xpath, le, m, len = ps.length, name;\n\n    if (Selector._cache[e]) {\n      this.xpath = Selector._cache[e]; return;\n    }\n\n    this.matcher = ['.//*'];\n    while (e && le != e && (/\\S/).test(e)) {\n      le = e;\n      for (var i = 0; i<len; i++) {\n        name = ps[i].name;\n        if (m = e.match(ps[i].re)) {\n          this.matcher.push(Object.isFunction(x[name]) ? x[name](m) :\n            new Template(x[name]).evaluate(m));\n          e = e.replace(m[0], '');\n          break;\n        }\n      }\n    }\n\n    this.xpath = this.matcher.join('');\n    Selector._cache[this.expression] = this.xpath;\n  },\n\n  findElements: function(root) {\n    root = root || document;\n    var e = this.expression, results;\n\n    switch (this.mode) {\n      case 'selectorsAPI':\n        if (root !== document) {\n          var oldId = root.id, id = $(root).identify();\n          id = id.replace(/([\\.:])/g, \"\\\\$1\");\n          e = \"#\" + id + \" \" + e;\n        }\n\n        results = $A(root.querySelectorAll(e)).map(Element.extend);\n        root.id = oldId;\n\n        return results;\n      case 'xpath':\n        return document._getElementsByXPath(this.xpath, root);\n      default:\n       return this.matcher(root);\n    }\n  },\n\n  match: function(element) {\n    this.tokens = [];\n\n    var e = this.expression, ps = Selector.patterns, as = Selector.assertions;\n    var le, p, m, len = ps.length, name;\n\n    while (e && le !== e && (/\\S/).test(e)) {\n      le = e;\n      for (var i = 0; i<len; i++) {\n        p = ps[i].re;\n        name = ps[i].name;\n        if (m = e.match(p)) {\n          if (as[name]) {\n            this.tokens.push([name, Object.clone(m)]);\n            e = e.replace(m[0], '');\n          } else {\n            return this.findElements(document).include(element);\n          }\n        }\n      }\n    }\n\n    var match = true, name, matches;\n    for (var i = 0, token; token = this.tokens[i]; i++) {\n      name = token[0], matches = token[1];\n      if (!Selector.assertions[name](element, matches)) {\n        match = false; break;\n      }\n    }\n\n    return match;\n  },\n\n  toString: function() {\n    return this.expression;\n  },\n\n  inspect: function() {\n    return \"#<Selector:\" + this.expression.inspect() + \">\";\n  }\n});\n\nif (Prototype.BrowserFeatures.SelectorsAPI &&\n document.compatMode === 'BackCompat') {\n  Selector.CASE_INSENSITIVE_CLASS_NAMES = (function(){\n    var div = document.createElement('div'),\n     span = document.createElement('span');\n\n    div.id = \"prototype_test_id\";\n    span.className = 'Test';\n    div.appendChild(span);\n    var isIgnored = (div.querySelector('#prototype_test_id .test') !== null);\n    div = span = null;\n    return isIgnored;\n  })();\n}\n\nObject.extend(Selector, {\n  _cache: { },\n\n  xpath: {\n    descendant:   \"//*\",\n    child:        \"/*\",\n    adjacent:     \"/following-sibling::*[1]\",\n    laterSibling: '/following-sibling::*',\n    tagName:      function(m) {\n      if (m[1] == '*') return '';\n      return \"[local-name()='\" + m[1].toLowerCase() +\n             \"' or local-name()='\" + m[1].toUpperCase() + \"']\";\n    },\n    className:    \"[contains(concat(' ', @class, ' '), ' #{1} ')]\",\n    id:           \"[@id='#{1}']\",\n    attrPresence: function(m) {\n      m[1] = m[1].toLowerCase();\n      return new Template(\"[@#{1}]\").evaluate(m);\n    },\n    attr: function(m) {\n      m[1] = m[1].toLowerCase();\n      m[3] = m[5] || m[6];\n      return new Template(Selector.xpath.operators[m[2]]).evaluate(m);\n    },\n    pseudo: function(m) {\n      var h = Selector.xpath.pseudos[m[1]];\n      if (!h) return '';\n      if (Object.isFunction(h)) return h(m);\n      return new Template(Selector.xpath.pseudos[m[1]]).evaluate(m);\n    },\n    operators: {\n      '=':  \"[@#{1}='#{3}']\",\n      '!=': \"[@#{1}!='#{3}']\",\n      '^=': \"[starts-with(@#{1}, '#{3}')]\",\n      '$=': \"[substring(@#{1}, (string-length(@#{1}) - string-length('#{3}') + 1))='#{3}']\",\n      '*=': \"[contains(@#{1}, '#{3}')]\",\n      '~=': \"[contains(concat(' ', @#{1}, ' '), ' #{3} ')]\",\n      '|=': \"[contains(concat('-', @#{1}, '-'), '-#{3}-')]\"\n    },\n    pseudos: {\n      'first-child': '[not(preceding-sibling::*)]',\n      'last-child':  '[not(following-sibling::*)]',\n      'only-child':  '[not(preceding-sibling::* or following-sibling::*)]',\n      'empty':       \"[count(*) = 0 and (count(text()) = 0)]\",\n      'checked':     \"[@checked]\",\n      'disabled':    \"[(@disabled) and (@type!='hidden')]\",\n      'enabled':     \"[not(@disabled) and (@type!='hidden')]\",\n      'not': function(m) {\n        var e = m[6], p = Selector.patterns,\n            x = Selector.xpath, le, v, len = p.length, name;\n\n        var exclusion = [];\n        while (e && le != e && (/\\S/).test(e)) {\n          le = e;\n          for (var i = 0; i<len; i++) {\n            name = p[i].name\n            if (m = e.match(p[i].re)) {\n              v = Object.isFunction(x[name]) ? x[name](m) : new Template(x[name]).evaluate(m);\n              exclusion.push(\"(\" + v.substring(1, v.length - 1) + \")\");\n              e = e.replace(m[0], '');\n              break;\n            }\n          }\n        }\n        return \"[not(\" + exclusion.join(\" and \") + \")]\";\n      },\n      'nth-child':      function(m) {\n        return Selector.xpath.pseudos.nth(\"(count(./preceding-sibling::*) + 1) \", m);\n      },\n      'nth-last-child': function(m) {\n        return Selector.xpath.pseudos.nth(\"(count(./following-sibling::*) + 1) \", m);\n      },\n      'nth-of-type':    function(m) {\n        return Selector.xpath.pseudos.nth(\"position() \", m);\n      },\n      'nth-last-of-type': function(m) {\n        return Selector.xpath.pseudos.nth(\"(last() + 1 - position()) \", m);\n      },\n      'first-of-type':  function(m) {\n        m[6] = \"1\"; return Selector.xpath.pseudos['nth-of-type'](m);\n      },\n      'last-of-type':   function(m) {\n        m[6] = \"1\"; return Selector.xpath.pseudos['nth-last-of-type'](m);\n      },\n      'only-of-type':   function(m) {\n        var p = Selector.xpath.pseudos; return p['first-of-type'](m) + p['last-of-type'](m);\n      },\n      nth: function(fragment, m) {\n        var mm, formula = m[6], predicate;\n        if (formula == 'even') formula = '2n+0';\n        if (formula == 'odd')  formula = '2n+1';\n        if (mm = formula.match(/^(\\d+)$/)) // digit only\n          return '[' + fragment + \"= \" + mm[1] + ']';\n        if (mm = formula.match(/^(-?\\d*)?n(([+-])(\\d+))?/)) { // an+b\n          if (mm[1] == \"-\") mm[1] = -1;\n          var a = mm[1] ? Number(mm[1]) : 1;\n          var b = mm[2] ? Number(mm[2]) : 0;\n          predicate = \"[((#{fragment} - #{b}) mod #{a} = 0) and \" +\n          \"((#{fragment} - #{b}) div #{a} >= 0)]\";\n          return new Template(predicate).evaluate({\n            fragment: fragment, a: a, b: b });\n        }\n      }\n    }\n  },\n\n  criteria: {\n    tagName:      'n = h.tagName(n, r, \"#{1}\", c);      c = false;',\n    className:    'n = h.className(n, r, \"#{1}\", c);    c = false;',\n    id:           'n = h.id(n, r, \"#{1}\", c);           c = false;',\n    attrPresence: 'n = h.attrPresence(n, r, \"#{1}\", c); c = false;',\n    attr: function(m) {\n      m[3] = (m[5] || m[6]);\n      return new Template('n = h.attr(n, r, \"#{1}\", \"#{3}\", \"#{2}\", c); c = false;').evaluate(m);\n    },\n    pseudo: function(m) {\n      if (m[6]) m[6] = m[6].replace(/\"/g, '\\\\\"');\n      return new Template('n = h.pseudo(n, \"#{1}\", \"#{6}\", r, c); c = false;').evaluate(m);\n    },\n    descendant:   'c = \"descendant\";',\n    child:        'c = \"child\";',\n    adjacent:     'c = \"adjacent\";',\n    laterSibling: 'c = \"laterSibling\";'\n  },\n\n  patterns: [\n    { name: 'laterSibling', re: /^\\s*~\\s*/ },\n    { name: 'child',        re: /^\\s*>\\s*/ },\n    { name: 'adjacent',     re: /^\\s*\\+\\s*/ },\n    { name: 'descendant',   re: /^\\s/ },\n\n    { name: 'tagName',      re: /^\\s*(\\*|[\\w\\-]+)(\\b|$)?/ },\n    { name: 'id',           re: /^#([\\w\\-\\*]+)(\\b|$)/ },\n    { name: 'className',    re: /^\\.([\\w\\-\\*]+)(\\b|$)/ },\n    { name: 'pseudo',       re: /^:((first|last|nth|nth-last|only)(-child|-of-type)|empty|checked|(en|dis)abled|not)(\\((.*?)\\))?(\\b|$|(?=\\s|[:+~>]))/ },\n    { name: 'attrPresence', re: /^\\[((?:[\\w-]+:)?[\\w-]+)\\]/ },\n    { name: 'attr',         re: /\\[((?:[\\w-]*:)?[\\w-]+)\\s*(?:([!^$*~|]?=)\\s*((['\"])([^\\4]*?)\\4|([^'\"][^\\]]*?)))?\\]/ }\n  ],\n\n  assertions: {\n    tagName: function(element, matches) {\n      return matches[1].toUpperCase() == element.tagName.toUpperCase();\n    },\n\n    className: function(element, matches) {\n      return Element.hasClassName(element, matches[1]);\n    },\n\n    id: function(element, matches) {\n      return element.id === matches[1];\n    },\n\n    attrPresence: function(element, matches) {\n      return Element.hasAttribute(element, matches[1]);\n    },\n\n    attr: function(element, matches) {\n      var nodeValue = Element.readAttribute(element, matches[1]);\n      return nodeValue && Selector.operators[matches[2]](nodeValue, matches[5] || matches[6]);\n    }\n  },\n\n  handlers: {\n    concat: function(a, b) {\n      for (var i = 0, node; node = b[i]; i++)\n        a.push(node);\n      return a;\n    },\n\n    mark: function(nodes) {\n      var _true = Prototype.emptyFunction;\n      for (var i = 0, node; node = nodes[i]; i++)\n        node._countedByPrototype = _true;\n      return nodes;\n    },\n\n    unmark: (function(){\n\n      var PROPERTIES_ATTRIBUTES_MAP = (function(){\n        var el = document.createElement('div'),\n            isBuggy = false,\n            propName = '_countedByPrototype',\n            value = 'x'\n        el[propName] = value;\n        isBuggy = (el.getAttribute(propName) === value);\n        el = null;\n        return isBuggy;\n      })();\n\n      return PROPERTIES_ATTRIBUTES_MAP ?\n        function(nodes) {\n          for (var i = 0, node; node = nodes[i]; i++)\n            node.removeAttribute('_countedByPrototype');\n          return nodes;\n        } :\n        function(nodes) {\n          for (var i = 0, node; node = nodes[i]; i++)\n            node._countedByPrototype = void 0;\n          return nodes;\n        }\n    })(),\n\n    index: function(parentNode, reverse, ofType) {\n      parentNode._countedByPrototype = Prototype.emptyFunction;\n      if (reverse) {\n        for (var nodes = parentNode.childNodes, i = nodes.length - 1, j = 1; i >= 0; i--) {\n          var node = nodes[i];\n          if (node.nodeType == 1 && (!ofType || node._countedByPrototype)) node.nodeIndex = j++;\n        }\n      } else {\n        for (var i = 0, j = 1, nodes = parentNode.childNodes; node = nodes[i]; i++)\n          if (node.nodeType == 1 && (!ofType || node._countedByPrototype)) node.nodeIndex = j++;\n      }\n    },\n\n    unique: function(nodes) {\n      if (nodes.length == 0) return nodes;\n      var results = [], n;\n      for (var i = 0, l = nodes.length; i < l; i++)\n        if (typeof (n = nodes[i])._countedByPrototype == 'undefined') {\n          n._countedByPrototype = Prototype.emptyFunction;\n          results.push(Element.extend(n));\n        }\n      return Selector.handlers.unmark(results);\n    },\n\n    descendant: function(nodes) {\n      var h = Selector.handlers;\n      for (var i = 0, results = [], node; node = nodes[i]; i++)\n        h.concat(results, node.getElementsByTagName('*'));\n      return results;\n    },\n\n    child: function(nodes) {\n      var h = Selector.handlers;\n      for (var i = 0, results = [], node; node = nodes[i]; i++) {\n        for (var j = 0, child; child = node.childNodes[j]; j++)\n          if (child.nodeType == 1 && child.tagName != '!') results.push(child);\n      }\n      return results;\n    },\n\n    adjacent: function(nodes) {\n      for (var i = 0, results = [], node; node = nodes[i]; i++) {\n        var next = this.nextElementSibling(node);\n        if (next) results.push(next);\n      }\n      return results;\n    },\n\n    laterSibling: function(nodes) {\n      var h = Selector.handlers;\n      for (var i = 0, results = [], node; node = nodes[i]; i++)\n        h.concat(results, Element.nextSiblings(node));\n      return results;\n    },\n\n    nextElementSibling: function(node) {\n      while (node = node.nextSibling)\n        if (node.nodeType == 1) return node;\n      return null;\n    },\n\n    previousElementSibling: function(node) {\n      while (node = node.previousSibling)\n        if (node.nodeType == 1) return node;\n      return null;\n    },\n\n    tagName: function(nodes, root, tagName, combinator) {\n      var uTagName = tagName.toUpperCase();\n      var results = [], h = Selector.handlers;\n      if (nodes) {\n        if (combinator) {\n          if (combinator == \"descendant\") {\n            for (var i = 0, node; node = nodes[i]; i++)\n              h.concat(results, node.getElementsByTagName(tagName));\n            return results;\n          } else nodes = this[combinator](nodes);\n          if (tagName == \"*\") return nodes;\n        }\n        for (var i = 0, node; node = nodes[i]; i++)\n          if (node.tagName.toUpperCase() === uTagName) results.push(node);\n        return results;\n      } else return root.getElementsByTagName(tagName);\n    },\n\n    id: function(nodes, root, id, combinator) {\n      var targetNode = $(id), h = Selector.handlers;\n\n      if (root == document) {\n        if (!targetNode) return [];\n        if (!nodes) return [targetNode];\n      } else {\n        if (!root.sourceIndex || root.sourceIndex < 1) {\n          var nodes = root.getElementsByTagName('*');\n          for (var j = 0, node; node = nodes[j]; j++) {\n            if (node.id === id) return [node];\n          }\n        }\n      }\n\n      if (nodes) {\n        if (combinator) {\n          if (combinator == 'child') {\n            for (var i = 0, node; node = nodes[i]; i++)\n              if (targetNode.parentNode == node) return [targetNode];\n          } else if (combinator == 'descendant') {\n            for (var i = 0, node; node = nodes[i]; i++)\n              if (Element.descendantOf(targetNode, node)) return [targetNode];\n          } else if (combinator == 'adjacent') {\n            for (var i = 0, node; node = nodes[i]; i++)\n              if (Selector.handlers.previousElementSibling(targetNode) == node)\n                return [targetNode];\n          } else nodes = h[combinator](nodes);\n        }\n        for (var i = 0, node; node = nodes[i]; i++)\n          if (node == targetNode) return [targetNode];\n        return [];\n      }\n      return (targetNode && Element.descendantOf(targetNode, root)) ? [targetNode] : [];\n    },\n\n    className: function(nodes, root, className, combinator) {\n      if (nodes && combinator) nodes = this[combinator](nodes);\n      return Selector.handlers.byClassName(nodes, root, className);\n    },\n\n    byClassName: function(nodes, root, className) {\n      if (!nodes) nodes = Selector.handlers.descendant([root]);\n      var needle = ' ' + className + ' ';\n      for (var i = 0, results = [], node, nodeClassName; node = nodes[i]; i++) {\n        nodeClassName = node.className;\n        if (nodeClassName.length == 0) continue;\n        if (nodeClassName == className || (' ' + nodeClassName + ' ').include(needle))\n          results.push(node);\n      }\n      return results;\n    },\n\n    attrPresence: function(nodes, root, attr, combinator) {\n      if (!nodes) nodes = root.getElementsByTagName(\"*\");\n      if (nodes && combinator) nodes = this[combinator](nodes);\n      var results = [];\n      for (var i = 0, node; node = nodes[i]; i++)\n        if (Element.hasAttribute(node, attr)) results.push(node);\n      return results;\n    },\n\n    attr: function(nodes, root, attr, value, operator, combinator) {\n      if (!nodes) nodes = root.getElementsByTagName(\"*\");\n      if (nodes && combinator) nodes = this[combinator](nodes);\n      var handler = Selector.operators[operator], results = [];\n      for (var i = 0, node; node = nodes[i]; i++) {\n        var nodeValue = Element.readAttribute(node, attr);\n        if (nodeValue === null) continue;\n        if (handler(nodeValue, value)) results.push(node);\n      }\n      return results;\n    },\n\n    pseudo: function(nodes, name, value, root, combinator) {\n      if (nodes && combinator) nodes = this[combinator](nodes);\n      if (!nodes) nodes = root.getElementsByTagName(\"*\");\n      return Selector.pseudos[name](nodes, value, root);\n    }\n  },\n\n  pseudos: {\n    'first-child': function(nodes, value, root) {\n      for (var i = 0, results = [], node; node = nodes[i]; i++) {\n        if (Selector.handlers.previousElementSibling(node)) continue;\n          results.push(node);\n      }\n      return results;\n    },\n    'last-child': function(nodes, value, root) {\n      for (var i = 0, results = [], node; node = nodes[i]; i++) {\n        if (Selector.handlers.nextElementSibling(node)) continue;\n          results.push(node);\n      }\n      return results;\n    },\n    'only-child': function(nodes, value, root) {\n      var h = Selector.handlers;\n      for (var i = 0, results = [], node; node = nodes[i]; i++)\n        if (!h.previousElementSibling(node) && !h.nextElementSibling(node))\n          results.push(node);\n      return results;\n    },\n    'nth-child':        function(nodes, formula, root) {\n      return Selector.pseudos.nth(nodes, formula, root);\n    },\n    'nth-last-child':   function(nodes, formula, root) {\n      return Selector.pseudos.nth(nodes, formula, root, true);\n    },\n    'nth-of-type':      function(nodes, formula, root) {\n      return Selector.pseudos.nth(nodes, formula, root, false, true);\n    },\n    'nth-last-of-type': function(nodes, formula, root) {\n      return Selector.pseudos.nth(nodes, formula, root, true, true);\n    },\n    'first-of-type':    function(nodes, formula, root) {\n      return Selector.pseudos.nth(nodes, \"1\", root, false, true);\n    },\n    'last-of-type':     function(nodes, formula, root) {\n      return Selector.pseudos.nth(nodes, \"1\", root, true, true);\n    },\n    'only-of-type':     function(nodes, formula, root) {\n      var p = Selector.pseudos;\n      return p['last-of-type'](p['first-of-type'](nodes, formula, root), formula, root);\n    },\n\n    getIndices: function(a, b, total) {\n      if (a == 0) return b > 0 ? [b] : [];\n      return $R(1, total).inject([], function(memo, i) {\n        if (0 == (i - b) % a && (i - b) / a >= 0) memo.push(i);\n        return memo;\n      });\n    },\n\n    nth: function(nodes, formula, root, reverse, ofType) {\n      if (nodes.length == 0) return [];\n      if (formula == 'even') formula = '2n+0';\n      if (formula == 'odd')  formula = '2n+1';\n      var h = Selector.handlers, results = [], indexed = [], m;\n      h.mark(nodes);\n      for (var i = 0, node; node = nodes[i]; i++) {\n        if (!node.parentNode._countedByPrototype) {\n          h.index(node.parentNode, reverse, ofType);\n          indexed.push(node.parentNode);\n        }\n      }\n      if (formula.match(/^\\d+$/)) { // just a number\n        formula = Number(formula);\n        for (var i = 0, node; node = nodes[i]; i++)\n          if (node.nodeIndex == formula) results.push(node);\n      } else if (m = formula.match(/^(-?\\d*)?n(([+-])(\\d+))?/)) { // an+b\n        if (m[1] == \"-\") m[1] = -1;\n        var a = m[1] ? Number(m[1]) : 1;\n        var b = m[2] ? Number(m[2]) : 0;\n        var indices = Selector.pseudos.getIndices(a, b, nodes.length);\n        for (var i = 0, node, l = indices.length; node = nodes[i]; i++) {\n          for (var j = 0; j < l; j++)\n            if (node.nodeIndex == indices[j]) results.push(node);\n        }\n      }\n      h.unmark(nodes);\n      h.unmark(indexed);\n      return results;\n    },\n\n    'empty': function(nodes, value, root) {\n      for (var i = 0, results = [], node; node = nodes[i]; i++) {\n        if (node.tagName == '!' || node.firstChild) continue;\n        results.push(node);\n      }\n      return results;\n    },\n\n    'not': function(nodes, selector, root) {\n      var h = Selector.handlers, selectorType, m;\n      var exclusions = new Selector(selector).findElements(root);\n      h.mark(exclusions);\n      for (var i = 0, results = [], node; node = nodes[i]; i++)\n        if (!node._countedByPrototype) results.push(node);\n      h.unmark(exclusions);\n      return results;\n    },\n\n    'enabled': function(nodes, value, root) {\n      for (var i = 0, results = [], node; node = nodes[i]; i++)\n        if (!node.disabled && (!node.type || node.type !== 'hidden'))\n          results.push(node);\n      return results;\n    },\n\n    'disabled': function(nodes, value, root) {\n      for (var i = 0, results = [], node; node = nodes[i]; i++)\n        if (node.disabled) results.push(node);\n      return results;\n    },\n\n    'checked': function(nodes, value, root) {\n      for (var i = 0, results = [], node; node = nodes[i]; i++)\n        if (node.checked) results.push(node);\n      return results;\n    }\n  },\n\n  operators: {\n    '=':  function(nv, v) { return nv == v; },\n    '!=': function(nv, v) { return nv != v; },\n    '^=': function(nv, v) { return nv == v || nv && nv.startsWith(v); },\n    '$=': function(nv, v) { return nv == v || nv && nv.endsWith(v); },\n    '*=': function(nv, v) { return nv == v || nv && nv.include(v); },\n    '~=': function(nv, v) { return (' ' + nv + ' ').include(' ' + v + ' '); },\n    '|=': function(nv, v) { return ('-' + (nv || \"\").toUpperCase() +\n     '-').include('-' + (v || \"\").toUpperCase() + '-'); }\n  },\n\n  split: function(expression) {\n    var expressions = [];\n    expression.scan(/(([\\w#:.~>+()\\s-]+|\\*|\\[.*?\\])+)\\s*(,|$)/, function(m) {\n      expressions.push(m[1].strip());\n    });\n    return expressions;\n  },\n\n  matchElements: function(elements, expression) {\n    var matches = $$(expression), h = Selector.handlers;\n    h.mark(matches);\n    for (var i = 0, results = [], element; element = elements[i]; i++)\n      if (element._countedByPrototype) results.push(element);\n    h.unmark(matches);\n    return results;\n  },\n\n  findElement: function(elements, expression, index) {\n    if (Object.isNumber(expression)) {\n      index = expression; expression = false;\n    }\n    return Selector.matchElements(elements, expression || '*')[index || 0];\n  },\n\n  findChildElements: function(element, expressions) {\n    expressions = Selector.split(expressions.join(','));\n    var results = [], h = Selector.handlers;\n    for (var i = 0, l = expressions.length, selector; i < l; i++) {\n      selector = new Selector(expressions[i].strip());\n      h.concat(results, selector.findElements(element));\n    }\n    return (l > 1) ? h.unique(results) : results;\n  }\n});\n\nif (Prototype.Browser.IE) {\n  Object.extend(Selector.handlers, {\n    concat: function(a, b) {\n      for (var i = 0, node; node = b[i]; i++)\n        if (node.tagName !== \"!\") a.push(node);\n      return a;\n    }\n  });\n}\n\nfunction $$() {\n  return Selector.findChildElements(document, $A(arguments));\n}\n\nvar Form = {\n  reset: function(form) {\n    form = $(form);\n    form.reset();\n    return form;\n  },\n\n  serializeElements: function(elements, options) {\n    if (typeof options != 'object') options = { hash: !!options };\n    else if (Object.isUndefined(options.hash)) options.hash = true;\n    var key, value, submitted = false, submit = options.submit;\n\n    var data = elements.inject({ }, function(result, element) {\n      if (!element.disabled && element.name) {\n        key = element.name; value = $(element).getValue();\n        if (value != null && element.type != 'file' && (element.type != 'submit' || (!submitted &&\n            submit !== false && (!submit || key == submit) && (submitted = true)))) {\n          if (key in result) {\n            if (!Object.isArray(result[key])) result[key] = [result[key]];\n            result[key].push(value);\n          }\n          else result[key] = value;\n        }\n      }\n      return result;\n    });\n\n    return options.hash ? data : Object.toQueryString(data);\n  }\n};\n\nForm.Methods = {\n  serialize: function(form, options) {\n    return Form.serializeElements(Form.getElements(form), options);\n  },\n\n  getElements: function(form) {\n    var elements = $(form).getElementsByTagName('*'),\n        element,\n        arr = [ ],\n        serializers = Form.Element.Serializers;\n    for (var i = 0; element = elements[i]; i++) {\n      arr.push(element);\n    }\n    return arr.inject([], function(elements, child) {\n      if (serializers[child.tagName.toLowerCase()])\n        elements.push(Element.extend(child));\n      return elements;\n    })\n  },\n\n  getInputs: function(form, typeName, name) {\n    form = $(form);\n    var inputs = form.getElementsByTagName('input');\n\n    if (!typeName && !name) return $A(inputs).map(Element.extend);\n\n    for (var i = 0, matchingInputs = [], length = inputs.length; i < length; i++) {\n      var input = inputs[i];\n      if ((typeName && input.type != typeName) || (name && input.name != name))\n        continue;\n      matchingInputs.push(Element.extend(input));\n    }\n\n    return matchingInputs;\n  },\n\n  disable: function(form) {\n    form = $(form);\n    Form.getElements(form).invoke('disable');\n    return form;\n  },\n\n  enable: function(form) {\n    form = $(form);\n    Form.getElements(form).invoke('enable');\n    return form;\n  },\n\n  findFirstElement: function(form) {\n    var elements = $(form).getElements().findAll(function(element) {\n      return 'hidden' != element.type && !element.disabled;\n    });\n    var firstByIndex = elements.findAll(function(element) {\n      return element.hasAttribute('tabIndex') && element.tabIndex >= 0;\n    }).sortBy(function(element) { return element.tabIndex }).first();\n\n    return firstByIndex ? firstByIndex : elements.find(function(element) {\n      return /^(?:input|select|textarea)$/i.test(element.tagName);\n    });\n  },\n\n  focusFirstElement: function(form) {\n    form = $(form);\n    form.findFirstElement().activate();\n    return form;\n  },\n\n  request: function(form, options) {\n    form = $(form), options = Object.clone(options || { });\n\n    var params = options.parameters, action = form.readAttribute('action') || '';\n    if (action.blank()) action = window.location.href;\n    options.parameters = form.serialize(true);\n\n    if (params) {\n      if (Object.isString(params)) params = params.toQueryParams();\n      Object.extend(options.parameters, params);\n    }\n\n    if (form.hasAttribute('method') && !options.method)\n      options.method = form.method;\n\n    return new Ajax.Request(action, options);\n  }\n};\n\n/*--------------------------------------------------------------------------*/\n\n\nForm.Element = {\n  focus: function(element) {\n    $(element).focus();\n    return element;\n  },\n\n  select: function(element) {\n    $(element).select();\n    return element;\n  }\n};\n\nForm.Element.Methods = {\n\n  serialize: function(element) {\n    element = $(element);\n    if (!element.disabled && element.name) {\n      var value = element.getValue();\n      if (value != undefined) {\n        var pair = { };\n        pair[element.name] = value;\n        return Object.toQueryString(pair);\n      }\n    }\n    return '';\n  },\n\n  getValue: function(element) {\n    element = $(element);\n    var method = element.tagName.toLowerCase();\n    return Form.Element.Serializers[method](element);\n  },\n\n  setValue: function(element, value) {\n    element = $(element);\n    var method = element.tagName.toLowerCase();\n    Form.Element.Serializers[method](element, value);\n    return element;\n  },\n\n  clear: function(element) {\n    $(element).value = '';\n    return element;\n  },\n\n  present: function(element) {\n    return $(element).value != '';\n  },\n\n  activate: function(element) {\n    element = $(element);\n    try {\n      element.focus();\n      if (element.select && (element.tagName.toLowerCase() != 'input' ||\n          !(/^(?:button|reset|submit)$/i.test(element.type))))\n        element.select();\n    } catch (e) { }\n    return element;\n  },\n\n  disable: function(element) {\n    element = $(element);\n    element.disabled = true;\n    return element;\n  },\n\n  enable: function(element) {\n    element = $(element);\n    element.disabled = false;\n    return element;\n  }\n};\n\n/*--------------------------------------------------------------------------*/\n\nvar Field = Form.Element;\n\nvar $F = Form.Element.Methods.getValue;\n\n/*--------------------------------------------------------------------------*/\n\nForm.Element.Serializers = {\n  input: function(element, value) {\n    switch (element.type.toLowerCase()) {\n      case 'checkbox':\n      case 'radio':\n        return Form.Element.Serializers.inputSelector(element, value);\n      default:\n        return Form.Element.Serializers.textarea(element, value);\n    }\n  },\n\n  inputSelector: function(element, value) {\n    if (Object.isUndefined(value)) return element.checked ? element.value : null;\n    else element.checked = !!value;\n  },\n\n  textarea: function(element, value) {\n    if (Object.isUndefined(value)) return element.value;\n    else element.value = value;\n  },\n\n  select: function(element, value) {\n    if (Object.isUndefined(value))\n      return this[element.type == 'select-one' ?\n        'selectOne' : 'selectMany'](element);\n    else {\n      var opt, currentValue, single = !Object.isArray(value);\n      for (var i = 0, length = element.length; i < length; i++) {\n        opt = element.options[i];\n        currentValue = this.optionValue(opt);\n        if (single) {\n          if (currentValue == value) {\n            opt.selected = true;\n            return;\n          }\n        }\n        else opt.selected = value.include(currentValue);\n      }\n    }\n  },\n\n  selectOne: function(element) {\n    var index = element.selectedIndex;\n    return index >= 0 ? this.optionValue(element.options[index]) : null;\n  },\n\n  selectMany: function(element) {\n    var values, length = element.length;\n    if (!length) return null;\n\n    for (var i = 0, values = []; i < length; i++) {\n      var opt = element.options[i];\n      if (opt.selected) values.push(this.optionValue(opt));\n    }\n    return values;\n  },\n\n  optionValue: function(opt) {\n    return Element.extend(opt).hasAttribute('value') ? opt.value : opt.text;\n  }\n};\n\n/*--------------------------------------------------------------------------*/\n\n\nAbstract.TimedObserver = Class.create(PeriodicalExecuter, {\n  initialize: function($super, element, frequency, callback) {\n    $super(callback, frequency);\n    this.element   = $(element);\n    this.lastValue = this.getValue();\n  },\n\n  execute: function() {\n    var value = this.getValue();\n    if (Object.isString(this.lastValue) && Object.isString(value) ?\n        this.lastValue != value : String(this.lastValue) != String(value)) {\n      this.callback(this.element, value);\n      this.lastValue = value;\n    }\n  }\n});\n\nForm.Element.Observer = Class.create(Abstract.TimedObserver, {\n  getValue: function() {\n    return Form.Element.getValue(this.element);\n  }\n});\n\nForm.Observer = Class.create(Abstract.TimedObserver, {\n  getValue: function() {\n    return Form.serialize(this.element);\n  }\n});\n\n/*--------------------------------------------------------------------------*/\n\nAbstract.EventObserver = Class.create({\n  initialize: function(element, callback) {\n    this.element  = $(element);\n    this.callback = callback;\n\n    this.lastValue = this.getValue();\n    if (this.element.tagName.toLowerCase() == 'form')\n      this.registerFormCallbacks();\n    else\n      this.registerCallback(this.element);\n  },\n\n  onElementEvent: function() {\n    var value = this.getValue();\n    if (this.lastValue != value) {\n      this.callback(this.element, value);\n      this.lastValue = value;\n    }\n  },\n\n  registerFormCallbacks: function() {\n    Form.getElements(this.element).each(this.registerCallback, this);\n  },\n\n  registerCallback: function(element) {\n    if (element.type) {\n      switch (element.type.toLowerCase()) {\n        case 'checkbox':\n        case 'radio':\n          Event.observe(element, 'click', this.onElementEvent.bind(this));\n          break;\n        default:\n          Event.observe(element, 'change', this.onElementEvent.bind(this));\n          break;\n      }\n    }\n  }\n});\n\nForm.Element.EventObserver = Class.create(Abstract.EventObserver, {\n  getValue: function() {\n    return Form.Element.getValue(this.element);\n  }\n});\n\nForm.EventObserver = Class.create(Abstract.EventObserver, {\n  getValue: function() {\n    return Form.serialize(this.element);\n  }\n});\n(function() {\n\n  var Event = {\n    KEY_BACKSPACE: 8,\n    KEY_TAB:       9,\n    KEY_RETURN:   13,\n    KEY_ESC:      27,\n    KEY_LEFT:     37,\n    KEY_UP:       38,\n    KEY_RIGHT:    39,\n    KEY_DOWN:     40,\n    KEY_DELETE:   46,\n    KEY_HOME:     36,\n    KEY_END:      35,\n    KEY_PAGEUP:   33,\n    KEY_PAGEDOWN: 34,\n    KEY_INSERT:   45,\n\n    cache: {}\n  };\n\n  var docEl = document.documentElement;\n  var MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED = 'onmouseenter' in docEl\n    && 'onmouseleave' in docEl;\n\n  var _isButton;\n  if (Prototype.Browser.IE) {\n    var buttonMap = { 0: 1, 1: 4, 2: 2 };\n    _isButton = function(event, code) {\n      return event.button === buttonMap[code];\n    };\n  } else if (Prototype.Browser.WebKit) {\n    _isButton = function(event, code) {\n      switch (code) {\n        case 0: return event.which == 1 && !event.metaKey;\n        case 1: return event.which == 1 && event.metaKey;\n        default: return false;\n      }\n    };\n  } else {\n    _isButton = function(event, code) {\n      return event.which ? (event.which === code + 1) : (event.button === code);\n    };\n  }\n\n  function isLeftClick(event)   { return _isButton(event, 0) }\n\n  function isMiddleClick(event) { return _isButton(event, 1) }\n\n  function isRightClick(event)  { return _isButton(event, 2) }\n\n  function element(event) {\n    event = Event.extend(event);\n\n    var node = event.target, type = event.type,\n     currentTarget = event.currentTarget;\n\n    if (currentTarget && currentTarget.tagName) {\n      if (type === 'load' || type === 'error' ||\n        (type === 'click' && currentTarget.tagName.toLowerCase() === 'input'\n          && currentTarget.type === 'radio'))\n            node = currentTarget;\n    }\n\n    if (node.nodeType == Node.TEXT_NODE)\n      node = node.parentNode;\n\n    return Element.extend(node);\n  }\n\n  function findElement(event, expression) {\n    var element = Event.element(event);\n    if (!expression) return element;\n    var elements = [element].concat(element.ancestors());\n    return Selector.findElement(elements, expression, 0);\n  }\n\n  function pointer(event) {\n    return { x: pointerX(event), y: pointerY(event) };\n  }\n\n  function pointerX(event) {\n    var docElement = document.documentElement,\n     body = document.body || { scrollLeft: 0 };\n\n    return event.pageX || (event.clientX +\n      (docElement.scrollLeft || body.scrollLeft) -\n      (docElement.clientLeft || 0));\n  }\n\n  function pointerY(event) {\n    var docElement = document.documentElement,\n     body = document.body || { scrollTop: 0 };\n\n    return  event.pageY || (event.clientY +\n       (docElement.scrollTop || body.scrollTop) -\n       (docElement.clientTop || 0));\n  }\n\n\n  function stop(event) {\n    Event.extend(event);\n    event.preventDefault();\n    event.stopPropagation();\n\n    event.stopped = true;\n  }\n\n  Event.Methods = {\n    isLeftClick: isLeftClick,\n    isMiddleClick: isMiddleClick,\n    isRightClick: isRightClick,\n\n    element: element,\n    findElement: findElement,\n\n    pointer: pointer,\n    pointerX: pointerX,\n    pointerY: pointerY,\n\n    stop: stop\n  };\n\n\n  var methods = Object.keys(Event.Methods).inject({ }, function(m, name) {\n    m[name] = Event.Methods[name].methodize();\n    return m;\n  });\n\n  if (Prototype.Browser.IE) {\n    function _relatedTarget(event) {\n      var element;\n      switch (event.type) {\n        case 'mouseover': element = event.fromElement; break;\n        case 'mouseout':  element = event.toElement;   break;\n        default: return null;\n      }\n      return Element.extend(element);\n    }\n\n    Object.extend(methods, {\n      stopPropagation: function() { this.cancelBubble = true },\n      preventDefault:  function() { this.returnValue = false },\n      inspect: function() { return '[object Event]' }\n    });\n\n    Event.extend = function(event, element) {\n      if (!event) return false;\n      if (event._extendedByPrototype) return event;\n\n      event._extendedByPrototype = Prototype.emptyFunction;\n      var pointer = Event.pointer(event);\n\n      Object.extend(event, {\n        target: event.srcElement || element,\n        relatedTarget: _relatedTarget(event),\n        pageX:  pointer.x,\n        pageY:  pointer.y\n      });\n\n      return Object.extend(event, methods);\n    };\n  } else {\n    Event.prototype = window.Event.prototype || document.createEvent('HTMLEvents').__proto__;\n    Object.extend(Event.prototype, methods);\n    Event.extend = Prototype.K;\n  }\n\n  function _createResponder(element, eventName, handler) {\n    var registry = Element.retrieve(element, 'prototype_event_registry');\n\n    if (Object.isUndefined(registry)) {\n      CACHE.push(element);\n      registry = Element.retrieve(element, 'prototype_event_registry', $H());\n    }\n\n    var respondersForEvent = registry.get(eventName);\n    if (Object.isUndefined(respondersForEvent)) {\n      respondersForEvent = [];\n      registry.set(eventName, respondersForEvent);\n    }\n\n    if (respondersForEvent.pluck('handler').include(handler)) return false;\n\n    var responder;\n    if (eventName.include(\":\")) {\n      responder = function(event) {\n        if (Object.isUndefined(event.eventName))\n          return false;\n\n        if (event.eventName !== eventName)\n          return false;\n\n        Event.extend(event, element);\n        handler.call(element, event);\n      };\n    } else {\n      if (!MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED &&\n       (eventName === \"mouseenter\" || eventName === \"mouseleave\")) {\n        if (eventName === \"mouseenter\" || eventName === \"mouseleave\") {\n          responder = function(event) {\n            Event.extend(event, element);\n\n            var parent = event.relatedTarget;\n            while (parent && parent !== element) {\n              try { parent = parent.parentNode; }\n              catch(e) { parent = element; }\n            }\n\n            if (parent === element) return;\n\n            handler.call(element, event);\n          };\n        }\n      } else {\n        responder = function(event) {\n          Event.extend(event, element);\n          handler.call(element, event);\n        };\n      }\n    }\n\n    responder.handler = handler;\n    respondersForEvent.push(responder);\n    return responder;\n  }\n\n  function _destroyCache() {\n    for (var i = 0, length = CACHE.length; i < length; i++) {\n      Event.stopObserving(CACHE[i]);\n      CACHE[i] = null;\n    }\n  }\n\n  var CACHE = [];\n\n  if (Prototype.Browser.IE)\n    window.attachEvent('onunload', _destroyCache);\n\n  if (Prototype.Browser.WebKit)\n    window.addEventListener('unload', Prototype.emptyFunction, false);\n\n\n  var _getDOMEventName = Prototype.K;\n\n  if (!MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED) {\n    _getDOMEventName = function(eventName) {\n      var translations = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" };\n      return eventName in translations ? translations[eventName] : eventName;\n    };\n  }\n\n  function observe(element, eventName, handler) {\n    element = $(element);\n\n    var responder = _createResponder(element, eventName, handler);\n\n    if (!responder) return element;\n\n    if (eventName.include(':')) {\n      if (element.addEventListener)\n        element.addEventListener(\"dataavailable\", responder, false);\n      else {\n        element.attachEvent(\"ondataavailable\", responder);\n        element.attachEvent(\"onfilterchange\", responder);\n      }\n    } else {\n      var actualEventName = _getDOMEventName(eventName);\n\n      if (element.addEventListener)\n        element.addEventListener(actualEventName, responder, false);\n      else\n        element.attachEvent(\"on\" + actualEventName, responder);\n    }\n\n    return element;\n  }\n\n  function stopObserving(element, eventName, handler) {\n    element = $(element);\n\n    var registry = Element.retrieve(element, 'prototype_event_registry');\n\n    if (Object.isUndefined(registry)) return element;\n\n    if (eventName && !handler) {\n      var responders = registry.get(eventName);\n\n      if (Object.isUndefined(responders)) return element;\n\n      responders.each( function(r) {\n        Element.stopObserving(element, eventName, r.handler);\n      });\n      return element;\n    } else if (!eventName) {\n      registry.each( function(pair) {\n        var eventName = pair.key, responders = pair.value;\n\n        responders.each( function(r) {\n          Element.stopObserving(element, eventName, r.handler);\n        });\n      });\n      return element;\n    }\n\n    var responders = registry.get(eventName);\n\n    if (!responders) return;\n\n    var responder = responders.find( function(r) { return r.handler === handler; });\n    if (!responder) return element;\n\n    var actualEventName = _getDOMEventName(eventName);\n\n    if (eventName.include(':')) {\n      if (element.removeEventListener)\n        element.removeEventListener(\"dataavailable\", responder, false);\n      else {\n        element.detachEvent(\"ondataavailable\", responder);\n        element.detachEvent(\"onfilterchange\",  responder);\n      }\n    } else {\n      if (element.removeEventListener)\n        element.removeEventListener(actualEventName, responder, false);\n      else\n        element.detachEvent('on' + actualEventName, responder);\n    }\n\n    registry.set(eventName, responders.without(responder));\n\n    return element;\n  }\n\n  function fire(element, eventName, memo, bubble) {\n    element = $(element);\n\n    if (Object.isUndefined(bubble))\n      bubble = true;\n\n    if (element == document && document.createEvent && !element.dispatchEvent)\n      element = document.documentElement;\n\n    var event;\n    if (document.createEvent) {\n      event = document.createEvent('HTMLEvents');\n      event.initEvent('dataavailable', true, true);\n    } else {\n      event = document.createEventObject();\n      event.eventType = bubble ? 'ondataavailable' : 'onfilterchange';\n    }\n\n    event.eventName = eventName;\n    event.memo = memo || { };\n\n    if (document.createEvent)\n      element.dispatchEvent(event);\n    else\n      element.fireEvent(event.eventType, event);\n\n    return Event.extend(event);\n  }\n\n\n  Object.extend(Event, Event.Methods);\n\n  Object.extend(Event, {\n    fire:          fire,\n    observe:       observe,\n    stopObserving: stopObserving\n  });\n\n  Element.addMethods({\n    fire:          fire,\n\n    observe:       observe,\n\n    stopObserving: stopObserving\n  });\n\n  Object.extend(document, {\n    fire:          fire.methodize(),\n\n    observe:       observe.methodize(),\n\n    stopObserving: stopObserving.methodize(),\n\n    loaded:        false\n  });\n\n  if (window.Event) Object.extend(window.Event, Event);\n  else window.Event = Event;\n})();\n\n(function() {\n  /* Support for the DOMContentLoaded event is based on work by Dan Webb,\n     Matthias Miller, Dean Edwards, John Resig, and Diego Perini. */\n\n  var timer;\n\n  function fireContentLoadedEvent() {\n    if (document.loaded) return;\n    if (timer) window.clearTimeout(timer);\n    document.loaded = true;\n    document.fire('dom:loaded');\n  }\n\n  function checkReadyState() {\n    if (document.readyState === 'complete') {\n      document.stopObserving('readystatechange', checkReadyState);\n      fireContentLoadedEvent();\n    }\n  }\n\n  function pollDoScroll() {\n    try { document.documentElement.doScroll('left'); }\n    catch(e) {\n      timer = pollDoScroll.defer();\n      return;\n    }\n    fireContentLoadedEvent();\n  }\n\n  if (document.addEventListener) {\n    document.addEventListener('DOMContentLoaded', fireContentLoadedEvent, false);\n  } else {\n    document.observe('readystatechange', checkReadyState);\n    if (window == top)\n      timer = pollDoScroll.defer();\n  }\n\n  Event.observe(window, 'load', fireContentLoadedEvent);\n})();\n\nElement.addMethods();\n\n/*------------------------------- DEPRECATED -------------------------------*/\n\nHash.toQueryString = Object.toQueryString;\n\nvar Toggle = { display: Element.toggle };\n\nElement.Methods.childOf = Element.Methods.descendantOf;\n\nvar Insertion = {\n  Before: function(element, content) {\n    return Element.insert(element, {before:content});\n  },\n\n  Top: function(element, content) {\n    return Element.insert(element, {top:content});\n  },\n\n  Bottom: function(element, content) {\n    return Element.insert(element, {bottom:content});\n  },\n\n  After: function(element, content) {\n    return Element.insert(element, {after:content});\n  }\n};\n\nvar $continue = new Error('\"throw $continue\" is deprecated, use \"return\" instead');\n\nvar Position = {\n  includeScrollOffsets: false,\n\n  prepare: function() {\n    this.deltaX =  window.pageXOffset\n                || document.documentElement.scrollLeft\n                || document.body.scrollLeft\n                || 0;\n    this.deltaY =  window.pageYOffset\n                || document.documentElement.scrollTop\n                || document.body.scrollTop\n                || 0;\n  },\n\n  within: function(element, x, y) {\n    if (this.includeScrollOffsets)\n      return this.withinIncludingScrolloffsets(element, x, y);\n    this.xcomp = x;\n    this.ycomp = y;\n    this.offset = Element.cumulativeOffset(element);\n\n    return (y >= this.offset[1] &&\n            y <  this.offset[1] + element.offsetHeight &&\n            x >= this.offset[0] &&\n            x <  this.offset[0] + element.offsetWidth);\n  },\n\n  withinIncludingScrolloffsets: function(element, x, y) {\n    var offsetcache = Element.cumulativeScrollOffset(element);\n\n    this.xcomp = x + offsetcache[0] - this.deltaX;\n    this.ycomp = y + offsetcache[1] - this.deltaY;\n    this.offset = Element.cumulativeOffset(element);\n\n    return (this.ycomp >= this.offset[1] &&\n            this.ycomp <  this.offset[1] + element.offsetHeight &&\n            this.xcomp >= this.offset[0] &&\n            this.xcomp <  this.offset[0] + element.offsetWidth);\n  },\n\n  overlap: function(mode, element) {\n    if (!mode) return 0;\n    if (mode == 'vertical')\n      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /\n        element.offsetHeight;\n    if (mode == 'horizontal')\n      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /\n        element.offsetWidth;\n  },\n\n\n  cumulativeOffset: Element.Methods.cumulativeOffset,\n\n  positionedOffset: Element.Methods.positionedOffset,\n\n  absolutize: function(element) {\n    Position.prepare();\n    return Element.absolutize(element);\n  },\n\n  relativize: function(element) {\n    Position.prepare();\n    return Element.relativize(element);\n  },\n\n  realOffset: Element.Methods.cumulativeScrollOffset,\n\n  offsetParent: Element.Methods.getOffsetParent,\n\n  page: Element.Methods.viewportOffset,\n\n  clone: function(source, target, options) {\n    options = options || { };\n    return Element.clonePosition(target, source, options);\n  }\n};\n\n/*--------------------------------------------------------------------------*/\n\nif (!document.getElementsByClassName) document.getElementsByClassName = function(instanceMethods){\n  function iter(name) {\n    return name.blank() ? null : \"[contains(concat(' ', @class, ' '), ' \" + name + \" ')]\";\n  }\n\n  instanceMethods.getElementsByClassName = Prototype.BrowserFeatures.XPath ?\n  function(element, className) {\n    className = className.toString().strip();\n    var cond = /\\s/.test(className) ? $w(className).map(iter).join('') : iter(className);\n    return cond ? document._getElementsByXPath('.//*' + cond, element) : [];\n  } : function(element, className) {\n    className = className.toString().strip();\n    var elements = [], classNames = (/\\s/.test(className) ? $w(className) : null);\n    if (!classNames && !className) return elements;\n\n    var nodes = $(element).getElementsByTagName('*');\n    className = ' ' + className + ' ';\n\n    for (var i = 0, child, cn; child = nodes[i]; i++) {\n      if (child.className && (cn = ' ' + child.className + ' ') && (cn.include(className) ||\n          (classNames && classNames.all(function(name) {\n            return !name.toString().blank() && cn.include(' ' + name + ' ');\n          }))))\n        elements.push(Element.extend(child));\n    }\n    return elements;\n  };\n\n  return function(className, parentElement) {\n    return $(parentElement || document.body).getElementsByClassName(className);\n  };\n}(Element.Methods);\n\n/*--------------------------------------------------------------------------*/\n\nElement.ClassNames = Class.create();\nElement.ClassNames.prototype = {\n  initialize: function(element) {\n    this.element = $(element);\n  },\n\n  _each: function(iterator) {\n    this.element.className.split(/\\s+/).select(function(name) {\n      return name.length > 0;\n    })._each(iterator);\n  },\n\n  set: function(className) {\n    this.element.className = className;\n  },\n\n  add: function(classNameToAdd) {\n    if (this.include(classNameToAdd)) return;\n    this.set($A(this).concat(classNameToAdd).join(' '));\n  },\n\n  remove: function(classNameToRemove) {\n    if (!this.include(classNameToRemove)) return;\n    this.set($A(this).without(classNameToRemove).join(' '));\n  },\n\n  toString: function() {\n    return $A(this).join(' ');\n  }\n};\n\nObject.extend(Element.ClassNames.prototype, Enumerable);\n\n/*--------------------------------------------------------------------------*/"}}
